<?xml version="1.0" encoding="euc-kr" ?>

<!DOCTYPE sqlMapConfig      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map Config 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-config-2.dtd">

<sqlMapConfig>

  <settings cacheModelsEnabled="true" enhancementEnabled="true" lazyLoadingEnabled="true" maxRequests="512" maxSessions="32" maxTransactions="32" useStatementNamespaces="true"/>

  <typeHandler callback="com.ibatis.sqlmap.engine.type.SqlTimestampTypeHandler" javaType="java.util.Date"/>

  <!-- Configure a built-in transaction manager.  If you're using an 
       app server, you probably want to use its transaction manager 
       and a managed datasource -->
  <transactionManager type="JDBC" commitRequired="false">
    <dataSource type="SIMPLE">
		  <!-- JDBC드라이버 -->
		  <property name="JDBC.Driver" value="oracle.jdbc.driver.OracleDriver"/>	 
		  <!-- DB접속 정보 -->
		  <property name="JDBC.ConnectionURL" value="jdbc:oracle:thin:@DB서버아이피:포트:SID"/>  
		  <!-- 접속 계정 -->
		  <property name="JDBC.Username" value="계정"/>
		  <!-- 접속 암호 -->
		  <property name="JDBC.Password" value="암호"/>
    </dataSource>
  </transactionManager>

  <!-- sqlMap  file loading -->
  <!-- sqlMap url="file:///c:/config/Customer.xml"/>
  <sqlMap url="file:///c:/config/Account.xml"/>
  <sqlMap url="file:///c:/config/Product.xml"/ -->
  
  <!-- List the SQL Map XML files. They can be loaded from the 
       classpath, as they are here (com.domain.data...) -->

  <sqlMap resource="ibatis/conf/sql_sample.xml"/>	 <!-- SQL이 들어있는 XML을 지정해 준다. -->

</sqlMapConfig>
