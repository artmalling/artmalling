<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : KHJ
 * 회 사 명 : 한국후지쯔
 * 작 성 일 : 2016.11.01
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  회원조회
 -->
<service name="/dctm505.dm">
    <gauce name="H_MASTER"> 
        <column colName="CUST_ID"		colType="TB_STRING"  size="20"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="CUST_NAME"		colType="TB_STRING"  size="20"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="HP_NO"    		colType="TB_STRING"  size="20"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="CUST_PT"      	colType="TB_STRING"  size="30"  	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="CHK"     		colType="TB_STRING"  size="3" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="ERR"     		colType="TB_STRING"  size="3000" 	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="MSG"     		colType="TB_STRING"  size="3000" 	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SUBJ"     		colType="TB_STRING"  size="100" 	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="RTN_NO"   		colType="TB_STRING"  size="30" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="TOT_ROW"  		colType="TB_STRING"  size="30" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="ROW_NUM"  		colType="TB_DECIMAL" size="30" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
    </gauce>
    
    <gauce name="H_MASTER2"> 
        <column colName="CHK"     		colType="TB_STRING"  size="3" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="REG_ID"		colType="TB_STRING"  size="50"  	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="REG_DATE"		colType="TB_STRING"  size="20"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="REG_CNT"    	colType="TB_DECIMAL" size="12"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="MSG"     		colType="TB_STRING"  size="3000" 	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SUBJ"     		colType="TB_STRING"  size="100" 	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SEND_GB"     	colType="TB_STRING"  size="3" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SEND_YN"     	colType="TB_STRING"  size="20" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SEND_FLAG"    	colType="TB_STRING"  size="3" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="TRAN_GRP"    	colType="TB_STRING"  size="13" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
    </gauce>
    
      
    <gauce name="H_EXCELTEMP"> 
        <column colName="CUST_ID"		colType="TB_STRING"  size="20"   dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="CUST_NAME"		colType="TB_STRING"  size="20"   dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="HP_NO"    		colType="TB_STRING"  size="20"   dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="CUST_PT"      	colType="TB_STRING"  size="30"  dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
    </gauce>
    
    
    
    <gauce name="H_CONTENT"> 
        <column colName="MSG"		colType="TB_STRING"  size="5000"   dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
    </gauce>    


	<gauce name="H_ONLINE"> 
        <column colName="MAEJANG_NAME"		colType="TB_STRING"  size="16"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="HP_NO"    			colType="TB_STRING"  size="20"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="TOT_AMT"    		colType="TB_DECIMAL" size="12"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SALE_AMT"    		colType="TB_DECIMAL" size="12"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SALE_CNT"    		colType="TB_DECIMAL" size="12"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="REG_CNT"    		colType="TB_DECIMAL" size="12"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="RANK"    			colType="TB_DECIMAL"  size="12"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="CHK"     			colType="TB_STRING"  size="3" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="SUBJ"     			colType="TB_STRING"  size="100" 	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="RTN_NO"   			colType="TB_STRING"  size="30" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
        <column colName="ROW_NUM"  			colType="TB_DECIMAL" size="30" 		dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
    </gauce>
    
    <gauce name="H_SEL_SEQ"> 
        <column colName="SEQ_NO"		colType="TB_STRING"  size="20"   	dec="0"  keyType="TB_NORMAL"  roundMode="ROUND" />
    </gauce>

    <!-- 회원탈퇴등록 리스트 조회 -->
    <query name="SEL_MASTER">   
        <![CDATA[    
          
			SELECT A.GRP_SEQ                                                                  AS GRP_SEQ
			       , MIN(A.TRAN_DATE)                                                           AS TRAN_DATE
			       , NULL                                                                     AS REQ_PART
			       , NULL                                                                     AS TRAN_GUBUN
				   , MIN(A.MMS_SUBJECT)          	                                              AS SMS_SUBJ
			       , MIN(A.MMS_BODY)                                                            AS SMS_CONT
			       , COUNT(A.TRAN_SEQ)                                                          AS TRAN_REQ_CNT
			       , COUNT(DECODE(A.TRAN_STATUS,'3',DECODE(A.TRAN_RSLT,'0',A.TRAN_SEQ,NULL),NULL))  AS TRAN_CNT
			       , SUM(DECODE(A.TRAN_STATUS,'3',DECODE(A.TRAN_RSLT,'0',A.CHG_AMT,0),0))           AS PURE_AMT
			       , SUM(DECODE(A.TRAN_STATUS,'3',DECODE(A.TRAN_RSLT,'0',A.CHG_AMT,0),0))/10        AS VAT
			       , SUM(DECODE(A.TRAN_STATUS,'3',DECODE(A.TRAN_RSLT,'0',A.CHG_AMT,0),0))*1.1       AS TOT_AMT
			       , NVL(MIN((SELECT USER_NAME FROM COM.TC_USRMST WHERE USER_ID = A.REG_ID )), MIN(A.REG_ID) ) AS REG_ID
       			   , NVL(MIN((SELECT USER_NAME FROM COM.TC_USRMST WHERE USER_ID = A.TRAN_ID )), MIN(A.TRAN_ID) ) AS TRAN_ID
       			   , MIN(A.REG_DATE) AS REG_DATE
       			   , MIN(A.TRAN_TYPE2) AS TRAN_TYPE
			  FROM 
			  (
			  SELECT A.TRAN_PR                                          AS TRAN_SEQ
			       , C.S_SSQL                                           AS GRP_SEQ
			       , TO_CHAR(A.TRAN_DATE,'YYYYMMDD')                    AS TRAN_DATE
			       , A.TRAN_STATUS                                      AS TRAN_STATUS
			       , A.TRAN_TYPE                                        AS TRAN_TYPE
			       , DECODE(B.MMS_SUBJECT,NULL,C.S_TITLE,B.MMS_SUBJECT) AS MMS_SUBJECT
			       , DECODE(B.MMS_BODY, NULL, A.TRAN_MSG, B.MMS_BODY)   AS MMS_BODY
			       , B.FILE_TYPE1                                       AS FILE_TYPE1
			       , TRAN_RSLT                                          AS TRAN_RSLT
			       , CASE WHEN TRAN_TYPE = 4 THEN 10
			              ELSE CASE WHEN TRAN_TYPE=6 AND FILE_TYPE1 IS NULL THEN 27
			                        ELSE 90
			                   END
			         END                                                AS CHG_AMT
			       , CASE WHEN TRAN_TYPE = 4 THEN 'SMS'
			              ELSE CASE WHEN TRAN_TYPE=6 AND FILE_TYPE1 IS NULL THEN 'LMS'
			                        ELSE 'MMS'
			                   END
			         END                                                AS TRAN_TYPE2
			       , C.S_ID 											AS REG_ID
			       , C.S_SNAME 											AS TRAN_ID
			       , C.S_DATE                                         AS REG_DATE
        ]]>        
    </query>      

			   
    <query name="SEL_MASTER2">   
        <![CDATA[   
			       , EM_TRAN_MMS@SMS_ART B
			       , SMST@SMS_ART C

			   WHERE 1=1
			     AND A.TRAN_PR <> 0
			     AND A.TRAN_PR = B.MMS_SEQ(+)
			     AND A.TRAN_PR = C.S_SQL (+)
			     ) A
			     GROUP BY GRP_SEQ
			     ORDER BY 1
	]]>        
    </query>
    
    <query name="SEL_MASTER_GRP">   
    <![CDATA[ 
	        SELECT MAX(GRP_SEQ)       AS GRP_SEQ
	         , MAX(TRAN_DATE)     AS TRAN_DATE
	         , MAX(REQ_PART)        AS REQ_PART
	         , MAX(TRAN_GUBUN)      AS TRAN_GUBUN
	         , SMS_SUBJ
	         , MAX(SMS_CONT)        AS SMS_CONT
	         , SUM(TRAN_REQ_CNT)    AS TRAN_REQ_CNT
	         , SUM(TRAN_CNT)        AS TRAN_CNT
	         , SUM(PURE_AMT)        AS PURE_AMT
	         , SUM(VAT)             AS VAT
	         , SUM(TOT_AMT)         AS TOT_AMT
	         , MAX(REG_ID)          AS REG_ID
	         , MAX(TRAN_ID)         AS TRAN_ID
	         , MAX(REG_DATE)        AS REG_DATE
	         , TRAN_TYPE
	     FROM (
	 ]]>        
    </query>
    
    <query name="SEL_MASTER_GRP2">   
    <![CDATA[ 
	        ) GROUP BY SMS_SUBJ, TRAN_TYPE
	 ]]>        
    </query>
    
    
    <query name="SEL_TRANGRP_SEQ">   
    <![CDATA[ 
	        SELECT EM_TRAN_PR.NEXTVAL@SMS_ART SEQ_NO FROM DUAL
	 ]]>        
    </query>
    
    
    <query name="SEL_TRAN_LIST">   
    <![CDATA[ 
		SELECT 'F' CHK
		     , COM.FN_GET_USER_NAME(MAX(S_ID)) REG_ID
		     , MAX(S_DATE) REG_DATE
		     , COUNT(S_SQL) REG_CNT
		     , MAX(S_MEMO) MSG
		     , MAX(S_TITLE) SUBJ
		     , DECODE(COUNT(B.MMS_SEQ),0,'SMS',DECODE(MAX(B.FILE_CNT),0,'LMS','MMS')) SEND_GB
		     , DECODE(MIN(S_BALGU),'0','미발송','발송') SEND_YN
		     , MIN(S_BALGU) SEND_FLAG
		     , A.S_SSQL TRAN_GRP
		FROM SMST@SMS_ART A
		   , EM_TRAN_MMS@SMS_ART B
		WHERE A.S_SQL>0 
		  AND A.S_SSQL>0
		  AND A.S_DATE LIKE ?||'%'
		  AND A.S_EXCGU='1'				-- 프로그램을 통한 발송 등록인 경우 '1', 시스템 자동발송인 경우 '0'
		  AND A.S_SQL = B.MMS_SEQ(+)
		  GROUP BY A.S_SSQL
		  ORDER BY REG_DATE	, S_SSQL  
	  ]]>        
    </query>
    
    <query name="UPD_EMTRAN_ART">   
    <![CDATA[ 
		UPDATE EM_TRAN@SMS_ART
		SET TRAN_STATUS = '1'
		  , TRAN_DATE = SYSDATE
		WHERE TRAN_PR IN (
							SELECT S_SQL
							  FROM SMST@SMS_ART
							 WHERE S_DATE = ?
							   AND S_SSQL = ?
							   AND S_BALGU <>'1'  -- 발송처리 안된 내역만
						)
		  AND TRAN_STATUS = '0' -- 발송처리 안된 내역만 
	  ]]>        
    </query>
    
    <query name="UPD_SMST_ART">   
    <![CDATA[ 
		UPDATE SMST@SMS_ART
		SET S_SNAME = ?		-- 발송자 업데이트
		  , S_BALGU = '1'	-- 발송처리
		WHERE S_DATE = ?
		  AND S_SSQL = ?  
	  ]]>        
    </query>
    

     <!-- 회원 리스트 조회(임시) -->
    <query name="SEL_CUST">   
        <![CDATA[    
            SELECT CUST_ID
            	 , CUST_NAME
            	 , HP_NO
            	 , PT
            	 , 'F' AS CHK
			     , '' AS ERR
			     , ? MSG
			     , ? SUBJ
			     , ? AS RTN_NO
                 , TOT_ROW
                 , ROW_NUM
              FROM (
					SELECT CUST_ID
						 , CUST_NAME
						 , HP_NO
						 , PT
						 , ROW_NUM
						 , TOT_ROW
					  FROM (
							SELECT CUST_ID
							     , CUST_NAME
							     , HP_NO
							     , PT
				                 , COUNT(*) OVER() AS TOT_ROW
				                 , ROW_NUMBER() OVER(ORDER BY PT DESC) AS ROW_NUM
							  FROM (
									SELECT CUST_ID
							     		 , CUST_NAME
							     		 , HP_NO
							    		 , PT
				    		    		 , ROW_NUMBER() OVER(PARTITION BY HP_NO  ORDER BY PT DESC) AS SEQ
							     	  FROM (
											SELECT CUST_ID
												 , CUST_NAME
												 , HP_NO
												 , PT
											 FROM (
										            SELECT A.CUST_ID
										                 , A.CUST_NAME
										                 , DCS.SC_Crypto_FUN('DEC', MOBILE_PH1)
										                    || DCS.SC_Crypto_FUN('DEC', MOBILE_PH2)
										                    || DCS.SC_Crypto_FUN('DEC', MOBILE_PH3)  AS HP_NO
										                 , D.POINT		AS PT			-- 누적포인트 
										                 , A.ENTR_DT
										              FROM DCS.DM_CUSTOMER A,
										                   DCS.V_DO_CUST_GRADE_CURR B,
										                   DCS.DM_CARD C,
										                   DCS.DO_CUST_TPOINT D
										             WHERE A.CUST_ID = B.CUST_ID
										               AND A.ENTR_PATH_CD = B.BRCH_ID(+)
										               AND A.CUST_ID = C.CUST_ID(+)
										               AND A.CUST_ID = D.CUST_ID
										               AND A.STR_CD LIKE ? || '%' 
										               AND A.ENTR_DT >= ? 
										               AND C.CARD_STAT_CD NOT IN ('2', '4')
										               AND A.SEX_CD LIKE ? || '%'
										               AND D.POINT BETWEEN ? AND ?
										               AND A.SMS_YN LIKE '%' || ? || '%' 
										               AND ( NVL(A.HNEW_ADDR1, ' ') LIKE '%' || ? || '%'
										               	     OR NVL(A.HOME_ADDR1, ' ') LIKE '%' || ? || '%' )
													   AND (TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')) - TO_NUMBER(SUBSTR(NVL(A.BIRTH_DT,'0000'),1,4)) + 1) BETWEEN ? AND ? -- 나이										               	     
								             	  )
				              	     WHERE ENTR_DT <= ?
				              	       AND HP_NO IS NOT NULL
				           				)
						 			)
					     	WHERE SEQ = 1
					     	  AND PT IS NOT NULL
					     ORDER BY PT DESC
				      	) 
				   )
			  WHERE ROW_NUM <= ?
        ]]>        
    </query>  
    
    
      <!-- 회원 리스트 조회(확정) -->
    <query name="SEL_CUST_REG">   
        <![CDATA[    
					SELECT CUST_ID
						 , CUST_NAME
						 , HP_NO
						 , PT
						 , 'T' AS CHK -- 확정자료이므로 
			     		 , '' AS ERR
			     		 , ? MSG
			     		 , ? SUBJ
			     		 , ? AS RTN_NO
						 , TOT_ROW
					  FROM (
							SELECT CUST_ID
							     , CUST_NAME
							     , HP_NO
							     , PT
				                 , COUNT(*) OVER() AS TOT_ROW
							  FROM (
									SELECT CUST_ID
							     		 , CUST_NAME
							     		 , HP_NO
							    		 , PT
				    		    		 , ROW_NUMBER() OVER(PARTITION BY HP_NO  ORDER BY PT DESC) AS SEQ
							     	  FROM (
											SELECT CUST_ID
												 , CUST_NAME
												 , HP_NO
												 , PT
											 FROM (
										            SELECT A.CUST_ID
										                 , A.CUST_NAME
										                 , DCS.SC_Crypto_FUN('DEC', MOBILE_PH1)
										                    || DCS.SC_Crypto_FUN('DEC', MOBILE_PH2)
										                    || DCS.SC_Crypto_FUN('DEC', MOBILE_PH3)  AS HP_NO
										                 , D.POINT		AS PT			-- 누적포인트 
										                 , A.ENTR_DT
										              FROM DCS.DM_CUSTOMER A,
										                   DCS.V_DO_CUST_GRADE_CURR B,
										                   DCS.DM_CARD C,
										                   DCS.DO_CUST_TPOINT D
										             WHERE A.CUST_ID = B.CUST_ID
										               AND A.ENTR_PATH_CD = B.BRCH_ID(+)
										               AND A.CUST_ID = C.CUST_ID(+)
										               AND A.CUST_ID = D.CUST_ID
										               AND A.STR_CD LIKE ? || '%' 
										               AND A.ENTR_DT >= ? 
										               AND C.CARD_STAT_CD NOT IN ('2', '4')
										               AND A.SEX_CD LIKE ? || '%'
										               AND D.POINT BETWEEN ? AND ?
										               AND A.SMS_YN LIKE '%' || ? || '%' 
										               AND ( NVL(A.HNEW_ADDR1, ' ') LIKE '%' || ? || '%'
										               	     OR NVL(A.HOME_ADDR1, ' ') LIKE '%' || ? || '%' )
								             	  )
				              	     WHERE ENTR_DT <= ?
				              	       AND HP_NO IS NOT NULL
				           				)
						 			)
					     	WHERE SEQ = 1
					     	  AND PT IS NOT NULL
					     ORDER BY PT DESC
					     )
        ]]>        
    </query>  
    
    <!-- 문자발송대기 내역 삭제 - EM_TRAN -->
    <query name="DEL_EMTRAN">   
    <![CDATA[ 
		DELETE FROM EM_TRAN@SMS_ART
		WHERE TRAN_PR IN (
							SELECT S_SQL
							  FROM SMST@SMS_ART
							 WHERE S_DATE = ?
							   AND S_SSQL = ?
							   AND S_BALGU <>'1'  -- 발송처리 안된 내역만
						)
		  AND TRAN_STATUS = '0' -- 발송처리 안된 내역만 
	  ]]>        
    </query>
    
    
    <!-- 문자발송대기 내역 삭제 - EM_TRAN_MMS -->
    <query name="DEL_EMTRAN_MMS">   
    <![CDATA[ 
		DELETE FROM EM_TRAN_MMS@SMS_ART
		WHERE MMS_SEQ IN (
							SELECT S_SQL
							  FROM SMST@SMS_ART
							 WHERE S_DATE = ?
							   AND S_SSQL = ?
							   AND S_BALGU <>'1'  -- 발송처리 안된 내역만
						)
	  ]]>        
    </query>

    <!-- 문자발송대기 내역 삭제 - SMST -->
    <query name="DEL_SMST">   
    <![CDATA[ 
		DELETE
		  FROM SMST@SMS_ART
		 WHERE S_DATE = ?
		   AND S_SSQL = ?
		   AND S_BALGU <>'1'  -- 발송처리 안된 내역만
	  ]]>        
    </query>
    
    <!-- 회원 조건 조회 상단 -->	
    <query name="SEL_CUST_COND_TOP">   
        <![CDATA[    
					SELECT CUST_ID
						 , CUST_NAME
						 , HP_NO
						 , PT
						 , 'T' AS CHK -- 확정자료이므로 
			     		 , '' AS ERR
			     		 , ? MSG
			     		 , ? SUBJ
			     		 , ? AS RTN_NO
						 , TOT_ROW
						 , ROW_NUM
					  FROM (
							SELECT CUST_ID
							     , CUST_NAME
							     , HP_NO
							     , PT
				                 , COUNT(*) OVER() AS TOT_ROW
				                 , ROW_NUMBER() OVER(ORDER BY PT DESC) AS ROW_NUM
							  FROM (
									SELECT CUST_ID
							     		 , CUST_NAME
							     		 , HP_NO
							    		 , PT
				    		    		 , ROW_NUMBER() OVER(PARTITION BY HP_NO  ORDER BY PT DESC) AS SEQ
							     	  FROM (
											SELECT CUST_ID
												 , CUST_NAME
												 , HP_NO
												 , PT
											 FROM ( SELECT   A.CUST_NO AS CUST_ID
														     , MIN(C.CUST_NAME) AS CUST_NAME
														     , MIN(DCS.SC_CRYPTO_FUN('DEC',MOBILE_PH1))
														     ||MIN(DCS.SC_CRYPTO_FUN('DEC',MOBILE_PH2)) 
														     ||MIN(DCS.SC_CRYPTO_FUN('DEC',MOBILE_PH3)) AS HP_NO
														     , MIN(D.POINT) AS PT
											                 , MIN(C.ENTR_DT) AS ENTR_DT
														 FROM DPS.PS_DAYCUST A
														    , DPS.PC_STRPBN B
														    , DCS.DM_CUSTOMER C
														    , DCS.DO_CUST_TPOINT D
											                , DCS.V_DO_CUST_GRADE_CURR E
														WHERE A.STR_CD = ?
														  AND A.SALE_DT BETWEEN ? AND ?     -- 매출기간
														  AND A.STR_CD = B.STR_CD
														  AND A.STR_CD = C.STR_CD
														  AND A.PUMBUN_CD = B.PUMBUN_CD
														  AND A.CUST_NO = C.CUST_ID
														  AND A.CUST_NO = D.CUST_ID(+)
											              AND A.CUST_NO = E.CUST_ID
														  AND C.CUST_STAT_FLAG <> '1'                 	-- 탈퇴여부 (0 정상 1 탈퇴)
														  AND A.CUST_SEX LIKE ?||'%'              		-- 성별
														  AND D.POINT BETWEEN ? AND ?
														  AND A.CUST_AGE BETWEEN ? AND ?            	-- 나이구간
														  AND NVL(C.SMS_YN,'N') LIKE ?||'%'               	-- 문자수신여부 ( Y 수신 N 거부)
														  AND ( NVL(C.HNEW_ADDR1, ' ') LIKE '%' || ? || '%'
										               	     OR NVL(C.HOME_ADDR1, ' ') LIKE '%' || ? || '%' )
											              AND C.ENTR_PATH_CD = E.BRCH_ID(+)
											              AND C.ENTR_DT >= ?
        ]]>        
    </query>  
    
    <!-- 회원 조건 조회(브랜드) -->											              
	<query name="SEL_CUST_COND1">   
        <![CDATA[ 
        												AND A.PUMBUN_CD LIKE ?||'%'				-- 브랜드
        ]]>        
    </query>
    
    <!-- 회원 조건 조회(조직) -->											              
	<query name="SEL_CUST_COND2">   
        <![CDATA[ 
        												AND B.SALE_ORG_CD LIKE ?||'%'    	-- 팀PC파트
        ]]>        
    </query>
    
    <!-- 회원 조건 조회(층) -->											              
	<query name="SEL_CUST_COND3">   
        <![CDATA[ 
        												AND B.FLOR_CD = ?                          	-- 층 CD
        ]]>        
    </query> 
	
	<!-- 회원 조건 조회 하단 -->	
    <query name="SEL_CUST_COND_BOT">   
        <![CDATA[      												
											    
											GROUP BY A.CUST_NO
								             	  )
				              	     WHERE ENTR_DT <= ?
				              	       AND HP_NO IS NOT NULL
				           				)
						 			)
					     	WHERE SEQ = 1
					     	  AND PT IS NOT NULL
					     ORDER BY PT DESC
					     )
					     WHERE ROW_NUM <= ?
        ]]>        
    </query>  
   
</service>