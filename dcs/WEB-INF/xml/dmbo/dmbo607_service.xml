<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자    : 김영진
 * 회 사 명    : 
 * 작 성 일    : 2010.03.03
 * 변 경 일    : 
 * 변경내용 : 
 * 개    요       :  상품권 교환 현황표 조회
 -->
<service name="/dmbo607.do"> 

    <!-- 상품권 교환 현황표 조회 -->
    <gauce name="H_MASTER"> 
        <column colName="BRCH_ID"        colType="TB_STRING"  size="10"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BRCH_NAME"      colType="TB_STRING"  size="40"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PROC_DT"        colType="TB_STRING"  size="8"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_NAME"      colType="TB_STRING"  size="40"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="MOBILE_PH1"     colType="TB_STRING"  size="96"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="MOBILE_PH2"     colType="TB_STRING"  size="96"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="MOBILE_PH3"     colType="TB_STRING"  size="96"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CARD_NO"        colType="TB_STRING"  size="64"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CONV_POINT"     colType="TB_INT"     size="9"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GIFTCD_AMT"     colType="TB_INT"     size="12"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GIFTCD_NO"      colType="TB_STRING"  size="80"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GIFTCD_NO2"     colType="TB_STRING"  size="1000"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CNT"      		 colType="TB_INT"     size="100"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
    </gauce>
    
    <!-- 상품권 교환 현황표 조회 -->
    <query name="SEL_MASTER">        
        <![CDATA[
            SELECT A.BRCH_ID
                 , C.BRCH_NAME
                 , A.PROC_DT
                 ,NVL(E.CUST_NAME,
		            (SELECT CUST_NAME FROM DCS.DM_CUSTOMER X WHERE CUST_ID IN 
		            (SELECT MAX(CUST_ID) FROM DCS.DM_CARD Y WHERE CARD_NO IN
		                ((SELECT MAX(CARD_NO) FROM DCS.DM_LINK_CARD Z WHERE Z.LINK_CARD_NO = D.CARD_NO))))
		                ||'(연계카드)') CUST_NAME 
                 , DCS.SC_Crypto_FUN('DEC', E.MOBILE_PH1) AS MOBILE_PH1
                 , DCS.SC_Crypto_FUN('DEC', E.MOBILE_PH2) AS MOBILE_PH2
                 , DCS.SC_Crypto_FUN('DEC', E.MOBILE_PH3) AS MOBILE_PH3
                 , DCS.F_DECRYPTEDSTR_M(DCS.SC_Crypto_FUN('DEC', A.CARD_NO)) CARD_NO
                 , A.CONV_POINT
                 --, 5000 * A.QTY_5 + 10000 * A.QTY_10 + 50000 * A.QTY_50 + 100000 * A.QTY_100 GIFTCD_AMT
                 , A.CONV_GIFT_AMT AS GIFTCD_AMT
                 , CASE WHEN B.GIFTCD_QTY  = 0 THEN B.REP_GIFTCD
                        WHEN B.GIFTCD_QTY  IS NULL THEN '* 확인 필요 *'
                        ELSE B.REP_GIFTCD || '외 ' || TO_CHAR(B.GIFTCD_QTY) || '건' 
                    END GIFTCD_NO
                 , B.GIFTCD_NO2
                 , B.CNT 		  --상품건 수량
              FROM DCS.DO_GIFTCD A
                 , ( 
                     SELECT PROC_DT
                          , CARD_NO
                          , SEQ_NO
                          , MIN(GIFTCARD_NO) REP_GIFTCD
                          , COUNT(*) - 1 GIFTCD_QTY
                          , LISTAGG(GIFTCARD_NO, ', ')WITHIN GROUP (ORDER BY PROC_DT,CARD_NO,SEQ_NO) GIFTCD_NO2
                          , COUNT(*) AS CNT 
                       FROM DCS.DO_GIFTCD_DTL  
                      WHERE PROC_DT BETWEEN ? AND ?
                      GROUP BY PROC_DT, CARD_NO, SEQ_NO
                   ) B    
                 , DCS.DB_BRANCH C
                 , DCS.DM_CARD D
                 , DCS.DM_CUSTOMER E
             WHERE A.PROC_DT  = B.PROC_DT(+)
               AND A.CARD_NO  = B.CARD_NO(+)
               AND A.SEQ_NO   = B.SEQ_NO(+)
               AND A.BRCH_ID  = C.BRCH_ID(+)
               AND A.CARD_NO  = D.CARD_NO(+)
               AND D.CUST_ID  = E.CUST_ID(+)
               AND A.BRCH_ID  = ?
               AND A.PROC_DT BETWEEN ? AND ?
             ORDER BY A.PROC_DT, E.CUST_ID
        ]]>        
    </query>  
    
    <!-- 상품권 교환 현황표 조회 -->
    <query name="SEL_MASTER_REPORT">        
        <![CDATA[
            SELECT A.BRCH_ID
                 , A.BRCH_ID || ' ' || C.BRCH_NAME AS BRCH_NAME
                 , A.PROC_DT
                 , E.CUST_ID || ' ' || E.CUST_NAME AS CUST_NAME
                 , DCS.F_DECRYPTEDSTR_M(A.CARD_NO) CARD_NO
                 , A.CONV_POINT
                 --, 5000 * A.QTY_5 + 10000 * A.QTY_10 + 50000 * A.QTY_50 + 100000 * A.QTY_100 GIFTCD_AMT
                 , A.CONV_GIFT_AMT AS GIFTCD_AMT
                 , B.REP_GIFTCD || '외 ' || TO_CHAR(GIFTCD_QTY) || '건' GIFTCD_NO
                 , B.CNT 	     --상품건 수량
              FROM DCS.DO_GIFTCD A
                 , ( 
                     SELECT PROC_DT
                          , CARD_NO
                          , SEQ_NO
                          , MIN(GIFTCARD_NO) REP_GIFTCD
                          , COUNT(*) - 1 GIFTCD_QTY
                          , COUNT(*) AS CNT 
                       FROM DCS.DO_GIFTCD_DTL  
                      WHERE PROC_DT BETWEEN ? AND ?
                      GROUP BY PROC_DT, CARD_NO, SEQ_NO
                   ) B    
                 , DCS.DB_BRANCH C
                 , DCS.DM_CARD D
                 , DCS.DM_CUSTOMER E
             WHERE A.PROC_DT  = B.PROC_DT
               AND A.CARD_NO  = B.CARD_NO
               AND A.SEQ_NO   = B.SEQ_NO
               AND A.BRCH_ID  = C.BRCH_ID
               AND A.CARD_NO  = D.CARD_NO
               AND D.CUST_ID  = E.CUST_ID
               AND A.BRCH_ID  = ?
               AND A.PROC_DT BETWEEN ? AND ?
             ORDER BY A.PROC_DT, E.CUST_ID
        ]]>        
    </query>  
</service>