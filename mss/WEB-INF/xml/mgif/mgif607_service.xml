<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 이정식
 * 회 사 명 : 
 * 작 성 일 : 2011.04.21
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  가맹점 정산
 -->
<service name="/mgif607.mg">
    <!-- 회수내역 헤더  -->
    <gauce name="H_SEL_COL_DTL">
        <column colName="DRAWL_STR"        colType="TB_STRING"  size="2"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="VEN_CD"           colType="TB_STRING"  size="6"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CHECK_FLAG"       colType="TB_STRING"  size="1"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CAL_YM"           colType="TB_STRING"  size="6"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="STR_NAME"         colType="TB_STRING"  size="40" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="VEN_NAME"         colType="TB_STRING"  size="40" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CAL_QTY1"         colType="TB_DECIMAL" size="7"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CAL_QTY2"         colType="TB_DECIMAL" size="7"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="OUT_PAY_AMT1"     colType="TB_DECIMAL" size="9"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="OUT_PAY_AMT2"     colType="TB_DECIMAL" size="9"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="TOT_OUT_PAY_AMT"  colType="TB_DECIMAL" size="9"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="BRCH_REC_FEE_RATE" colType="TB_DECIMAL" size="5"  dec="2" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="FEE_SUP_AMT"      colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="FEE_VAT_AMT"          colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="FEE_TOT_AMT"          colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CAL_AMT"          colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
    </gauce>
    
    <!-- 정산내역 헤더  -->
    <gauce name="H_SEL_CAL_DTL">
        <column colName="CAL_YM"            colType="TB_STRING"  size="6"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="STR_CD"            colType="TB_STRING"  size="2" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="STR_NAME"          colType="TB_STRING"  size="40" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="VEN_CD"            colType="TB_STRING"  size="6" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="VEN_NAME"          colType="TB_STRING"  size="40" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="BOND_AMT"          colType="TB_DECIMAL" size="7"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="BOND_AMT2"         colType="TB_DECIMAL" size="9"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="REAL_PAY_AMT"      colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="FEE_RATE"          colType="TB_DECIMAL" size="5" dec="2" keyType="TB_NORMAL" roundMode="ROUND"/>
       <column colName="FEE_SUP_AMT"        colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="FEE_VAT_AMT"       colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="FEE_TOT_AMT"       colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CAL_AMT"           colType="TB_DECIMAL" size="12" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
    </gauce>
    
     <!-- 정산상세   -->
    <gauce name="H_SEL_CALDTL">
        <column colName="CHECK_FLAG"       colType="TB_STRING"  size="1"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="CAL_YM"            colType="TB_STRING"  size="6"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="STR_CD"            colType="TB_STRING"  size="2" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="VEN_CD"            colType="TB_STRING"  size="6" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="ALLI_CD"            colType="TB_STRING"  size="6" dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
        <column colName="BOND_AMT2"         colType="TB_DECIMAL" size="9"  dec="0" keyType="TB_NORMAL" roundMode="ROUND"/>
    </gauce>
    
    <!-- 회수내역 조회쿼리-->
    <query name="SEL_COL_DTL">
        <![CDATA[
         
        SELECT DRAWL_STR
             , VEN_CD
             , CHECK_FLAG
             , CAL_YM
             , STR_NAME
             , VEN_NAME
             , SUM(CAL_QTY1) AS CAL_QTY1
             , SUM(CAL_QTY2) AS CAL_QTY2
             , SUM(OUT_PAY_AMT1) AS OUT_PAY_AMT1
             , SUM(OUT_PAY_AMT2) AS OUT_PAY_AMT2
             , SUM(TOT_OUT_PAY_AMT) AS TOT_OUT_PAY_AMT
             , BRCH_REC_FEE_RATE
             , SUM(FEE_SUP_AMT) AS FEE_SUP_AMT
             , SUM(FEE_VAT_AMT)  AS FEE_VAT_AMT
             , SUM(FEE_TOT_AMT) AS FEE_TOT_AMT
             , SUM(CAL_AMT) AS CAL_AMT 
             FROM (
        
        SELECT DRW.DRAWL_STR
             , DRW.VEN_CD
             , 'F'                                                              AS CHECK_FLAG
             , ?                                                                   AS CAL_YM
             , DPS.FN_GET_STORE_NAME(DRW.DRAWL_STR)                             AS STR_NAME
             , DPS.FN_GET_VENDOR_NAME(DRW.VEN_CD)                               AS VEN_NAME
             , DRW.CNT1                                                         AS CAL_QTY1
             , DRW.CNT2                                                         AS CAL_QTY2
             , DRW.DRAWL_AMT1                                                   AS OUT_PAY_AMT1
             , DRW.DRAWL_AMT2                                                   AS OUT_PAY_AMT2
             , DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2                                  AS TOT_OUT_PAY_AMT
             , NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)    AS BRCH_REC_FEE_RATE
             , ROUND((DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) 
                    * NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)  /100)                 AS FEE_SUP_AMT
             , ROUND((ROUND((DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) 
                    * NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)  /100))/10)  AS FEE_VAT_AMT
             , (ROUND((DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) 
                    * NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)  /100)) 
                + (ROUND((ROUND((DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) 
                    * NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)  /100))/10) ) AS FEE_TOT_AMT
             , (DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) - ((ROUND((DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) 
                    * NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)  /100)) 
                + (ROUND((ROUND((DRW.DRAWL_AMT1 + DRW.DRAWL_AMT2) 
                    * NVL(MSS.FN_GET_FEE_RATE('1', DRW.DRAWL_STR, DRW.VEN_CD, DRAWL_DT),0)   /100))/10) )) AS CAL_AMT
          FROM ( SELECT DRAWL_STR
                         ,VEN_CD
                         , DRAWL_DT
                         ,SUM(CNT1) AS CNT1
                         ,SUM(DRAWL_AMT1) AS DRAWL_AMT1
                         ,SUM(CNT2) AS CNT2
                         ,SUM(DRAWL_AMT2) AS DRAWL_AMT2
                        FROM (SELECT STR_CD AS DRAWL_STR
                                              , VEN_CD
                                              , DRAWL_DT
                                              , 0 AS CNT1
                                              , 0 AS DRAWL_AMT1
                                              , SUM(DRAWL_QTY)      AS CNT2
                                              , SUM(DRAWL_AMT) AS DRAWL_AMT2
                                           FROM MSS.MG_BRCHDRAWL
                                          WHERE STR_CD  = ?
                                            AND VEN_CD LIKE ? || '%'
                                            AND DRAWL_DT BETWEEN ? AND ?
                                          GROUP BY 
                                                STR_CD
                                              , VEN_CD 
                                              , DRAWL_DT
                                              UNION ALL 
                                              SELECT DRAWL_STR
                                              , VEN_CD
                                              , DRAWL_DT
                                              , COUNT(1)       AS CNT1
                                              , SUM(DRAWL_AMT) AS DRAWL_AMT1
                                              , 0 AS CNT2
                                              , 0 AS DRAWL_AMT2
                                           FROM MSS.MG_GIFTDRAWL
                                          WHERE DRAWL_STR  = ?
                                            AND VEN_CD LIKE ? || '%'
                                            AND DRAWL_FLAG = '4'
                                            AND DRAWL_DT BETWEEN ? AND ?
                                          GROUP BY 
                                                DRAWL_STR
                                              , VEN_CD 
                                              , DRAWL_DT)
                                        GROUP BY DRAWL_STR
                                               , VEN_CD     
                                               , DRAWL_DT       ) DRW
                                               
                                               
                                               )
                   GROUP BY DRAWL_STR   
                          , VEN_CD
			             , CHECK_FLAG
			             , CAL_YM
			             , STR_NAME
			             , VEN_NAME
			             , BRCH_REC_FEE_RATE                                                
                ORDER BY VEN_CD
        ]]>
    </query>
    
    <!-- 정산내역 조회쿼리-->
    <query name="SEL_CAL_DTL">
        <![CDATA[
        SELECT CAL_YM
             , STR_CD
             , DPS.FN_GET_STORE_NAME(STR_CD)  AS STR_NAME
             , VEN_CD
             , DPS.FN_GET_VENDOR_NAME(VEN_CD) AS VEN_NAME
             , BOND_AMT
             , BOND_AMT2
             , REAL_PAY_AMT
             , FEE_RATE
             , FEE_SUP_AMT
             , FEE_VAT_AMT
             , FEE_TOT_AMT
             , CAL_AMT
        FROM MSS.MG_VENCAL
        WHERE CAL_TYPE = '2'
          AND PAYREC_FLAG = '1'
          AND CAL_FLAG = '1'
          AND CAL_YM = ?
          AND STR_CD = ?
        ]]>
    </query>
    
    <query name="SEL_CAL_DTL_WHERE_VEN_CD">
        <![CDATA[
           AND VEN_CD   = ?
        ]]>
    </query>
    
    <query name="SEL_CAL_DTL_ORDER">
        <![CDATA[
           ORDER BY VEN_CD
        ]]>
    </query>
    
    <!-- 정산내역 수정 or 신규등록-->
    <query name="UST_JOIN_CAL">
        <![CDATA[
      MERGE INTO MSS.MG_VENCAL A
             USING ( SELECT ? AS CAL_YM
                          , ? AS STR_CD
                          , ? AS VEN_CD
                          , '2' AS CAL_TYPE
                          , '1' AS PAYREC_FLAG 
                          , '1' AS CAL_FLAG
                          , ? AS BOND_AMT
                          , ? AS BOND_AMT2
                          , ? AS REAL_PAY_AMT
                          , ? AS FEE_RATE
                          , ? AS FEE_SUP_AMT
                          , ? AS FEE_VAT_AMT
                          , ? AS FEE_TOT_AMT
                          , ? AS CAL_AMT
                          , ? AS USER_ID
                       FROM DUAL ) B 
                ON (        A.CAL_YM = B.CAL_YM
                        AND A.STR_CD = B.STR_CD
                        AND A.VEN_CD = B.VEN_CD
                        AND A.CAL_TYPE = B.CAL_TYPE
                        AND A.PAYREC_FLAG = B.PAYREC_FLAG
                        AND A.CAL_FLAG = B.CAL_FLAG)
              WHEN MATCHED THEN 
                   UPDATE SET BOND_AMT     = B.BOND_AMT
                            , BOND_AMT2 = B.BOND_AMT2
                            , REAL_PAY_AMT = B.REAL_PAY_AMT
                            , FEE_RATE     = B.FEE_RATE
                            , FEE_SUP_AMT     = B.FEE_SUP_AMT
                            , FEE_VAT_AMT = B.FEE_VAT_AMT
                            , FEE_TOT_AMT = B.FEE_TOT_AMT
                            , CAL_AMT     = B.CAL_AMT
                            , MOD_ID      = B.USER_ID
                            , MOD_DATE    = SYSDATE
              WHEN NOT MATCHED THEN
                   INSERT ( CAL_YM
                          , STR_CD
                          , VEN_CD
                          , CAL_TYPE
                          , PAYREC_FLAG 
                          , CAL_FLAG
                          , BOND_AMT
                          , BOND_AMT2
                          , REAL_PAY_AMT
                          , FEE_RATE
                          , FEE_SUP_AMT
                          , FEE_VAT_AMT
                          , FEE_TOT_AMT
                          , CAL_AMT
                          , REG_ID
                          , REG_DATE
                          , MOD_ID
                          , MOD_DATE ) 
                   VALUES ( B.CAL_YM
                          , B.STR_CD
                          , B.VEN_CD
                          , B.CAL_TYPE
                          , B.PAYREC_FLAG 
                          , B.CAL_FLAG
                          , B.BOND_AMT
                          , B.BOND_AMT2
                          , B.REAL_PAY_AMT
                          , B.FEE_RATE
                          , B.FEE_SUP_AMT
                          , B.FEE_VAT_AMT
                          , B.FEE_TOT_AMT
                          , B.CAL_AMT
                          , B.USER_ID
                          , SYSDATE
                          , B.USER_ID
                          , SYSDATE ) 
        ]]>
    </query>
    
    <!-- 가맹점 정산내역 상세 조회-->
    <query name="SEL_CALDTL">
        <![CDATA[
	  SELECT 'F'     AS CHECK_FLAG
	       , ? AS CAL_YM
	       , A.STR_CD
	       , A.VEN_CD 
	       , B.VEN_CD AS ALLI_CD
	       , SUM(DRAWL_AMT) AS BOND_AMT2
	  FROM MSS.MG_BRCHDRAWL A, MSS.MG_GIFTTPMST B
	  WHERE A.GIFT_TYPE_CD = B.GIFT_TYPE_CD
	    AND A.STR_CD = ?
	    AND DRAWL_DT LIKE ? || '%'
	    AND A.VEN_CD LIKE ? || '%'
	   GROUP BY  A.STR_CD
	       , A.VEN_CD
	       , B.VEN_CD
	  ORDER BY A.VEN_CD
        ]]>
    </query>
    
    
    <!-- 가맹점 정산내역 상세 삭제-->
    <query name="DEL_CALDTL">
        <![CDATA[
        DELETE MSS.MG_VENCALDTL
         WHERE CAL_YM = ?
           AND STR_CD = ?
           AND CAL_TYPE = '2'
           AND VEN_CD = ?
           AND PAYREC_FLAG = '1'
           AND CAL_FLAG = '1'
        ]]>
    </query>
    
    <!-- 가맹점 정산내역 상세 저장-->
    <query name="INS_CALDTL">
        <![CDATA[
		INSERT INTO MSS.MG_VENCALDTL ( CAL_YM 
		                             , STR_CD
		                             , CAL_TYPE
		                             , VEN_CD
		                             , PAYREC_FLAG
		                             , CAL_FLAG
		                             , SEQ_NO
		                             , ALLI_CD
		                             , BOND_AMT2
		                             , REG_ID
		                             , REG_DATE
		                             , MOD_ID
		                             , MOD_DATE )
		                     VALUES (  ? 
		                             , ?
		                             , '2'
		                             , ?
		                             , '1'
		                             , '1'
		                             , (SELECT NVL(MAX(SEQ_NO) ,0) +1
		                                  FROM MSS.MG_VENCALDTL
		                                 WHERE CAL_YM = ?
		                                   AND STR_CD = ?
		                                   AND CAL_TYPE = '2'
		                                   AND VEN_CD = ?
		                                   AND PAYREC_FLAG = '1'
		                                   AND CAL_FLAG = '1')
		                             , ?
		                             , ?
		                             , ?
		                             , SYSDATE
		                             , ?
		                             , SYSDATE)
        ]]>
    </query>
    
    <!-- 정산 내용 변경전 쿼리  사용하지 않음============================================================================================== -->
    <query name="SEL_COL_DTL_OLD">
        <![CDATA[
        SELECT DRW.DRAWL_STR
             , DRW.VEN_CD
             , 'F'                                                              AS CHECK_FLAG
             , ?                                                                AS CAL_YM
             , DPS.FN_GET_STORE_NAME(DRW.DRAWL_STR)                             AS STR_NAME
             , DPS.FN_GET_VENDOR_NAME(DRW.VEN_CD)                               AS VEN_NAME
             , DRW.CNT                                                          AS CAL_QTY
             , DRW.DRAWL_AMT                                                    AS OUT_PAY_AMT
             , FEE.CNS_PAY_FEE_RATE
             , ROUND(DRW.DRAWL_AMT * FEE.CNS_PAY_FEE_RATE /100)                 AS PAY_FEE_AMT
             , DRW.DRAWL_AMT - ROUND(DRW.DRAWL_AMT * FEE.CNS_PAY_FEE_RATE /100) AS CAL_AMT
          FROM ( SELECT DRAWL_STR
                      , VEN_CD
                      , COUNT(1)       AS CNT
                      , SUM(DRAWL_AMT) AS DRAWL_AMT
                   FROM MSS.MG_GIFTDRAWL
                  WHERE DRAWL_STR  = ?
                    AND DRAWL_FLAG = '4'
                    AND DRAWL_DT BETWEEN ? AND ?
                  GROUP BY 
                        DRAWL_STR
                      , VEN_CD 
               ) DRW
             , MSS.MG_VENFEEMST FEE
         WHERE FEE.STR_CD = DRW.DRAWL_STR
           AND FEE.VEN_CD = DRW.VEN_CD
           AND FEE.APP_DT = ( SELECT MAX(APP_DT) 
                                FROM MSS.MG_VENFEEMST
                               WHERE STR_CD = ?
                                 AND VEN_CD = DRW.VEN_CD
                                 AND APP_DT <= ?
                                 AND APP_DT <= TO_CHAR(SYSDATE,'YYYYMMDD') )

        ]]>
    </query>
    
    <!-- 정산내역 조회쿼리-->
    <query name="SEL_CAL_DTL_OLD">
        <![CDATA[
        SELECT CAL_YM
             , DPS.FN_GET_STORE_NAME(STR_CD)  AS STR_NAME
             , DPS.FN_GET_VENDOR_NAME(VEN_CD) AS VEN_NAME
             , CAL_QTY
             , OUT_PAY_AMT
             , PAY_FEE_AMT
             , CAL_AMT
          FROM MSS.MG_JOINCAL
         WHERE CAL_YM   = ?
           AND STR_CD   = ?
           AND CAL_FLAG = '2'
        ]]>
    </query>
    
     <!-- 정산내역 수정 or 신규등록-->
    <query name="UST_JOIN_CAL_OLD">
        <![CDATA[
        MERGE INTO MSS.MG_JOINCAL A
             USING ( SELECT ? AS CAL_YM
                          , ? AS STR_CD
                          , ? AS VEN_CD
                          , ? AS CAL_QTY
                          , ? AS OUT_PAY_AMT
                          , ? AS PAY_FEE_AMT
                          , ? AS CAL_AMT
                          , ? AS USER_ID
                       FROM DUAL ) B 
                ON (        A.CAL_YM = B.CAL_YM
                        AND A.STR_CD = B.STR_CD
                        AND A.VEN_CD = B.VEN_CD )
              WHEN MATCHED THEN 
                   UPDATE SET CAL_QTY     = B.CAL_QTY
                            , OUT_PAY_AMT = B.OUT_PAY_AMT
                            , PAY_FEE_AMT = B.PAY_FEE_AMT
                            , CAL_AMT     = B.CAL_AMT
                            , MOD_ID      = B.USER_ID
                            , MOD_DATE    = SYSDATE
              WHEN NOT MATCHED THEN
                   INSERT ( CAL_YM
                          , STR_CD
                          , VEN_CD
                          , CAL_FLAG
                          , CAL_QTY
                          , OUT_PAY_AMT
                          , PAY_FEE_AMT
                          , CAL_AMT
                          , REG_ID
                          , REG_DATE
                          , MOD_ID
                          , MOD_DATE ) 
                   VALUES ( B.CAL_YM
                          , B.STR_CD
                          , B.VEN_CD
                          , '2'
                          , B.CAL_QTY
                          , B.OUT_PAY_AMT
                          , B.PAY_FEE_AMT
                          , B.CAL_AMT
                          , B.USER_ID
                          , SYSDATE
                          , B.USER_ID
                          , SYSDATE ) 
        ]]>
    </query>
    
    <!-- 정산 내용 변경전 쿼리  사용하지 않음============================================================================================== -->
</service>