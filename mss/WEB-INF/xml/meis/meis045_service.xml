<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 최재형
 * 회 사 명 : 
 * 작 성 일 : 2011.06.27
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  월별조직별손익계획조회
 -->
<service name="/meis045.me">

    <!-- 매출계획조회 헤더  -->
    <gauce name="H_SEL_PROFIT_AND_LOSS_PLAN">
    	<column colName="ORG_NAME"			colType="TB_STRING" 	size="60"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="BIZ_CD"			colType="TB_STRING"		size="6"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="BIZ_CD_NM"			colType="TB_STRING"		size="60"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="GROUP_ID"			colType="TB_STRING" 	size="1"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT"			colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_01"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_02"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_03"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_04"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_05"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_06"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_07"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_08"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_09"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_10"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_11"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PLAN_AMT_12"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT"		colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_01"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_02"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_03"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_04"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_05"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_06"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_07"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_08"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_09"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_10"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_11"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="PRE_RSLT_AMT_12"	colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE"		colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_01"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_02"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_03"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_04"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_05"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_06"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_07"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_08"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_09"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_10"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_11"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
		<column colName="INCREASE_RATE_12"	colType="TB_DECIMAL"	size="13"	dec="2" keyType="TB_NORMAL"    roundMode="ROUND" />
    </gauce>

    <!-- 손익계획조회 -->
    <query name="SEL_PROFIT_AND_LOSS_PLAN">
    <![CDATA[
    	/*******
    	* 손익계획 조회
    	*******/
		SELECT (SELECT ORG.ORG_NAME 
				FROM DPS.PC_ORGMST ORG 
				WHERE ORG.ORG_CD = RPAD(DECODE(?,'%', '00', ?) 
										|| DECODE(?,'%', '00', ?) 
										|| DECODE(?,'%', '00', ?) 
										|| DECODE(?,'%', '00', ?), 10, '00') )		AS ORG_NAME
			  ,MMA.BIZ_CD
          	  ,DECODE(MMA.GROUP_ID, '1', '합계', (SELECT MST.BIZ_CD_NM FROM MSS.ME_BIZCDMST MST WHERE MST.BIZ_CD = MMA.BIZ_CD)) AS BIZ_CD_NM
          	  ,DECODE(MMA.GROUP_ID, '1', '2', '0')                                                                            AS GROUP_ID
		      /* 계획금액 */
		      ,ROUND(MMA.PLAN_AMT,0)				AS PLAN_AMT
		      ,ROUND(MMA.PLAN_AMT_01,0)				AS PLAN_AMT_01
		      ,ROUND(MMA.PLAN_AMT_02,0)				AS PLAN_AMT_02
		      ,ROUND(MMA.PLAN_AMT_03,0)				AS PLAN_AMT_03
		      ,ROUND(MMA.PLAN_AMT_04,0)				AS PLAN_AMT_04
		      ,ROUND(MMA.PLAN_AMT_05,0)				AS PLAN_AMT_05
		      ,ROUND(MMA.PLAN_AMT_06,0)				AS PLAN_AMT_06
		      ,ROUND(MMA.PLAN_AMT_07,0)				AS PLAN_AMT_07
		      ,ROUND(MMA.PLAN_AMT_08,0)				AS PLAN_AMT_08
		      ,ROUND(MMA.PLAN_AMT_09,0)				AS PLAN_AMT_09
		      ,ROUND(MMA.PLAN_AMT_10,0)				AS PLAN_AMT_10
		      ,ROUND(MMA.PLAN_AMT_11,0)				AS PLAN_AMT_11
		      ,ROUND(MMA.PLAN_AMT_12,0)				AS PLAN_AMT_12
		      /* 전년실적금액 */
		      ,ROUND(MMA.PRE_RSLT_AMT,0)			AS PRE_RSLT_AMT
		      ,ROUND(MMA.PRE_RSLT_AMT_01,0)			AS PRE_RSLT_AMT_01
		      ,ROUND(MMA.PRE_RSLT_AMT_02,0)			AS PRE_RSLT_AMT_02
		      ,ROUND(MMA.PRE_RSLT_AMT_03,0)			AS PRE_RSLT_AMT_03
		      ,ROUND(MMA.PRE_RSLT_AMT_04,0)			AS PRE_RSLT_AMT_04
		      ,ROUND(MMA.PRE_RSLT_AMT_05,0)			AS PRE_RSLT_AMT_05
		      ,ROUND(MMA.PRE_RSLT_AMT_06,0)			AS PRE_RSLT_AMT_06
		      ,ROUND(MMA.PRE_RSLT_AMT_07,0)			AS PRE_RSLT_AMT_07
		      ,ROUND(MMA.PRE_RSLT_AMT_08,0)			AS PRE_RSLT_AMT_08
		      ,ROUND(MMA.PRE_RSLT_AMT_09,0)			AS PRE_RSLT_AMT_09
		      ,ROUND(MMA.PRE_RSLT_AMT_10,0)			AS PRE_RSLT_AMT_10
		      ,ROUND(MMA.PRE_RSLT_AMT_11,0)			AS PRE_RSLT_AMT_11
		      ,ROUND(MMA.PRE_RSLT_AMT_12,0)			AS PRE_RSLT_AMT_12
		      /* 증감차 */
		      ,DECODE(MMA.PRE_RSLT_AMT, 0, 0, ROUND((MMA.PLAN_AMT - MMA.PRE_RSLT_AMT)/MMA.PRE_RSLT_AMT * 100,2) )   AS INCREASE_RATE
		      ,DECODE(MMA.PRE_RSLT_AMT_01, 0, 0, ROUND((MMA.PLAN_AMT_01 - MMA.PRE_RSLT_AMT_01)/MMA.PRE_RSLT_AMT_01 * 100,2) )   AS INCREASE_RATE_01
		      ,DECODE(MMA.PRE_RSLT_AMT_02, 0, 0, ROUND((MMA.PLAN_AMT_02 - MMA.PRE_RSLT_AMT_02)/MMA.PRE_RSLT_AMT_02 * 100,2) )   AS INCREASE_RATE_02
		      ,DECODE(MMA.PRE_RSLT_AMT_03, 0, 0, ROUND((MMA.PLAN_AMT_03 - MMA.PRE_RSLT_AMT_03)/MMA.PRE_RSLT_AMT_03 * 100,2) )   AS INCREASE_RATE_03
		      ,DECODE(MMA.PRE_RSLT_AMT_04, 0, 0, ROUND((MMA.PLAN_AMT_04 - MMA.PRE_RSLT_AMT_04)/MMA.PRE_RSLT_AMT_04 * 100,2) )   AS INCREASE_RATE_04
		      ,DECODE(MMA.PRE_RSLT_AMT_05, 0, 0, ROUND((MMA.PLAN_AMT_05 - MMA.PRE_RSLT_AMT_05)/MMA.PRE_RSLT_AMT_05 * 100,2) )   AS INCREASE_RATE_05
		      ,DECODE(MMA.PRE_RSLT_AMT_06, 0, 0, ROUND((MMA.PLAN_AMT_06 - MMA.PRE_RSLT_AMT_06)/MMA.PRE_RSLT_AMT_06 * 100,2) )   AS INCREASE_RATE_06
		      ,DECODE(MMA.PRE_RSLT_AMT_07, 0, 0, ROUND((MMA.PLAN_AMT_07 - MMA.PRE_RSLT_AMT_07)/MMA.PRE_RSLT_AMT_07 * 100,2) )   AS INCREASE_RATE_07
		      ,DECODE(MMA.PRE_RSLT_AMT_08, 0, 0, ROUND((MMA.PLAN_AMT_08 - MMA.PRE_RSLT_AMT_08)/MMA.PRE_RSLT_AMT_08 * 100,2) )   AS INCREASE_RATE_08
		      ,DECODE(MMA.PRE_RSLT_AMT_09, 0, 0, ROUND((MMA.PLAN_AMT_09 - MMA.PRE_RSLT_AMT_09)/MMA.PRE_RSLT_AMT_09 * 100,2) )   AS INCREASE_RATE_09
		      ,DECODE(MMA.PRE_RSLT_AMT_10, 0, 0, ROUND((MMA.PLAN_AMT_10 - MMA.PRE_RSLT_AMT_10)/MMA.PRE_RSLT_AMT_10 * 100,2) )   AS INCREASE_RATE_10
		      ,DECODE(MMA.PRE_RSLT_AMT_11, 0, 0, ROUND((MMA.PLAN_AMT_11 - MMA.PRE_RSLT_AMT_11)/MMA.PRE_RSLT_AMT_11 * 100,2) )   AS INCREASE_RATE_11
		      ,DECODE(MMA.PRE_RSLT_AMT_12, 0, 0, ROUND((MMA.PLAN_AMT_12 - MMA.PRE_RSLT_AMT_12)/MMA.PRE_RSLT_AMT_12 * 100,2) )   AS INCREASE_RATE_12
		FROM (
		      SELECT MA.BIZ_CD
		      		 ,GROUPING(MA.BIZ_CD)                                                            AS GROUP_ID
		             ,SUM(MA.PLAN_AMT)                                                       AS PLAN_AMT
		             ,SUM(DECODE(MA.MONTH, '01', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_01
		             ,SUM(DECODE(MA.MONTH, '02', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_02
		             ,SUM(DECODE(MA.MONTH, '03', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_03
		             ,SUM(DECODE(MA.MONTH, '04', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_04
		             ,SUM(DECODE(MA.MONTH, '05', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_05
		             ,SUM(DECODE(MA.MONTH, '06', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_06
		             ,SUM(DECODE(MA.MONTH, '07', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_07
		             ,SUM(DECODE(MA.MONTH, '08', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_08
		             ,SUM(DECODE(MA.MONTH, '09', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_09
		             ,SUM(DECODE(MA.MONTH, '10', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_10
		             ,SUM(DECODE(MA.MONTH, '11', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_11
		             ,SUM(DECODE(MA.MONTH, '11', MA.PLAN_AMT, 0))                                 AS PLAN_AMT_12
		             ,SUM(MA.PRE_RSLT_AMT)                                                   AS PRE_RSLT_AMT
		             ,SUM(DECODE(MA.MONTH, '01', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_01
		             ,SUM(DECODE(MA.MONTH, '02', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_02
		             ,SUM(DECODE(MA.MONTH, '03', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_03
		             ,SUM(DECODE(MA.MONTH, '04', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_04
		             ,SUM(DECODE(MA.MONTH, '05', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_05
		             ,SUM(DECODE(MA.MONTH, '06', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_06
		             ,SUM(DECODE(MA.MONTH, '07', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_07
		             ,SUM(DECODE(MA.MONTH, '08', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_08
		             ,SUM(DECODE(MA.MONTH, '09', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_09
		             ,SUM(DECODE(MA.MONTH, '10', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_10
		             ,SUM(DECODE(MA.MONTH, '11', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_11
		             ,SUM(DECODE(MA.MONTH, '11', MA.PRE_RSLT_AMT, 0))                                 AS PRE_RSLT_AMT_12
		      FROM (
		            SELECT RPT.BIZ_CD
		                   ,SUBSTR(RPT.BIZ_PLAN_YM,5,2)                                     AS MONTH
		                   ,NVL(RPT.PLAN_AMT,0) + NVL(RPT.SUB_PLAN_AMT, 0)                   AS PLAN_AMT
		                   ,0                                                               AS PRE_RSLT_AMT
		            FROM MSS.ME_BIZPLANRPT RPT WHERE 1 = 1
		            AND RPT.BIZ_PLAN_YEAR = ?
		            AND SUBSTR(RPT.BIZ_CD,3,4) = '0000'
		            AND RPT.STR_CD LIKE ?
		            AND RPT.DEPT_CD LIKE ?
		            AND RPT.TEAM_CD LIKE ?
		            AND RPT.PC_CD LIKE ?
		            UNION ALL
		            SELECT RPT.BIZ_CD
		                   ,SUBSTR(RPT.BIZ_RSLT_YM,5,2)                                     AS MONTH
		                   ,0                                                                AS PLAN_AMT
		                   ,NVL(RPT.RSLT_AMT,0) + NVL(RPT.SUB_RSLT_AMT, 0)                  AS PRE_RSLT_AMT
		            FROM MSS.ME_BIZRSLTRPT RPT WHERE 1 = 1
		            AND SUBSTR(RPT.BIZ_RSLT_YM,1,4) = TO_CHAR(TO_DATE(?, 'YYYY') + NUMTOYMINTERVAL (-1, 'year'), 'YYYY')
		            AND SUBSTR(RPT.BIZ_CD,3,4) = '0000'
		            AND RPT.STR_CD LIKE ?
		            AND RPT.DEPT_CD LIKE ?
		            AND RPT.TEAM_CD LIKE ?
		            AND RPT.PC_CD LIKE ?
		           ) MA
		      GROUP BY ROLLUP(MA.BIZ_CD)
		     ) MMA
		WHERE MMA.GROUP_ID NOT LIKE '%1%' 
    ]]>
    </query>

    <!-- 손익계획조회 -->
    <query name="SEL_PROFIT_AND_LOSS_PLAN_CHART">
    <![CDATA[
    	/*******
    	* 손익계획 차트조회
    	*******/
		SELECT (SELECT ORG.ORG_NAME 
				FROM DPS.PC_ORGMST ORG 
				WHERE ORG.ORG_CD = RPAD(DECODE(?,'%', '00', ?) 
										|| DECODE(?,'%', '00', ?) 
										|| DECODE(?,'%', '00', ?) 
										|| DECODE(?,'%', '00', ?), 10, '00') )		AS ORG_NAME
			  ,MMA.BIZ_CD
          	  ,DECODE(MMA.GROUP_ID, '1', '합계', (SELECT MST.BIZ_CD_NM FROM MSS.ME_BIZCDMST MST WHERE MST.BIZ_CD = MMA.BIZ_CD)) AS BIZ_CD_NM
          	  ,DECODE(MMA.GROUP_ID, '1', '2', '0')                                                                            AS GROUP_ID
		      /* 계획금액 */
		      ,ROUND(MMA.PLAN_AMT,0)				AS PLAN_AMT
		      ,ROUND(MMA.PLAN_AMT_01,0)				AS PLAN_AMT_01
		      ,ROUND(MMA.PLAN_AMT_02,0)				AS PLAN_AMT_02
		      ,ROUND(MMA.PLAN_AMT_03,0)				AS PLAN_AMT_03
		      ,ROUND(MMA.PLAN_AMT_04,0)				AS PLAN_AMT_04
		      ,ROUND(MMA.PLAN_AMT_05,0)				AS PLAN_AMT_05
		      ,ROUND(MMA.PLAN_AMT_06,0)				AS PLAN_AMT_06
		      ,ROUND(MMA.PLAN_AMT_07,0)				AS PLAN_AMT_07
		      ,ROUND(MMA.PLAN_AMT_08,0)				AS PLAN_AMT_08
		      ,ROUND(MMA.PLAN_AMT_09,0)				AS PLAN_AMT_09
		      ,ROUND(MMA.PLAN_AMT_10,0)				AS PLAN_AMT_10
		      ,ROUND(MMA.PLAN_AMT_11,0)				AS PLAN_AMT_11
		      ,ROUND(MMA.PLAN_AMT_12,0)				AS PLAN_AMT_12
		      /* 전년실적금액 */
		      ,ROUND(MMA.PRE_RSLT_AMT,0)			AS PRE_RSLT_AMT
		      ,ROUND(MMA.PRE_RSLT_AMT_01,0)			AS PRE_RSLT_AMT_01
		      ,ROUND(MMA.PRE_RSLT_AMT_02,0)			AS PRE_RSLT_AMT_02
		      ,ROUND(MMA.PRE_RSLT_AMT_03,0)			AS PRE_RSLT_AMT_03
		      ,ROUND(MMA.PRE_RSLT_AMT_04,0)			AS PRE_RSLT_AMT_04
		      ,ROUND(MMA.PRE_RSLT_AMT_05,0)			AS PRE_RSLT_AMT_05
		      ,ROUND(MMA.PRE_RSLT_AMT_06,0)			AS PRE_RSLT_AMT_06
		      ,ROUND(MMA.PRE_RSLT_AMT_07,0)			AS PRE_RSLT_AMT_07
		      ,ROUND(MMA.PRE_RSLT_AMT_08,0)			AS PRE_RSLT_AMT_08
		      ,ROUND(MMA.PRE_RSLT_AMT_09,0)			AS PRE_RSLT_AMT_09
		      ,ROUND(MMA.PRE_RSLT_AMT_10,0)			AS PRE_RSLT_AMT_10
		      ,ROUND(MMA.PRE_RSLT_AMT_11,0)			AS PRE_RSLT_AMT_11
		      ,ROUND(MMA.PRE_RSLT_AMT_12,0)			AS PRE_RSLT_AMT_12
		      /* 증감차 */
		      ,DECODE(MMA.PRE_RSLT_AMT, 0, 0, ROUND((MMA.PLAN_AMT - MMA.PRE_RSLT_AMT)/MMA.PRE_RSLT_AMT * 100,2) )   AS INCREASE_RATE
		      ,DECODE(MMA.PRE_RSLT_AMT_01, 0, 0, ROUND((MMA.PLAN_AMT_01 - MMA.PRE_RSLT_AMT_01)/MMA.PRE_RSLT_AMT_01 * 100,2) )   AS INCREASE_RATE_01
		      ,DECODE(MMA.PRE_RSLT_AMT_02, 0, 0, ROUND((MMA.PLAN_AMT_02 - MMA.PRE_RSLT_AMT_02)/MMA.PRE_RSLT_AMT_02 * 100,2) )   AS INCREASE_RATE_02
		      ,DECODE(MMA.PRE_RSLT_AMT_03, 0, 0, ROUND((MMA.PLAN_AMT_03 - MMA.PRE_RSLT_AMT_03)/MMA.PRE_RSLT_AMT_03 * 100,2) )   AS INCREASE_RATE_03
		      ,DECODE(MMA.PRE_RSLT_AMT_04, 0, 0, ROUND((MMA.PLAN_AMT_04 - MMA.PRE_RSLT_AMT_04)/MMA.PRE_RSLT_AMT_04 * 100,2) )   AS INCREASE_RATE_04
		      ,DECODE(MMA.PRE_RSLT_AMT_05, 0, 0, ROUND((MMA.PLAN_AMT_05 - MMA.PRE_RSLT_AMT_05)/MMA.PRE_RSLT_AMT_05 * 100,2) )   AS INCREASE_RATE_05
		      ,DECODE(MMA.PRE_RSLT_AMT_06, 0, 0, ROUND((MMA.PLAN_AMT_06 - MMA.PRE_RSLT_AMT_06)/MMA.PRE_RSLT_AMT_06 * 100,2) )   AS INCREASE_RATE_06
		      ,DECODE(MMA.PRE_RSLT_AMT_07, 0, 0, ROUND((MMA.PLAN_AMT_07 - MMA.PRE_RSLT_AMT_07)/MMA.PRE_RSLT_AMT_07 * 100,2) )   AS INCREASE_RATE_07
		      ,DECODE(MMA.PRE_RSLT_AMT_08, 0, 0, ROUND((MMA.PLAN_AMT_08 - MMA.PRE_RSLT_AMT_08)/MMA.PRE_RSLT_AMT_08 * 100,2) )   AS INCREASE_RATE_08
		      ,DECODE(MMA.PRE_RSLT_AMT_09, 0, 0, ROUND((MMA.PLAN_AMT_09 - MMA.PRE_RSLT_AMT_09)/MMA.PRE_RSLT_AMT_09 * 100,2) )   AS INCREASE_RATE_09
		      ,DECODE(MMA.PRE_RSLT_AMT_10, 0, 0, ROUND((MMA.PLAN_AMT_10 - MMA.PRE_RSLT_AMT_10)/MMA.PRE_RSLT_AMT_10 * 100,2) )   AS INCREASE_RATE_10
		      ,DECODE(MMA.PRE_RSLT_AMT_11, 0, 0, ROUND((MMA.PLAN_AMT_11 - MMA.PRE_RSLT_AMT_11)/MMA.PRE_RSLT_AMT_11 * 100,2) )   AS INCREASE_RATE_11
		      ,DECODE(MMA.PRE_RSLT_AMT_12, 0, 0, ROUND((MMA.PLAN_AMT_12 - MMA.PRE_RSLT_AMT_12)/MMA.PRE_RSLT_AMT_12 * 100,2) )   AS INCREASE_RATE_12
		FROM (
		      SELECT MA.BIZ_CD
		      		 ,GROUPING(MA.BIZ_CD)                                                            AS GROUP_ID
		             ,SUM(MA.PLAN_AMT)/1000000                                                       AS PLAN_AMT
		             ,SUM(DECODE(MA.MONTH, '01', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_01
		             ,SUM(DECODE(MA.MONTH, '02', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_02
		             ,SUM(DECODE(MA.MONTH, '03', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_03
		             ,SUM(DECODE(MA.MONTH, '04', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_04
		             ,SUM(DECODE(MA.MONTH, '05', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_05
		             ,SUM(DECODE(MA.MONTH, '06', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_06
		             ,SUM(DECODE(MA.MONTH, '07', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_07
		             ,SUM(DECODE(MA.MONTH, '08', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_08
		             ,SUM(DECODE(MA.MONTH, '09', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_09
		             ,SUM(DECODE(MA.MONTH, '10', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_10
		             ,SUM(DECODE(MA.MONTH, '11', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_11
		             ,SUM(DECODE(MA.MONTH, '11', MA.PLAN_AMT, 0))/1000000                                 AS PLAN_AMT_12
		             ,SUM(MA.PRE_RSLT_AMT)/1000000                                                   AS PRE_RSLT_AMT
		             ,SUM(DECODE(MA.MONTH, '01', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_01
		             ,SUM(DECODE(MA.MONTH, '02', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_02
		             ,SUM(DECODE(MA.MONTH, '03', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_03
		             ,SUM(DECODE(MA.MONTH, '04', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_04
		             ,SUM(DECODE(MA.MONTH, '05', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_05
		             ,SUM(DECODE(MA.MONTH, '06', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_06
		             ,SUM(DECODE(MA.MONTH, '07', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_07
		             ,SUM(DECODE(MA.MONTH, '08', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_08
		             ,SUM(DECODE(MA.MONTH, '09', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_09
		             ,SUM(DECODE(MA.MONTH, '10', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_10
		             ,SUM(DECODE(MA.MONTH, '11', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_11
		             ,SUM(DECODE(MA.MONTH, '11', MA.PRE_RSLT_AMT, 0))/1000000                                 AS PRE_RSLT_AMT_12
		      FROM (
		            SELECT RPT.BIZ_CD
		                   ,SUBSTR(RPT.BIZ_PLAN_YM,5,2)                                     AS MONTH
		                   ,NVL(RPT.PLAN_AMT,0) + NVL(RPT.SUB_PLAN_AMT, 0)                   AS PLAN_AMT
		                   ,0                                                               AS PRE_RSLT_AMT
		            FROM MSS.ME_BIZPLANRPT RPT WHERE 1 = 1
		            AND RPT.BIZ_PLAN_YEAR = ?
		            AND SUBSTR(RPT.BIZ_CD,3,4) = '0000'
		            AND RPT.STR_CD LIKE ?
		            AND RPT.DEPT_CD LIKE ?
		            AND RPT.TEAM_CD LIKE ?
		            AND RPT.PC_CD LIKE ?
		            UNION ALL
		            SELECT RPT.BIZ_CD
		                   ,SUBSTR(RPT.BIZ_RSLT_YM,5,2)                                     AS MONTH
		                   ,0                                                                AS PLAN_AMT
		                   ,NVL(RPT.RSLT_AMT,0) + NVL(RPT.SUB_RSLT_AMT, 0)                  AS PRE_RSLT_AMT
		            FROM MSS.ME_BIZRSLTRPT RPT WHERE 1 = 1
		            AND SUBSTR(RPT.BIZ_RSLT_YM,1,4) = TO_CHAR(TO_DATE(?, 'YYYY') + NUMTOYMINTERVAL (-1, 'year'), 'YYYY')
		            AND SUBSTR(RPT.BIZ_CD,3,4) = '0000'
		            AND RPT.STR_CD LIKE ?
		            AND RPT.DEPT_CD LIKE ?
		            AND RPT.TEAM_CD LIKE ?
		            AND RPT.PC_CD LIKE ?
		           ) MA
		      GROUP BY ROLLUP(MA.BIZ_CD)
		     ) MMA
		WHERE MMA.GROUP_ID NOT LIKE '%1%' 
    ]]>
    </query>    

</service>
