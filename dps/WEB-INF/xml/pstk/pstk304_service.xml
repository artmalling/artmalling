<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 이재득
 * 회 사 명 : FKSS
 * 작 성 일 : 2010.05.26
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  월수불장 현황(단품)을 조회한다.
 -->
<service name="/pstk304.pt">
  
  <gauce name="H_SEL_SKUQTY"> 
        <column colName="PUMBUN_CD"       colType="TB_STRING"      size="8"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PUMBUN_NAME"     colType="TB_STRING"      size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_CD"          colType="TB_STRING"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_NAME"        colType="TB_STRING"      size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="STK_YM"          colType="TB_STRING"      size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BASE_QTY"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="BUY_QTY"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="RFD_QTY"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BORROW_QTY"      colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="LEND_QTY"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRI_QTY"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRO_QTY"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />     
        
        <column colName="SALE_PRC_UP_BF_QTY"    colType="TB_DECIMAL"  size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PRC_DOWN_AF_QTY"  colType="TB_DECIMAL"  size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        
        <column colName="SALE_QTY"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_ADJ_QTY"     colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SRVY_E_QTY"      colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
  </gauce> 
  
  <gauce name="H_SEL_SKUAMT">  
        <column colName="PUMBUN_CD"            colType="TB_STRING"      size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PUMBUN_NAME"          colType="TB_STRING"      size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_CD"               colType="TB_STRING"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_NAME"             colType="TB_STRING"      size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="STK_YM"               colType="TB_STRING"      size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BASE_AMT"             colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BASE_GAP_AMT"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />       
        <column colName="BUY_SALE_AMT"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BUY_GAP_AMT"          colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="RFD_SALE_AMT"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="RFD_GAP_AMT"          colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BORROW_SALE_AMT"      colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BORROW_GAP_AMT"       colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="LEND_SALE_AMT"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="LEND_GAP_AMT"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="STRI_SALE_AMT"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STRI_GAP_AMT"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRO_SALE_AMT"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STRO_GAP_AMT"         colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <!-- 
        <column colName="SALE_PRC_UP_BF_QTY"     colType="TB_DECIMAL"  size="13"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PRC_DOWN_AF_QTY"   colType="TB_DECIMAL"  size="13"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
         -->
        <column colName="SALE_PRC_UP_BF_AMT"   colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
		<column colName="SALE_PRC_DOWN_AF_AMT" colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_SALE_AMT"        colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="DC_AMT"               colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_ADJ_SALE_AMT"     colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STK_ADJ_GAP_AMT"      colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SRVY_E_AMT"           colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SRVY_E_GAP_AMT"       colType="TB_DECIMAL"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                
        <column colName="SALE_COST_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PROF_RATE"         colType="TB_DECIMAL" size="7"    dec="2" keyType="TB_NORMAL" roundMode="ROUND" />            
  </gauce>                  
  
    <!-- 쿼리는 전부 대문자 -->
    <!-- 수량기준 수불장 조회 쿼리  -->
    <query name="SEL_SKUMONTH_QTY">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD) SKU_NAME 
                 , STK_YM
                 , SUM(NVL(A.BASE_QTY,0))    AS BASE_QTY
                 , SUM(NVL(A.BUY_QTY,0))     AS BUY_QTY
                 , SUM(NVL(A.RFD_QTY,0))     AS RFD_QTY
                 , SUM(NVL(A.BORROW_QTY,0))  AS BORROW_QTY
                 , SUM(NVL(A.LEND_QTY,0))    AS LEND_QTY
                 , SUM(NVL(A.STRI_QTY,0))    AS STRI_QTY
                 , SUM(NVL(A.STRO_QTY,0))    AS STRO_QTY
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_QTY,0))                      AS SALE_PRC_UP_BF_QTY
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_QTY,0))                    AS SALE_PRC_DOWN_AF_QTY
                 
                 , SUM(NVL(A.SALE_QTY,0))    AS SALE_QTY
                 , SUM(NVL(A.STK_ADJ_QTY,0)) AS STK_ADJ_QTY
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BUY_QTY,0)) - SUM(NVL(A.RFD_QTY,0)) + SUM(NVL(A.BORROW_QTY,0)) 
                 - SUM(NVL(A.LEND_QTY,0)) + SUM(NVL(A.STRI_QTY,0)) - SUM(NVL(A.STRO_QTY,0)) 
                 + SUM(NVL(A.STK_ADJ_QTY,0)) - SUM(NVL(A.SALE_QTY,0)) AS  SRVY_E_QTY                
              FROM DPS.PC_STRPBN PBN
                 , DPS.PC_ORGMST ORG
                 , (SELECT STR_CD
                         , SKU_CD     
                         , STK_YM                   
                         , PUMBUN_CD
                         , PUMMOK_CD
                         , SUM(NVL(CAO_QTY,0)) AS BASE_QTY                         
                         , 0 BUY_QTY
                         , 0 RFD_QTY
                         , 0 BORROW_QTY
                         , 0 LEND_QTY
                         , 0 STRI_QTY
                         , 0 STRO_QTY
                         , 0 AS SALE_PRC_UP_BF_QTY
                         , 0 AS SALE_PRC_DOWN_AF_QTY
                         , 0 STK_ADJ_QTY
                         , 0 SALE_QTY
                      FROM DPS.PT_SKUMONTH
                     WHERE STR_CD = ?
                       AND STK_YM = ?
                       GROUP BY STR_CD, SKU_CD, STK_YM , PUMBUN_CD, PUMMOK_CD
                    UNION ALL
                    SELECT STR_CD
                         , SKU_CD
                         , STK_YM
                         , PUMBUN_CD
                         , PUMMOK_CD
                         , 0 BASE_QTY                         
                         , SUM(NVL(BUY_QTY,0))                  AS BUY_QTY
                         , SUM(NVL(RFD_QTY,0))                  AS RFD_QTY
                         , SUM(NVL(BORROW_QTY,0))               AS BORROW_QTY
                         , SUM(NVL(LEND_QTY,0))                 AS LEND_QTY
                         , SUM(NVL(STRI_QTY,0))                 AS STRI_QTY
                         , SUM(NVL(STRO_QTY,0))                 AS STRO_QTY
                         , SUM(NVL(SALE_PRC_UP_BF_QTY,0))       AS SALE_PRC_UP_BF_QTY
                         , SUM(NVL(SALE_PRC_DOWN_AF_QTY,0))     AS SALE_PRC_DOWN_AF_QTY
                         , SUM(NVL(STK_ADJ_QTY,0))              AS STK_ADJ_QTY
                         , SUM(NVL(SALE_QTY,0))                 AS SALE_QTY           
                      FROM DPS.PT_SKUMONTH
                     WHERE STR_CD = ?
                       AND STK_YM = ?
                       GROUP BY STR_CD
                              , SKU_CD
                              , STK_YM 
                              , PUMBUN_CD
                              , PUMMOK_CD
                      ) A
             WHERE A.STR_CD = PBN.STR_CD
               AND A.PUMBUN_CD = PBN.PUMBUN_CD
               AND ORG.ORG_CD  = PBN.SALE_ORG_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND ORG.STR_CD  = ?
               AND ORG.DEPT_CD = ?
               AND ORG.TEAM_CD = ?
               AND ORG.PC_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_WHERE_PUMBUN_CD">
        <![CDATA[
               AND A.PUMBUN_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_WHERE_PUMMOK_CD">
        <![CDATA[ 
               AND A.PUMMOK_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_WHERE_BIZFLAG">
        <![CDATA[
               AND PBN.BIZ_FLAG = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUMONTH_QTY_WHERE_SKU_CD">
        <![CDATA[
               AND A.SKU_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUMONTH_QTY_GROUP">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.STK_YM
                   , A.SKU_CD
        ]]>    
    </query>
    
    <query name="SEL_SKUMONTH_QTY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
                   , A.SKU_CD
        ]]>    
    </query>
    
    <!--  금액기준(세포함) 수불장 조회 쿼리  -->
    <query name="SEL_SKUMONTH_AMT">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD) SKU_NAME 
                 , A.STK_YM
                 , SUM(NVL(A.BASE_AMT,0))         AS BASE_AMT
                 , SUM(NVL(A.BASE_AMT,0)) - SUM(NVL(A.BASE_COST_AMT,0)) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))     AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))      AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))     AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))      AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))  AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))   AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))    AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))     AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))    AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))     AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))    AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))     AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))     AS SALE_PRC_UP_BF_AMT  
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))    AS SALE_PRC_DOWN_AF_AMT      
                          
                 , SUM(NVL(A.SALE_SALE_AMT,0))    AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))           AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0)) AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))  AS STK_ADJ_GAP_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) + SUM(NVL(A.BORROW_SALE_AMT,0)) 
                 - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                 - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) 
                 + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0)) AS  SRVY_E_AMT
                 , SUM(NVL(A.BASE_AMT,0)) - SUM(NVL(A.BASE_COST_AMT,0)) + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) + SUM(NVL(A.BORROW_GAP_AMT,0)) 
                 - SUM(NVL(A.LEND_GAP_AMT,0)) + SUM(NVL(A.STRI_GAP_AMT,0)) - SUM(NVL(A.STRO_GAP_AMT,0)) 
                 - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) 
                 + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0)) AS  SRVY_E_GAP_AMT                
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_STRPBN PBN
                 , DPS.PC_ORGMST ORG
                 , (SELECT STR_CD
                         , SKU_CD
                         , STK_YM
                         , PUMBUN_CD
                         , PUMMOK_CD
                         , SUM(NVL(CAO_SALE_AMT,0)) AS BASE_AMT 
                         , SUM(NVL(CAO_COST_AMT,0)) AS BASE_COST_AMT
                         , 0 BUY_SALE_AMT
                         , 0 BUY_GAP_AMT
                         , 0 RFD_SALE_AMT
                         , 0 RFD_GAP_AMT
                         , 0 BORROW_SALE_AMT
                         , 0 BORROW_GAP_AMT
                         , 0 LEND_SALE_AMT
                         , 0 LEND_GAP_AMT
                         , 0 STRI_SALE_AMT
                         , 0 STRI_GAP_AMT
                         , 0 STRO_SALE_AMT
                         , 0 STRO_GAP_AMT
                         , 0 SALE_PRC_UP_BF_AMT  
                         , 0 SALE_PRC_DOWN_AF_AMT                       
                         , 0 STK_ADJ_SALE_AMT
                         , 0 STK_ADJ_GAP_AMT
                         , 0 SALE_SALE_AMT
                         , 0 SALE_GAP_AMT
                         , 0 DC_AMT
                         , 0 AS SALE_COST_AMT
                         , 0 AS SALE_SALE_AMT_VAT
                         , 0 AS DC_AMT_VAT
                           
                      FROM DPS.PT_SKUMONTH
                     WHERE STR_CD = ?
                       AND STK_YM = ?
                     GROUP BY STR_CD, SKU_CD, STK_YM, PUMBUN_CD, PUMMOK_CD
                    UNION ALL
                    SELECT MON.STR_CD
                         , MON.SKU_CD
                         , MON.STK_YM
                         , MON.PUMBUN_CD
                         , MON.PUMMOK_CD
                         , 0                                                           AS BASE_AMT 
                         , 0                                                           AS BASE_COST_AMT
                         , SUM(NVL(MON.BUY_SALE_AMT,0))                                    AS BUY_SALE_AMT
                         , SUM(NVL(MON.BUY_SALE_AMT,0)) - SUM(NVL(MON.BUY_COST_AMT,0))         AS BUY_GAP_AMT
                         , SUM(NVL(MON.RFD_SALE_AMT,0))                                    AS RFD_SALE_AMT
                         , SUM(NVL(MON.RFD_SALE_AMT,0)) - SUM(NVL(MON.RFD_COST_AMT,0))         AS RFD_GAP_AMT
                         , SUM(NVL(MON.BORROW_SALE_AMT,0))                                 AS BORROW_SALE_AMT
                         , SUM(NVL(MON.BORROW_SALE_AMT,0)) - SUM(NVL(MON.BORROW_COST_AMT,0))   AS BORROW_GAP_AMT
                         , SUM(NVL(MON.LEND_SALE_AMT,0))                                   AS LEND_SALE_AMT
                         , SUM(NVL(MON.LEND_SALE_AMT,0)) - SUM(NVL(MON.LEND_COST_AMT,0))       AS LEND_GAP_AMT
                         , SUM(NVL(MON.STRI_SALE_AMT,0))                                   AS STRI_SALE_AMT
                         , SUM(NVL(MON.STRI_SALE_AMT,0)) - SUM(NVL(MON.STRI_COST_AMT,0))       AS STRI_GAP_AMT 
                         , SUM(NVL(MON.STRO_SALE_AMT,0))                                   AS STRO_SALE_AMT
                         , SUM(NVL(MON.STRO_SALE_AMT,0)) - SUM(NVL(MON.STRO_COST_AMT,0))       AS STRO_GAP_AMT
                         , SUM(NVL(MON.SALE_PRC_UP_BF_AMT,0))                              AS SALE_PRC_UP_BF_AMT
                         , SUM(NVL(MON.SALE_PRC_DOWN_AF_AMT,0))                            AS SALE_PRC_DOWN_AF_AMT
                         , SUM(NVL(MON.STK_ADJ_SALE_AMT,0))                                AS STK_ADJ_SALE_AMT
                         , SUM(NVL(MON.STK_ADJ_SALE_AMT,0)) - SUM(NVL(MON.STK_ADJ_COST_AMT,0)) AS STK_ADJ_GAP_AMT
                         , SUM(NVL(MON.SALE_SALE_AMT,0)) - SUM(NVL(MON.REDU_AMT,0))            AS SALE_SALE_AMT
                         , SUM(NVL(MON.SALE_SALE_AMT,0)) - SUM(NVL(MON.REDU_AMT,0)) - SUM(NVL(MON.SALE_COST_AMT,0))       AS SALE_GAP_AMT
                         , SUM(NVL(MON.DC_AMT,0))                                          AS DC_AMT
                         
                         , SUM(NVL(MON.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN SP.TAX_FLAG = 1 THEN 
                            (SUM(NVL(MON.SALE_SALE_AMT,0)) - SUM(NVL(MON.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(MON.SALE_SALE_AMT,0)) - SUM(NVL(MON.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN SP.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(MON.DC_AMT,0)) - SUM(NVL(MON.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(MON.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                           
                      FROM DPS.PT_SKUMONTH MON
                         , DPS.PC_PBNMST   SP
                     WHERE MON.PUMBUN_CD  = SP.PUMBUN_CD
                       AND MON.STR_CD = ?
                       AND MON.STK_YM = ?
                       GROUP BY MON.STR_CD
                              , MON.SKU_CD
                              , MON.STK_YM
                              , MON.PUMBUN_CD
                              , MON.PUMMOK_CD
                              , SP.TAX_FLAG
                      ) A
             WHERE A.STR_CD = PBN.STR_CD
               AND A.PUMBUN_CD = PBN.PUMBUN_CD
               AND ORG.ORG_CD  = PBN.SALE_ORG_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND ORG.STR_CD  = ?
               AND ORG.DEPT_CD = ?
               AND ORG.TEAM_CD = ?
               AND ORG.PC_CD   = ?
        ]]>    
    </query>
    
    <!--  금액기준(세제외) 수불장 조회 쿼리  -->
    <query name="SEL_SKUMONTH_TAX_AMT">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD) SKU_NAME 
                 , A.STK_YM
                 , SUM(NVL(A.BASE_AMT,0))         AS BASE_AMT
                 , SUM(NVL(A.BASE_AMT,0)) - SUM(NVL(A.BASE_COST_AMT,0)) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))     AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))      AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))     AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))      AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))  AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))   AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))    AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))     AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))    AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))     AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))    AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))     AS STRO_GAP_AMT
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 , SUM(NVL(A.SALE_SALE_AMT,0))    AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))           AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0)) AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))  AS STK_ADJ_GAP_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) + SUM(NVL(A.BORROW_SALE_AMT,0)) - SUM(NVL(A.LEND_SALE_AMT,0)) 
                 + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                 - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                 + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0)) AS  SRVY_E_AMT
                 , SUM(NVL(A.BASE_AMT,0)) - SUM(NVL(A.BASE_COST_AMT,0)) + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) + SUM(NVL(A.BORROW_GAP_AMT,0)) 
                 - SUM(NVL(A.LEND_GAP_AMT,0)) + SUM(NVL(A.STRI_GAP_AMT,0)) - SUM(NVL(A.STRO_GAP_AMT,0)) 
                 - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                 + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0)) AS  SRVY_E_GAP_AMT                
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_STRPBN PBN
                 , DPS.PC_ORGMST ORG
                 , (SELECT STR_CD
                         , SKU_CD
                         , SKU.STK_YM
                         , SKU.PUMBUN_CD                         
                         , PUMMOK_CD
                         , PBN.TAX_FLAG
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_SALE_AMT,0)) - (SUM(NVL(CAO_SALE_AMT,0))) * 0.1 , 0)                                                
                               ELSE   
                                    SUM(NVL(CAO_SALE_AMT,0))                              
                           END AS BASE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_COST_AMT,0)) - SUM(NVL(CAO_COST_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(CAO_COST_AMT,0))                              
                           END AS BASE_COST_AMT
                         , 0 BUY_SALE_AMT
                         , 0 BUY_GAP_AMT
                         , 0 RFD_SALE_AMT
                         , 0 RFD_GAP_AMT
                         , 0 BORROW_SALE_AMT
                         , 0 BORROW_GAP_AMT
                         , 0 LEND_SALE_AMT
                         , 0 LEND_GAP_AMT
                         , 0 STRI_SALE_AMT
                         , 0 STRI_GAP_AMT
                         , 0 STRO_SALE_AMT
                         , 0 STRO_GAP_AMT
                         , 0 SALE_PRC_UP_BF_AMT  
                         , 0 SALE_PRC_DOWN_AF_AMT                       
                         , 0 SALE_SALE_AMT
                         , 0 SALE_GAP_AMT
                         , 0 DC_AMT
                         , 0 STK_ADJ_SALE_AMT
                         , 0 STK_ADJ_GAP_AMT
                         
                         , 0 AS SALE_COST_AMT
                         , 0 AS SALE_SALE_AMT_VAT
                         , 0 AS DC_AMT_VAT
                           
                      FROM DPS.PT_SKUMONTH SKU
                         , DPS.PC_PBNMST PBN
                     WHERE SKU.PUMBUN_CD = PBN.PUMBUN_CD
                       AND STR_CD = ?
                       AND STK_YM = ?
                      GROUP BY STR_CD
                             , SKU_CD
                             , SKU.STK_YM
                             , SKU.PUMBUN_CD
                             , PUMMOK_CD
                             , PBN.TAX_FLAG
                    UNION ALL
                    SELECT STR_CD
                         , SKU_CD
                         , SKU.STK_YM
                         , SKU.PUMBUN_CD
                         , PUMMOK_CD
                         , PBN.TAX_FLAG
                         , 0 BASE_AMT 
                         , 0 BASE_COST_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(BUY_SALE_AMT,0)) - SUM(NVL(BUY_SALE_AMT,0)) * 0.1 , 0)                                                     
                               ELSE   
                                    SUM(NVL(BUY_SALE_AMT,0))                              
                           END AS BUY_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(BUY_SALE_AMT,0)) - SUM(NVL(BUY_COST_AMT,0)) - (SUM(NVL(BUY_SALE_AMT,0)) - SUM(NVL(BUY_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(BUY_SALE_AMT,0)) - SUM(NVL(BUY_COST_AMT,0))                               
                           END AS BUY_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(RFD_SALE_AMT,0)) - SUM(NVL(RFD_SALE_AMT,0)) * 0.1 , 0)                                                                                     
                               ELSE   
                                    SUM(NVL(RFD_SALE_AMT,0))                               
                           END AS RFD_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(RFD_SALE_AMT,0)) - SUM(NVL(RFD_COST_AMT,0)) - (SUM(NVL(RFD_SALE_AMT,0)) - SUM(NVL(RFD_COST_AMT,0))) * 0.1 , 0)                                                               
                               ELSE   
                                    SUM(NVL(RFD_SALE_AMT,0)) - SUM(NVL(RFD_COST_AMT,0))                              
                           END AS RFD_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(BORROW_SALE_AMT,0)) - SUM(NVL(BORROW_SALE_AMT,0)) * 0.1 , 0)                                                                                
                               ELSE   
                                    SUM(NVL(BORROW_SALE_AMT,0))                              
                           END AS BORROW_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(BORROW_SALE_AMT,0)) - SUM(NVL(BORROW_COST_AMT,0)) - (SUM(NVL(BORROW_SALE_AMT,0)) - SUM(NVL(BORROW_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(BORROW_SALE_AMT,0)) - SUM(NVL(BORROW_COST_AMT,0))                               
                           END AS BORROW_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(LEND_SALE_AMT,0)) - SUM(NVL(LEND_SALE_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(LEND_SALE_AMT,0))                               
                           END AS LEND_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(LEND_SALE_AMT,0)) - SUM(NVL(LEND_COST_AMT,0)) - (SUM(NVL(LEND_SALE_AMT,0)) - SUM(NVL(LEND_COST_AMT,0))) * 0.1 , 0)                                                          
                               ELSE   
                                    SUM(NVL(LEND_SALE_AMT,0)) - SUM(NVL(LEND_COST_AMT,0))                               
                           END AS LEND_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(STRI_SALE_AMT,0)) - SUM(NVL(STRI_SALE_AMT,0))* 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(STRI_SALE_AMT,0))                              
                           END AS STRI_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(STRI_SALE_AMT,0)) - SUM(NVL(STRI_COST_AMT,0)) - (SUM(NVL(STRI_SALE_AMT,0)) - SUM(NVL(STRI_COST_AMT,0))) * 0.1 , 0)                                                                     
                               ELSE   
                                    SUM(NVL(STRI_SALE_AMT,0)) - SUM(NVL(STRI_COST_AMT,0))                              
                           END AS STRI_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(STRO_SALE_AMT,0)) - SUM(NVL(STRO_SALE_AMT,0)) * 0.1 , 0)                                                                                                            
                               ELSE   
                                    SUM(NVL(STRO_SALE_AMT,0))                              
                           END AS STRO_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(STRO_SALE_AMT,0)) - SUM(NVL(STRO_COST_AMT,0)) - (SUM(NVL(STRO_SALE_AMT,0)) - SUM(NVL(STRO_COST_AMT,0))) * 0.1 , 0)                                                        
                               ELSE   
                                    SUM(NVL(STRO_SALE_AMT,0)) - SUM(NVL(STRO_COST_AMT,0))                              
                           END AS STRO_GAP_AMT
                         
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SALE_PRC_UP_BF_AMT,0)) - SUM(NVL(SALE_PRC_UP_BF_AMT,0)) * 0.1 , 0)                                                                             
                               ELSE   
                                    SUM(NVL(SALE_PRC_UP_BF_AMT,0))                               
                           END AS SALE_PRC_UP_BF_AMT   
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SALE_PRC_DOWN_AF_AMT,0)) - SUM(NVL(SALE_PRC_DOWN_AF_AMT,0))* 0.1 , 0)                                                                             
                               ELSE   
                                  SUM(NVL(SALE_PRC_DOWN_AF_AMT,0))                             
                           END AS SALE_PRC_DOWN_AF_AMT                       
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(REDU_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(REDU_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(REDU_AMT,0))                               
                           END AS SALE_SALE_AMT  
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC((SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(REDU_AMT,0))) - SUM(NVL(SALE_COST_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(REDU_AMT,0)) - SUM(NVL(SALE_COST_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(REDU_AMT,0))) - SUM(NVL(SALE_COST_AMT,0))                               
                           END AS SALE_GAP_AMT                        
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DC_AMT,0)) - SUM(NVL(DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DC_AMT,0))                               
                           END AS DC_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(STK_ADJ_SALE_AMT,0)) - SUM(NVL(STK_ADJ_SALE_AMT,0)) * 0.1 , 0)                                                                             
                               ELSE   
                                    SUM(NVL(STK_ADJ_SALE_AMT,0))                               
                           END AS STK_ADJ_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(STK_ADJ_SALE_AMT,0)) - SUM(NVL(STK_ADJ_COST_AMT,0)) - (SUM(NVL(STK_ADJ_SALE_AMT,0)) - SUM(NVL(STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                                            
                               ELSE   
                                    SUM(NVL(STK_ADJ_SALE_AMT,0)) - SUM(NVL(STK_ADJ_COST_AMT,0))                               
                           END AS STK_ADJ_GAP_AMT
                           
                         , SUM(NVL(SKU.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN PBN.TAX_FLAG = 1 THEN 
                            (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN PBN.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                      FROM DPS.PT_SKUMONTH SKU
                         , DPS.PC_PBNMST PBN
                     WHERE SKU.PUMBUN_CD = PBN.PUMBUN_CD
                       AND STR_CD = ?
                       AND STK_YM = ?
                       GROUP BY STR_CD
                              , SKU_CD
                              , SKU.STK_YM
                              , SKU.PUMBUN_CD                              
                              , PUMMOK_CD
                              , PBN.TAX_FLAG
                      ) A
             WHERE A.STR_CD = PBN.STR_CD
               AND A.PUMBUN_CD = PBN.PUMBUN_CD
               AND ORG.ORG_CD  = PBN.SALE_ORG_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND ORG.STR_CD  = ?
               AND ORG.DEPT_CD = ?
               AND ORG.TEAM_CD = ?
               AND ORG.PC_CD   = ? 
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_WHERE_PUMBUN_CD">
        <![CDATA[
               AND A.PUMBUN_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_WHERE_PUMMOK_CD">
        <![CDATA[ 
               AND A.PUMMOK_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_WHERE_BIZFLAG">
        <![CDATA[
               AND PBN.BIZ_FLAG = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUMONTH_AMT_WHERE_SKU_CD">
        <![CDATA[
               AND A.SKU_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUMONTH_AMT_GROUP">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.STK_YM
                   , A.SKU_CD
        ]]>    
    </query>
    
    <query name="SEL_SKUMONTH_AMT_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
                   , A.SKU_CD
        ]]>    
    </query>

</service>