<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 이재득
 * 회 사 명 : FKSS
 * 작 성 일 : 2010.05.17
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  기간별 수불장 현황을 조회한다.
 -->
<service name="/pstk301.pt">
  
  <gauce name="H_SEL_PBNQTY">        
        <column colName="PUMBUN_CD"             colType="TB_STRING"  size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PUMBUN_NAME"           colType="TB_STRING"  size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_DT"                colType="TB_STRING"  size="8"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="EVENT_FLAG"            colType="TB_STRING"  size="2"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="EVENT_RATE"            colType="TB_STRING"  size="2"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="MG_RATE"               colType="TB_DECIMAL" size="5"    dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BASE_QTY"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="BUY_QTY"               colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="RFD_QTY"               colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BORROW_QTY"            colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="LEND_QTY"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRI_QTY"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRO_QTY"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
           
        <column colName="SALE_PRC_UP_BF_QTY"    colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PRC_DOWN_AF_QTY"  colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        
        <column colName="SALE_QTY"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_ADJ_QTY"           colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SRVY_E_QTY"            colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
  </gauce> 
  
  <gauce name="H_SEL_PBNAMT">              
        <column colName="PUMBUN_CD"             colType="TB_STRING"  size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PUMBUN_NAME"           colType="TB_STRING"  size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_DT"                colType="TB_STRING"  size="8"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="EVENT_FLAG"            colType="TB_STRING"  size="2"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="EVENT_RATE"            colType="TB_STRING"  size="2"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="MG_RATE"               colType="TB_DECIMAL" size="5"    dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BASE_AMT"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BASE_GAP_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />       
        <column colName="BUY_SALE_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BUY_GAP_AMT"           colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="RFD_SALE_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="RFD_GAP_AMT"           colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BORROW_SALE_AMT"       colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BORROW_GAP_AMT"        colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="LEND_SALE_AMT"         colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="LEND_GAP_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="STRI_SALE_AMT"         colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STRI_GAP_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRO_SALE_AMT"         colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STRO_GAP_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        
        <column colName="SALE_PRC_UP_BF_AMT"    colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PRC_DOWN_AF_AMT"  colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        
        <column colName="SALE_SALE_AMT"         colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="DC_AMT"                colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_ADJ_SALE_AMT"      colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STK_ADJ_GAP_AMT"       colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SRVY_E_AMT"            colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SRVY_E_GAP_AMT"        colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
          
        <column colName="SALE_COST_AMT"         colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF"             colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PROF_RATE"        colType="TB_DECIMAL" size="7"    dec="2" keyType="TB_NORMAL" roundMode="ROUND" />        
  </gauce>   
  
    <!-- 쿼리는 전부 대문자 -->
    <!-- 수량기준 일별 수불장 조회 쿼리  -->
    <query name="SEL_PBNDAY_QTY">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.STK_DT
                 , A.EVENT_FLAG
                 , A.EVENT_RATE
                 , A.MG_RATE
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0))   AS BASE_QTY
                 , SUM(NVL(A.BUY_QTY,0))     AS BUY_QTY
                 , SUM(NVL(A.RFD_QTY,0))     AS RFD_QTY
                 , SUM(NVL(A.BORROW_QTY,0))  AS BORROW_QTY
                 , SUM(NVL(A.LEND_QTY,0))    AS LEND_QTY
                 , SUM(NVL(A.STRI_QTY,0))    AS STRI_QTY
                 , SUM(NVL(A.STRO_QTY,0))    AS STRO_QTY
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_QTY,0)) AS SALE_PRC_UP_BF_QTY
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_QTY,0)) AS SALE_PRC_DOWN_AF_QTY
                 
                 , SUM(NVL(A.SALE_QTY,0))    AS SALE_QTY 
                 , SUM(NVL(A.STK_ADJ_QTY,0)) AS STK_ADJ_QTY
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0)) + SUM(NVL(A.BUY_QTY,0)) - SUM(NVL(A.RFD_QTY,0)) 
                     + SUM(NVL(A.BORROW_QTY,0)) - SUM(NVL(A.LEND_QTY,0)) + SUM(NVL(A.STRI_QTY,0)) 
                     - SUM(NVL(A.STRO_QTY,0))
                     + SUM(NVL(A.STK_ADJ_QTY,0)) - SUM(NVL(A.SALE_QTY,0))  AS SRVY_E_QTY                
              FROM DPS.PC_PBNMST PBN
                 , (SELECT PBN.STR_CD
                         , PBN.DEPT_CD
                         , PBN.TEAM_CD
                         , PBN.PC_CD
                         , PBN.VEN_CD
                         , PBN.PUMBUN_CD
                         , PBN.PUMMOK_CD
                         , PBN.EVENT_FLAG
                         , PBN.EVENT_RATE
                         , PBN.MG_RATE 
                         , PBN.STK_DT
                         , SUM(NVL(PMT.CAO_QTY,0))    AS BASE_QTY
                         , (SELECT SUM(NVL(X.BUY_TOT_QTY,0)) - SUM(NVL(X.SALE_QTY,0)) + SUM(NVL(X.STK_ADJ_QTY,0))
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND PBN.STK_DT - 1
                               AND PBN.STR_CD = X.STR_CD
                               AND PBN.PUMBUN_CD = X.PUMBUN_CD
                               AND PBN.EVENT_FLAG = X.EVENT_FLAG
                               AND PBN.EVENT_RATE = X.EVENT_RATE
                               AND PBN.MG_RATE = X.MG_RATE
                               AND PBN.PUMMOK_CD = X.PUMMOK_CD) AS BASE_DAY_QTY
                         , SUM(PBN.BUY_QTY)                     AS BUY_QTY
                         , SUM(PBN.RFD_QTY)                     AS RFD_QTY                         
                         , SUM(PBN.BORROW_QTY)                  AS BORROW_QTY
                         , SUM(PBN.LEND_QTY)                    AS LEND_QTY
                         , SUM(PBN.STRI_QTY)                    AS STRI_QTY
                         , SUM(PBN.STRO_QTY)                    AS STRO_QTY
                         , SUM(NVL(PBN.SALE_PRC_UP_BF_QTY,0))   AS SALE_PRC_UP_BF_QTY
                         , SUM(NVL(PBN.SALE_PRC_DOWN_AF_QTY,0)) AS SALE_PRC_DOWN_AF_QTY
                         , SUM(PBN.STK_ADJ_QTY)                 AS STK_ADJ_QTY
                         , SUM(PBN.SALE_QTY)                    AS SALE_QTY     
                      FROM DPS.PT_PBNDAY PBN
                         , DPS.PT_PBNMONTH PMT
                         , DPS.PC_PBNMST PBM
                     WHERE PBN.STR_CD     = PMT.STR_CD(+)
                       AND SUBSTR(PBN.STK_DT ,0 ,6) = PMT.STK_YM(+)  
                       AND PBN.PUMBUN_CD  = PMT.PUMBUN_CD(+)
                       AND PBN.EVENT_FLAG = PMT.EVENT_FLAG(+)
                       AND PBN.EVENT_RATE = PMT.EVENT_RATE(+)
                       AND PBN.MG_RATE    = PMT.MG_RATE(+)
                       AND PBN.PUMMOK_CD  = PMT.PUMMOK_CD(+)
                       AND PBN.PUMBUN_CD  = PBM.PUMBUN_CD
                       AND PBN.STR_CD = ?
                       AND PBN.STK_DT BETWEEN ? AND ?
                       AND PMT.STK_YM (+) = ?
                       AND PBM.BIZ_FLAG   LIKE ? || '%'
                       GROUP BY PBN.STR_CD
                              , PBN.DEPT_CD
                              , PBN.TEAM_CD
                              , PBN.PC_CD
                              , PBN.VEN_CD
                              , PBN.PUMBUN_CD
                              , PBN.PUMMOK_CD
                              , PBN.EVENT_FLAG
                              , PBN.EVENT_RATE
                              , PBN.MG_RATE 
                              , PBN.STK_DT                             
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD  = ?
               AND A.STK_DT BETWEEN ? AND ?             
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_WHERE_DEPT_CD">
        <![CDATA[
               AND A.DEPT_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_WHERE_TEAM_CD">
        <![CDATA[
               AND A.TEAM_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_WHERE_PC_CD">
        <![CDATA[
               AND A.PC_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_WHERE_PUMBUN_CD">
        <![CDATA[
               AND A.PUMBUN_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_GROUP">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.EVENT_FLAG
                   , A.EVENT_RATE
                   , A.MG_RATE
                   , A.STK_DT
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_DAY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD, A.STK_DT
        ]]>    
    </query>
    
    <!-- 수량기준 수불장 누계 조회 쿼리  -->
    <query name="SEL_PBNDAY_QTY_TOTAL">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , ''                                 AS STK_DT
                 , A.EVENT_FLAG
                 , A.EVENT_RATE
                 , A.MG_RATE
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0))   AS BASE_QTY
                 , SUM(NVL(A.BUY_QTY,0))     AS BUY_QTY
                 , SUM(NVL(A.RFD_QTY,0))     AS RFD_QTY
                 , SUM(NVL(A.BORROW_QTY,0))  AS BORROW_QTY
                 , SUM(NVL(A.LEND_QTY,0))    AS LEND_QTY
                 , SUM(NVL(A.STRI_QTY,0))    AS STRI_QTY
                 , SUM(NVL(A.STRO_QTY,0))    AS STRO_QTY
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_QTY,0)) AS SALE_PRC_UP_BF_QTY
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_QTY,0)) AS SALE_PRC_DOWN_AF_QTY
                 
                 , SUM(NVL(A.SALE_QTY,0))    AS SALE_QTY 
                 , SUM(NVL(A.STK_ADJ_QTY,0)) AS STK_ADJ_QTY
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0)) + SUM(NVL(A.BUY_QTY,0)) - SUM(NVL(A.RFD_QTY,0)) 
                     + SUM(NVL(A.BORROW_QTY,0)) - SUM(NVL(A.LEND_QTY,0)) + SUM(NVL(A.STRI_QTY,0)) 
                     - SUM(NVL(A.STRO_QTY,0))
                     + SUM(NVL(A.STK_ADJ_QTY,0)) - SUM(NVL(A.SALE_QTY,0))  AS SRVY_E_QTY                
              FROM DPS.PC_PBNMST PBN
                 , (SELECT PBN.STR_CD
                         , PBN.DEPT_CD
                         , PBN.TEAM_CD
                         , PBN.PC_CD
                         , PBN.VEN_CD
                         , PBN.PUMBUN_CD
                         , PBN.PUMMOK_CD
                         , PBN.EVENT_FLAG
                         , PBN.EVENT_RATE
                         , PBN.MG_RATE 
                         , PBN.STK_DT
                         , SUM(NVL(PMT.CAO_QTY,0))    AS BASE_QTY
                         , (SELECT SUM(NVL(X.BUY_TOT_QTY,0)) - SUM(NVL(X.SALE_QTY,0)) + SUM(NVL(X.STK_ADJ_QTY,0))
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND PBN.STK_DT     = ?
                               AND PBN.STR_CD = X.STR_CD
                               AND PBN.PUMBUN_CD = X.PUMBUN_CD
                               AND PBN.EVENT_FLAG = X.EVENT_FLAG
                               AND PBN.EVENT_RATE = X.EVENT_RATE
                               AND PBN.MG_RATE = X.MG_RATE
                               AND PBN.PUMMOK_CD = X.PUMMOK_CD) AS BASE_DAY_QTY
                         , SUM(PBN.BUY_QTY)                     AS BUY_QTY
                         , SUM(PBN.RFD_QTY)                     AS RFD_QTY                         
                         , SUM(PBN.BORROW_QTY)                  AS BORROW_QTY
                         , SUM(PBN.LEND_QTY)                    AS LEND_QTY
                         , SUM(PBN.STRI_QTY)                    AS STRI_QTY
                         , SUM(PBN.STRO_QTY)                    AS STRO_QTY
                         , SUM(NVL(PBN.SALE_PRC_UP_BF_QTY,0))   AS SALE_PRC_UP_BF_QTY
                         , SUM(NVL(PBN.SALE_PRC_DOWN_AF_QTY,0)) AS SALE_PRC_DOWN_AF_QTY
                         , SUM(PBN.STK_ADJ_QTY)                 AS STK_ADJ_QTY
                         , SUM(PBN.SALE_QTY)                    AS SALE_QTY     
                      FROM DPS.PT_PBNDAY PBN
                         , DPS.PT_PBNMONTH PMT
                         , DPS.PC_PBNMST   PBM
                     WHERE PBN.STR_CD     = PMT.STR_CD(+)
                       AND SUBSTR(PBN.STK_DT ,0 ,6) = PMT.STK_YM(+)  
                       AND PBN.PUMBUN_CD  = PMT.PUMBUN_CD(+)
                       AND PBN.EVENT_FLAG = PMT.EVENT_FLAG(+)
                       AND PBN.EVENT_RATE = PMT.EVENT_RATE(+)
                       AND PBN.MG_RATE    = PMT.MG_RATE(+)
                       AND PBN.PUMMOK_CD  = PMT.PUMMOK_CD(+)
                       AND PBN.PUMBUN_CD  = PBM.PUMBUN_CD
                       AND PBN.STR_CD = ?
                       AND PBN.STK_DT BETWEEN ? AND ?
                       AND PMT.STK_YM (+) = ?
                       AND PBM.BIZ_FLAG   LIKE ? || '%'
                       GROUP BY PBN.STR_CD
                              , PBN.DEPT_CD
                              , PBN.TEAM_CD
                              , PBN.PC_CD
                              , PBN.VEN_CD
                              , PBN.PUMBUN_CD
                              , PBN.PUMMOK_CD
                              , PBN.EVENT_FLAG
                              , PBN.EVENT_RATE
                              , PBN.MG_RATE 
                              , PBN.STK_DT                             
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD  = ?
               AND A.STK_DT BETWEEN ? AND ?             
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_QTY_GROUP_TOTAL">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.EVENT_FLAG
                   , A.EVENT_RATE
                   , A.MG_RATE
        ]]>    
    </query>
    
    <!--  금액기준 수불장(세포함) 일별 조회 쿼리  -->
    <query name="SEL_PBNDAY_AMT">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.STK_DT
                 , A.EVENT_FLAG
                 , A.EVENT_RATE
                 , A.MG_RATE
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))     AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))      AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))     AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))      AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))  AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))   AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))    AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))     AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))    AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))     AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))    AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))     AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))    AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))           AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0)) AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))  AS STK_ADJ_GAP_AMT                 
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) + SUM(NVL(A.BORROW_SALE_AMT,0)) 
                     - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                                                 AS SRVY_E_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) 
                     + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) + SUM(NVL(A.STRI_GAP_AMT,0)) 
                     - SUM(NVL(A.STRO_GAP_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0))                            AS SRVY_E_GAP_AMT     
                 
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT PBN.STR_CD                      AS STR_CD
                         , PBN.DEPT_CD                     AS DEPT_CD
                         , PBN.TEAM_CD                     AS TEAM_CD
                         , PBN.PC_CD                       AS PC_CD
                         , PBN.VEN_CD                      AS VEN_CD
                         , PBN.PUMBUN_CD                   AS PUMBUN_CD
                         , PBN.PUMMOK_CD                   AS PUMMOK_CD
                         , PBN.EVENT_FLAG                  AS EVENT_FLAG
                         , PBN.EVENT_RATE                  AS EVENT_RATE
                         , PBN.MG_RATE                     AS MG_RATE
                         , PBN.STK_DT                      AS STK_DT
                         , SUM(NVL(PMT.CAO_SALE_AMT,0))      AS BASE_AMT 
                         , SUM(NVL(PMT.CAO_COST_AMT,0))      AS BASE_COST_AMT
                         , (SELECT NVL(SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0)),0)       
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND PBN.STK_DT - 1
                               AND PBN.STR_CD     = X.STR_CD
                               AND PBN.PUMBUN_CD  = X.PUMBUN_CD
                               AND PBN.EVENT_FLAG = X.EVENT_FLAG
                               AND PBN.EVENT_RATE = X.EVENT_RATE
                               AND PBN.MG_RATE    = X.MG_RATE
                               AND PBN.PUMMOK_CD  = X.PUMMOK_CD)                                AS BASE_DAY_AMT 
                         , (SELECT NVL(SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)),0)     
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND PBN.STK_DT - 1
                               AND PBN.STR_CD     = X.STR_CD
                               AND PBN.PUMBUN_CD  = X.PUMBUN_CD
                               AND PBN.EVENT_FLAG = X.EVENT_FLAG
                               AND PBN.EVENT_RATE = X.EVENT_RATE
                               AND PBN.MG_RATE    = X.MG_RATE
                               AND PBN.PUMMOK_CD = X.PUMMOK_CD)                                AS BASE_COST_DAY_AMT               
                         , SUM(NVL(PBN.BUY_SALE_AMT,0))                                        AS BUY_SALE_AMT
                         , SUM(NVL(PBN.BUY_SALE_AMT,0)) - SUM(NVL(PBN.BUY_COST_AMT,0))         AS BUY_GAP_AMT
                         , SUM(NVL(PBN.RFD_SALE_AMT,0))                                        AS RFD_SALE_AMT
                         , SUM(NVL(PBN.RFD_SALE_AMT,0)) - SUM(NVL(PBN.RFD_COST_AMT,0))         AS RFD_GAP_AMT
                         , SUM(NVL(PBN.BORROW_SALE_AMT,0))                                     AS BORROW_SALE_AMT
                         , SUM(NVL(PBN.BORROW_SALE_AMT,0)) - SUM(NVL(PBN.BORROW_COST_AMT,0))   AS BORROW_GAP_AMT
                         , SUM(NVL(PBN.LEND_SALE_AMT,0))                                       AS LEND_SALE_AMT
                         , SUM(NVL(PBN.LEND_SALE_AMT,0)) - SUM(NVL(PBN.LEND_COST_AMT,0))       AS LEND_GAP_AMT
                         , SUM(NVL(PBN.STRI_SALE_AMT,0))                                       AS STRI_SALE_AMT
                         , SUM(NVL(PBN.STRI_SALE_AMT,0)) - SUM(NVL(PBN.STRI_COST_AMT,0))       AS STRI_GAP_AMT 
                         , SUM(NVL(PBN.STRO_SALE_AMT,0))                                       AS STRO_SALE_AMT
                         , SUM(NVL(PBN.STRO_SALE_AMT,0)) - SUM(NVL(PBN.STRO_COST_AMT,0))       AS STRO_GAP_AMT
                         , SUM(NVL(PBN.SALE_PRC_UP_BF_AMT,0))                                  AS SALE_PRC_UP_BF_AMT
                         , SUM(NVL(PBN.SALE_PRC_DOWN_AF_AMT,0))                                AS SALE_PRC_DOWN_AF_AMT
                         , SUM(NVL(PBN.STK_ADJ_SALE_AMT,0))                                    AS STK_ADJ_SALE_AMT
                         , SUM(NVL(PBN.STK_ADJ_SALE_AMT,0)) - SUM(NVL(PBN.STK_ADJ_COST_AMT,0)) AS STK_ADJ_GAP_AMT
                         , SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0))            AS SALE_SALE_AMT
                         , (SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0))) - SUM(NVL(PBN.SALE_COST_AMT,0))       AS SALE_GAP_AMT
                         , SUM(NVL(PBN.DC_AMT,0))                                              AS DC_AMT
                         
                         , SUM(NVL(PBN.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN SP.TAX_FLAG = 1 THEN 
                            (SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN SP.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(PBN.DC_AMT,0)) - SUM(NVL(PBN.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(PBN.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                           
                      FROM DPS.PT_PBNDAY PBN
                         , DPS.PT_PBNMONTH PMT
                         , DPS.PC_PBNMST   SP
                     WHERE PBN.STR_CD     = PMT.STR_CD(+)
                       AND SUBSTR(PBN.STK_DT ,0 ,6) = PMT.STK_YM(+)  
                       AND PBN.PUMBUN_CD  = PMT.PUMBUN_CD(+)
                       AND PBN.EVENT_FLAG = PMT.EVENT_FLAG(+)
                       AND PBN.EVENT_RATE = PMT.EVENT_RATE(+)
                       AND PBN.MG_RATE    = PMT.MG_RATE(+)
                       AND PBN.PUMMOK_CD  = PMT.PUMMOK_CD(+)
                       AND PBN.PUMBUN_CD  = SP.PUMBUN_CD
                       AND PBN.STR_CD = ?
                       AND PBN.STK_DT BETWEEN ? AND ?
                       AND PMT.STK_YM (+) = ?    
                       AND SP.BIZ_FLAG LIKE ? || '%'                   
                       GROUP BY PBN.STR_CD
                              , PBN.DEPT_CD
                              , PBN.TEAM_CD
                              , PBN.PC_CD
                              , PBN.VEN_CD
                              , PBN.PUMBUN_CD
                              , PBN.PUMMOK_CD
                              , PBN.EVENT_FLAG
                              , PBN.EVENT_RATE
                              , PBN.MG_RATE
                              , PBN.STK_DT
                              , SP.TAX_FLAG
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD  = ?
               AND A.STK_DT BETWEEN ? AND ?       
        ]]>    
    </query>
    
    <!--  금액기준 수불장(세포함) 누계 조회 쿼리  -->
    <query name="SEL_PBNDAY_AMT_TOTAL">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , ''                                 AS STK_DT
                 , A.EVENT_FLAG
                 , A.EVENT_RATE
                 , A.MG_RATE
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))     AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))      AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))     AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))      AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))  AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))   AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))    AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))     AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))    AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))     AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))    AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))     AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))    AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))           AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0)) AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))  AS STK_ADJ_GAP_AMT                 
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) + SUM(NVL(A.BORROW_SALE_AMT,0)) 
                     - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                                                 AS SRVY_E_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) 
                     + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) + SUM(NVL(A.STRI_GAP_AMT,0)) 
                     - SUM(NVL(A.STRO_GAP_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0))                            AS SRVY_E_GAP_AMT    

                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT PBN.STR_CD                      AS STR_CD
                         , PBN.DEPT_CD                     AS DEPT_CD
                         , PBN.TEAM_CD                     AS TEAM_CD
                         , PBN.PC_CD                       AS PC_CD
                         , PBN.VEN_CD                      AS VEN_CD
                         , PBN.PUMBUN_CD                   AS PUMBUN_CD
                         , PBN.PUMMOK_CD                   AS PUMMOK_CD
                         , PBN.EVENT_FLAG                  AS EVENT_FLAG
                         , PBN.EVENT_RATE                  AS EVENT_RATE
                         , PBN.MG_RATE                     AS MG_RATE
                         , PBN.STK_DT                      AS STK_DT
                         , SUM(NVL(PMT.CAO_SALE_AMT,0))      AS BASE_AMT 
                         , SUM(NVL(PMT.CAO_COST_AMT,0))      AS BASE_COST_AMT
                         , (SELECT NVL(SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0)),0)       
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND PBN.STK_DT     = ?
                               AND PBN.STR_CD     = X.STR_CD
                               AND PBN.PUMBUN_CD  = X.PUMBUN_CD
                               AND PBN.EVENT_FLAG = X.EVENT_FLAG
                               AND PBN.EVENT_RATE = X.EVENT_RATE
                               AND PBN.MG_RATE    = X.MG_RATE
                               AND PBN.PUMMOK_CD  = X.PUMMOK_CD)                                AS BASE_DAY_AMT 
                         , (SELECT NVL(SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)),0)     
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND PBN.STK_DT     = ?
                               AND PBN.STR_CD     = X.STR_CD
                               AND PBN.PUMBUN_CD  = X.PUMBUN_CD
                               AND PBN.EVENT_FLAG = X.EVENT_FLAG
                               AND PBN.EVENT_RATE = X.EVENT_RATE
                               AND PBN.MG_RATE    = X.MG_RATE
                               AND PBN.PUMMOK_CD = X.PUMMOK_CD)                                AS BASE_COST_DAY_AMT               
                         , SUM(NVL(PBN.BUY_SALE_AMT,0))                                        AS BUY_SALE_AMT
                         , SUM(NVL(PBN.BUY_SALE_AMT,0)) - SUM(NVL(PBN.BUY_COST_AMT,0))         AS BUY_GAP_AMT
                         , SUM(NVL(PBN.RFD_SALE_AMT,0))                                        AS RFD_SALE_AMT
                         , SUM(NVL(PBN.RFD_SALE_AMT,0)) - SUM(NVL(PBN.RFD_COST_AMT,0))         AS RFD_GAP_AMT
                         , SUM(NVL(PBN.BORROW_SALE_AMT,0))                                     AS BORROW_SALE_AMT
                         , SUM(NVL(PBN.BORROW_SALE_AMT,0)) - SUM(NVL(PBN.BORROW_COST_AMT,0))   AS BORROW_GAP_AMT
                         , SUM(NVL(PBN.LEND_SALE_AMT,0))                                       AS LEND_SALE_AMT
                         , SUM(NVL(PBN.LEND_SALE_AMT,0)) - SUM(NVL(PBN.LEND_COST_AMT,0))       AS LEND_GAP_AMT
                         , SUM(NVL(PBN.STRI_SALE_AMT,0))                                       AS STRI_SALE_AMT
                         , SUM(NVL(PBN.STRI_SALE_AMT,0)) - SUM(NVL(PBN.STRI_COST_AMT,0))       AS STRI_GAP_AMT 
                         , SUM(NVL(PBN.STRO_SALE_AMT,0))                                       AS STRO_SALE_AMT
                         , SUM(NVL(PBN.STRO_SALE_AMT,0)) - SUM(NVL(PBN.STRO_COST_AMT,0))       AS STRO_GAP_AMT
                         , SUM(NVL(PBN.SALE_PRC_UP_BF_AMT,0))                                  AS SALE_PRC_UP_BF_AMT
                         , SUM(NVL(PBN.SALE_PRC_DOWN_AF_AMT,0))                                AS SALE_PRC_DOWN_AF_AMT
                         , SUM(NVL(PBN.STK_ADJ_SALE_AMT,0))                                    AS STK_ADJ_SALE_AMT
                         , SUM(NVL(PBN.STK_ADJ_SALE_AMT,0)) - SUM(NVL(PBN.STK_ADJ_COST_AMT,0)) AS STK_ADJ_GAP_AMT
                         , SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0))            AS SALE_SALE_AMT
                         , (SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0))) - SUM(NVL(PBN.SALE_COST_AMT,0))       AS SALE_GAP_AMT
                         , SUM(NVL(PBN.DC_AMT,0))                                              AS DC_AMT
                         
                         , SUM(NVL(PBN.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN SP.TAX_FLAG = 1 THEN 
                            (SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(PBN.SALE_SALE_AMT,0)) - SUM(NVL(PBN.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN SP.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(PBN.DC_AMT,0)) - SUM(NVL(PBN.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(PBN.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                           
                      FROM DPS.PT_PBNDAY PBN
                         , DPS.PT_PBNMONTH PMT
                         , DPS.PC_PBNMST   SP
                     WHERE PBN.STR_CD     = PMT.STR_CD(+)
                       AND SUBSTR(PBN.STK_DT ,0 ,6) = PMT.STK_YM(+)  
                       AND PBN.PUMBUN_CD  = PMT.PUMBUN_CD(+)
                       AND PBN.EVENT_FLAG = PMT.EVENT_FLAG(+)
                       AND PBN.EVENT_RATE = PMT.EVENT_RATE(+)
                       AND PBN.MG_RATE    = PMT.MG_RATE(+)
                       AND PBN.PUMMOK_CD  = PMT.PUMMOK_CD(+)
                       AND PBN.PUMBUN_CD  = SP.PUMBUN_CD
                       AND PBN.STR_CD = ?
                       AND PBN.STK_DT BETWEEN ? AND ?
                       AND PMT.STK_YM (+) = ?     
                       AND SP.BIZ_FLAG LIKE ? || '%'                  
                       GROUP BY PBN.STR_CD
                              , PBN.DEPT_CD
                              , PBN.TEAM_CD
                              , PBN.PC_CD
                              , PBN.VEN_CD
                              , PBN.PUMBUN_CD
                              , PBN.PUMMOK_CD
                              , PBN.EVENT_FLAG
                              , PBN.EVENT_RATE
                              , PBN.MG_RATE
                              , PBN.STK_DT
                              , SP.TAX_FLAG
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD  = ?
               AND A.STK_DT BETWEEN ? AND ?       
        ]]>    
    </query>
    
    <!--  금액기준 수불장(세제외) 일별 조회 쿼리  -->
    <query name="SEL_PBNDAY_TAX_AMT">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.STK_DT
                 , A.EVENT_FLAG
                 , A.EVENT_RATE
                 , A.MG_RATE
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))     AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))      AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))     AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))      AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))  AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))   AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))    AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))     AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))    AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))     AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))    AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))     AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))    AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))           AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0)) AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))  AS STK_ADJ_GAP_AMT                 
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) + SUM(NVL(A.BORROW_SALE_AMT,0)) 
                     - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                                                 AS SRVY_E_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) 
                     + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) + SUM(NVL(A.STRI_GAP_AMT,0)) 
                     - SUM(NVL(A.STRO_GAP_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0))                            AS SRVY_E_GAP_AMT    
                   
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT DAY.STR_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , DAY.VEN_CD
                         , DAY.PUMBUN_CD
                         , TAX_FLAG
                         , DAY.PUMMOK_CD
                         , DAY.EVENT_FLAG
                         , DAY.EVENT_RATE
                         , DAY.MG_RATE                         
                         , DAY.STK_DT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_SALE_AMT,0)) - SUM(NVL(CAO_SALE_AMT,0)) * 0.1 , 0)                                                
                               ELSE   
                                    SUM(NVL(CAO_SALE_AMT,0))                              
                           END AS BASE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_COST_AMT,0)) - SUM(NVL(CAO_COST_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(CAO_COST_AMT,0))                              
                           END AS BASE_COST_AMT
                         , (SELECT CASE WHEN TAX_FLAG = 1 THEN
                                       TRUNC(SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0)) - (SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0))) * 0.1 , 0)  
                                   ELSE
                                       SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0))                              
                                   END AS BASE_AMT
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND DAY.STK_DT - 1
                               AND DAY.STR_CD     = X.STR_CD
                               AND DAY.PUMBUN_CD  = X.PUMBUN_CD
                               AND DAY.EVENT_FLAG = X.EVENT_FLAG
                               AND DAY.EVENT_RATE = X.EVENT_RATE
                               AND DAY.MG_RATE    = X.MG_RATE
                               AND DAY.PUMMOK_CD  = X.PUMMOK_CD)       AS BASE_DAY_AMT 
                         , (SELECT CASE WHEN TAX_FLAG = 1 THEN
                                       TRUNC(SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)) - (SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)))  * 0.1 , 0)  
                                   ELSE
                                       SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))                              
                                   END AS BASE_COST_AMT                         
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN ? AND DAY.STK_DT - 1
                               AND DAY.STR_CD     = X.STR_CD
                               AND DAY.PUMBUN_CD  = X.PUMBUN_CD
                               AND DAY.EVENT_FLAG = X.EVENT_FLAG
                               AND DAY.EVENT_RATE = X.EVENT_RATE
                               AND DAY.MG_RATE    = X.MG_RATE
                               AND DAY.PUMMOK_CD  = X.PUMMOK_CD)       AS BASE_COST_DAY_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_SALE_AMT,0)) * 0.1 , 0)                                                     
                               ELSE   
                                    SUM(NVL(DAY.BUY_SALE_AMT,0))                              
                           END AS BUY_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_COST_AMT,0)) - (SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_COST_AMT,0))                               
                           END AS BUY_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_SALE_AMT,0)) * 0.1 , 0)                                                                                     
                               ELSE   
                                    SUM(NVL(DAY.RFD_SALE_AMT,0))                               
                           END AS RFD_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_COST_AMT,0)) - (SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_COST_AMT,0))) * 0.1 , 0)                                                               
                               ELSE   
                                    SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_COST_AMT,0))                              
                           END AS RFD_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_SALE_AMT,0)) * 0.1 , 0)                                                                                
                               ELSE   
                                    SUM(NVL(DAY.BORROW_SALE_AMT,0))                              
                           END AS BORROW_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_COST_AMT,0)) - (SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_COST_AMT,0))                               
                           END AS BORROW_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_SALE_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(DAY.LEND_SALE_AMT,0))                               
                           END AS LEND_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_COST_AMT,0)) - (SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_COST_AMT,0))) * 0.1 , 0)                                                           
                               ELSE   
                                    SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_COST_AMT,0))                               
                           END AS LEND_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_SALE_AMT,0))* 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DAY.STRI_SALE_AMT,0))                              
                           END AS STRI_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_COST_AMT,0)) - (SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_COST_AMT,0))) * 0.1 , 0)                                                                     
                               ELSE   
                                    SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_COST_AMT,0))                              
                           END AS STRI_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_SALE_AMT,0)) * 0.1 , 0)                                                                                                            
                               ELSE   
                                    SUM(NVL(DAY.STRO_SALE_AMT,0))                              
                           END AS STRO_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_COST_AMT,0)) - (SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_COST_AMT,0))) * 0.1 , 0)                                                        
                               ELSE   
                                    SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_COST_AMT,0))                              
                           END AS STRO_GAP_AMT
                           
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(DAY.SALE_PRC_UP_BF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(DAY.SALE_PRC_UP_BF_AMT,0)) END                                 AS SALE_PRC_UP_BF_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(DAY.SALE_PRC_DOWN_AF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(DAY.SALE_PRC_DOWN_AF_AMT,0)) END                               AS SALE_PRC_DOWN_AF_AMT
                         
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) * 0.1 , 0)                                                                             
                               ELSE   
                                    SUM(NVL(DAY.STK_ADJ_SALE_AMT,0))                               
                           END AS STK_ADJ_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_COST_AMT,0)) - (SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                                            
                               ELSE   
                                    SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_COST_AMT,0))                               
                           END AS STK_ADJ_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC((SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))) - (SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))                              
                           END AS SALE_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC((SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))) - SUM(NVL(DAY.SALE_COST_AMT,0)) - ((SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))) - SUM(NVL(DAY.SALE_COST_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    (SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))) - SUM(NVL(DAY.SALE_COST_AMT,0))                               
                           END AS SALE_GAP_AMT                          
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.DC_AMT,0)) - SUM(NVL(DAY.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DAY.DC_AMT,0))                               
                           END AS DC_AMT 
                           
                         , SUM(NVL(DAY.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN PBN.TAX_FLAG = 1 THEN 
                            (SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN PBN.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.DC_AMT,0)) - SUM(NVL(DAY.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DAY.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                      FROM DPS.PT_PBNDAY DAY
                         , DPS.PT_PBNMONTH PMT
                         , DPS.PC_PBNMST PBN
                     WHERE DAY.PUMBUN_CD = PBN.PUMBUN_CD
                       AND DAY.STR_CD     = PMT.STR_CD(+)
                       AND SUBSTR(DAY.STK_DT ,0 ,6) = PMT.STK_YM(+)  
                       AND DAY.PUMBUN_CD  = PMT.PUMBUN_CD(+)
                       AND DAY.EVENT_FLAG = PMT.EVENT_FLAG(+)
                       AND DAY.EVENT_RATE = PMT.EVENT_RATE(+)
                       AND DAY.MG_RATE    = PMT.MG_RATE(+)
                       AND DAY.PUMMOK_CD  = PMT.PUMMOK_CD(+)
                       AND DAY.STR_CD = ?
                       AND DAY.STK_DT BETWEEN ? AND ?
                       AND PMT.STK_YM (+)= ?
                       AND PBN.BIZ_FLAG LIKE ? || '%'
                       GROUP BY DAY.STR_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , DAY.VEN_CD
                              , DAY.PUMBUN_CD
                              , TAX_FLAG
                              , DAY.PUMMOK_CD
                              , DAY.EVENT_FLAG
                              , DAY.EVENT_RATE
                              , DAY.MG_RATE                               
                              , DAY.STK_DT
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD  = ?
               AND A.STK_DT BETWEEN ? AND ?       
        ]]>    
    </query>
    
    <!--  금액기준 수불장(세제외) 누계 조회 쿼리  -->
    <query name="SEL_PBNDAY_TAX_AMT_TOTAL">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , ''                                 AS STK_DT
                 , A.EVENT_FLAG
                 , A.EVENT_RATE
                 , A.MG_RATE
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))     AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))      AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))     AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))      AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))  AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))   AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))    AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))     AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))    AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))     AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))    AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))     AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))    AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))           AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0)) AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))  AS STK_ADJ_GAP_AMT                 
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) + SUM(NVL(A.BORROW_SALE_AMT,0)) 
                     - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                                                 AS SRVY_E_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) 
                     + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) + SUM(NVL(A.STRI_GAP_AMT,0)) 
                     - SUM(NVL(A.STRO_GAP_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0))                            AS SRVY_E_GAP_AMT                
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT DAY.STR_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , DAY.VEN_CD
                         , DAY.PUMBUN_CD
                         , TAX_FLAG
                         , DAY.PUMMOK_CD
                         , DAY.EVENT_FLAG
                         , DAY.EVENT_RATE
                         , DAY.MG_RATE                         
                         , DAY.STK_DT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_SALE_AMT,0)) - SUM(NVL(CAO_SALE_AMT,0)) * 0.1 , 0)                                                
                               ELSE   
                                    SUM(NVL(CAO_SALE_AMT,0))                              
                           END AS BASE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_COST_AMT,0)) - SUM(NVL(CAO_COST_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(CAO_COST_AMT,0))                              
                           END AS BASE_COST_AMT
                         , (SELECT CASE WHEN TAX_FLAG = 1 THEN
                                       TRUNC(SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0)) - (SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0))) * 0.1 , 0)  
                                   ELSE
                                       SUM(NVL(X.BUY_TOT_SALE_AMT,0)) - (SUM(NVL(X.SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(X.STK_ADJ_SALE_AMT,0))                              
                                   END AS BASE_AMT
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN  ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND DAY.STK_DT     = ?
                               AND DAY.STR_CD     = X.STR_CD
                               AND DAY.PUMBUN_CD  = X.PUMBUN_CD
                               AND DAY.EVENT_FLAG = X.EVENT_FLAG
                               AND DAY.EVENT_RATE = X.EVENT_RATE
                               AND DAY.MG_RATE    = X.MG_RATE
                               AND DAY.PUMMOK_CD  = X.PUMMOK_CD)       AS BASE_DAY_AMT 
                         , (SELECT CASE WHEN TAX_FLAG = 1 THEN
                                       TRUNC(SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)) - (SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)))  * 0.1 , 0)  
                                   ELSE
                                       SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))                              
                                   END AS BASE_COST_AMT                         
                              FROM DPS.PT_PBNDAY X
                             WHERE X.STK_DT BETWEEN  ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND DAY.STK_DT     = ?
                               AND DAY.STR_CD     = X.STR_CD
                               AND DAY.PUMBUN_CD  = X.PUMBUN_CD
                               AND DAY.EVENT_FLAG = X.EVENT_FLAG
                               AND DAY.EVENT_RATE = X.EVENT_RATE
                               AND DAY.MG_RATE    = X.MG_RATE
                               AND DAY.PUMMOK_CD  = X.PUMMOK_CD)       AS BASE_COST_DAY_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_SALE_AMT,0)) * 0.1 , 0)                                                     
                               ELSE   
                                    SUM(NVL(DAY.BUY_SALE_AMT,0))                              
                           END AS BUY_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_COST_AMT,0)) - (SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(DAY.BUY_SALE_AMT,0)) - SUM(NVL(DAY.BUY_COST_AMT,0))                               
                           END AS BUY_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_SALE_AMT,0)) * 0.1 , 0)                                                                                     
                               ELSE   
                                    SUM(NVL(DAY.RFD_SALE_AMT,0))                               
                           END AS RFD_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_COST_AMT,0)) - (SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_COST_AMT,0))) * 0.1 , 0)                                                               
                               ELSE   
                                    SUM(NVL(DAY.RFD_SALE_AMT,0)) - SUM(NVL(DAY.RFD_COST_AMT,0))                              
                           END AS RFD_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_SALE_AMT,0)) * 0.1 , 0)                                                                                
                               ELSE   
                                    SUM(NVL(DAY.BORROW_SALE_AMT,0))                              
                           END AS BORROW_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_COST_AMT,0)) - (SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(DAY.BORROW_SALE_AMT,0)) - SUM(NVL(DAY.BORROW_COST_AMT,0))                               
                           END AS BORROW_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_SALE_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(DAY.LEND_SALE_AMT,0))                               
                           END AS LEND_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_COST_AMT,0)) - (SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_COST_AMT,0))) * 0.1 , 0)                                                           
                               ELSE   
                                    SUM(NVL(DAY.LEND_SALE_AMT,0)) - SUM(NVL(DAY.LEND_COST_AMT,0))                               
                           END AS LEND_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_SALE_AMT,0))* 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DAY.STRI_SALE_AMT,0))                              
                           END AS STRI_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_COST_AMT,0)) - (SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_COST_AMT,0))) * 0.1 , 0)                                                                     
                               ELSE   
                                    SUM(NVL(DAY.STRI_SALE_AMT,0)) - SUM(NVL(DAY.STRI_COST_AMT,0))                              
                           END AS STRI_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_SALE_AMT,0)) * 0.1 , 0)                                                                                                            
                               ELSE   
                                    SUM(NVL(DAY.STRO_SALE_AMT,0))                              
                           END AS STRO_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_COST_AMT,0)) - (SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_COST_AMT,0))) * 0.1 , 0)                                                        
                               ELSE   
                                    SUM(NVL(DAY.STRO_SALE_AMT,0)) - SUM(NVL(DAY.STRO_COST_AMT,0))                              
                           END AS STRO_GAP_AMT
                           
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(DAY.SALE_PRC_UP_BF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(DAY.SALE_PRC_UP_BF_AMT,0))   END                               AS SALE_PRC_UP_BF_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(DAY.SALE_PRC_DOWN_AF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(DAY.SALE_PRC_DOWN_AF_AMT,0))   END                             AS SALE_PRC_DOWN_AF_AMT
                         
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) * 0.1 , 0)                                                                             
                               ELSE   
                                    SUM(NVL(DAY.STK_ADJ_SALE_AMT,0))                               
                           END AS STK_ADJ_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_COST_AMT,0)) - (SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                                            
                               ELSE   
                                    SUM(NVL(DAY.STK_ADJ_SALE_AMT,0)) - SUM(NVL(DAY.STK_ADJ_COST_AMT,0))                               
                           END AS STK_ADJ_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)) - (SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0))                              
                           END AS SALE_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)) - SUM(NVL(DAY.SALE_COST_AMT,0)) - (SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)) - SUM(NVL(DAY.SALE_COST_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)) - SUM(NVL(DAY.SALE_COST_AMT,0))                               
                           END AS SALE_GAP_AMT                          
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.DC_AMT,0)) - SUM(NVL(DAY.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DAY.DC_AMT,0))                               
                           END AS DC_AMT 
                           
                         , SUM(NVL(DAY.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN PBN.TAX_FLAG = 1 THEN 
                            (SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(DAY.SALE_SALE_AMT,0)) - SUM(NVL(DAY.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN PBN.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(DAY.DC_AMT,0)) - SUM(NVL(DAY.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(DAY.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                      FROM DPS.PT_PBNDAY DAY
                         , DPS.PT_PBNMONTH PMT
                         , DPS.PC_PBNMST PBN
                     WHERE DAY.PUMBUN_CD = PBN.PUMBUN_CD
                       AND DAY.STR_CD     = PMT.STR_CD(+)
                       AND SUBSTR(DAY.STK_DT ,0 ,6) = PMT.STK_YM(+)  
                       AND DAY.PUMBUN_CD  = PMT.PUMBUN_CD(+)
                       AND DAY.EVENT_FLAG = PMT.EVENT_FLAG(+)
                       AND DAY.EVENT_RATE = PMT.EVENT_RATE(+)
                       AND DAY.MG_RATE    = PMT.MG_RATE(+)
                       AND DAY.PUMMOK_CD  = PMT.PUMMOK_CD(+)
                       AND DAY.STR_CD = ?
                       AND DAY.STK_DT BETWEEN ? AND ?
                       AND PMT.STK_YM (+) = ?
                       AND PBN.BIZ_FLAG LIKE ? || '%'
                       GROUP BY DAY.STR_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , DAY.VEN_CD
                              , DAY.PUMBUN_CD
                              , TAX_FLAG
                              , DAY.PUMMOK_CD
                              , DAY.EVENT_FLAG
                              , DAY.EVENT_RATE
                              , DAY.MG_RATE                               
                              , DAY.STK_DT
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD  = ?
               AND A.STK_DT BETWEEN ? AND ?       
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_WHERE_DEPT_CD">
        <![CDATA[
               AND A.DEPT_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_WHERE_TEAM_CD">
        <![CDATA[
               AND A.TEAM_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_WHERE_PC_CD">
        <![CDATA[
               AND A.PC_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_WHERE_PUMBUN_CD">
        <![CDATA[
               AND A.PUMBUN_CD = ?
        ]]>    
    </query>
    <!--  금액기준 수불장(세제외) 일별 그룹  -->
    <query name="SEL_PBNDAY_AMT_GROUP">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.EVENT_FLAG
                   , A.EVENT_RATE
                   , A.MG_RATE
                   , A.STK_DT
        ]]>    
    </query>
    <!--  금액기준 수불장(세제외) 누계 그룹  -->
    <query name="SEL_PBNDAY_AMT_GROUP_TOTAL">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.EVENT_FLAG
                   , A.EVENT_RATE
                   , A.MG_RATE
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_DAY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD, A.STK_DT
        ]]>    
    </query>
    
    <query name="SEL_PBNDAY_AMT_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
        ]]>    
    </query>
    
</service>