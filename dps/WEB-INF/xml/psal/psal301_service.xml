<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다. -->
<!-- * 작 성 자 : 박종은 * 회 사 명 : 한국후지쯔 * 작 성 일 : 2010.04.08 * 변 경 일 : * 변경내용 
	: * 개 요 : -->
<service name="/psal301.ps">



	<gauce name="H_SEL_MASTER">
		<column colName="STR_CD" colType="TB_STRING" size="40" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="STR_NAME" colType="TB_STRING" size="40" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ORG_CD" colType="TB_STRING" size="40" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ORG_NAME" colType="TB_STRING" size="40" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ORIGIN_SALE_TAMT" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ORIGIN_SALE_TAMT_OFF" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ORIGIN_SALE_TAMT_ON" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ORIGIN_SALE_TAMT_NAVER" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_OFF" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_ON" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_NAVER" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="ACHIEVERATE" colType="TB_DECIMAL" size="5"
			dec="2" keyType="TB_NORMAL" roundMode="ROUND" />

		<column colName="TOT_COMP_RATE" colType="TB_DECIMAL" size="13"
			dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="REDU_AMT" colType="TB_DECIMAL" size="13" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="NORM_SALE_AMT" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="DC_AMT" colType="TB_DECIMAL" size="13" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="NET_SALE_AMT" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="SALE_PROF_AMT" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="PROFRATE" colType="TB_DECIMAL" size="5" dec="2"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="CUST_CNT" colType="TB_DECIMAL" size="13" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="CUST_DANGA" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />

		<column colName="TOT_SALE_AMT_CMPR1" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR1_OFF" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR1_ON" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR1_NAVER" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_COMP_RATE_CMPR1" colType="TB_DECIMAL"
			size="5" dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="SALEIRATE1" colType="TB_DECIMAL" size="5" dec="2"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR2" colType="TB_DECIMAL" size="13"
			dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR2_OFF" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR2_ON" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_SALE_AMT_CMPR2_NAVER" colType="TB_DECIMAL"
			size="13" dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="TOT_COMP_RATE_CMPR2" colType="TB_DECIMAL"
			size="5" dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="SALEIRATE2" colType="TB_DECIMAL" size="5" dec="2"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="SKU_FLAG" colType="TB_STRING" size="1" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="UNIT"     colType="TB_DECIMAL" size="10" dec="0" 
			keyType="TB_NORMAL" roundMode="ROUND" />	
	</gauce>


	<gauce name="H_SEL_CMPRDT">
		<column colName="CMPR_DT" colType="TB_STRING" size="8" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
	</gauce>

	<gauce name="H_SEL_CMPRDT2">
		<column colName="CMPR_DT" colType="TB_STRING" size="8" dec="0"
			keyType="TB_NORMAL" roundMode="ROUND" />
	</gauce>

	<!-- 쿼리는 전부 대문자 -->

	<!-- 마스터 조회 쿼리 -->
	<query name="SEL_SALE_DEPT3-01">        
        <![CDATA[
             SELECT 
             	X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 4) || '000000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'D'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                             AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,8) || '00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                    AS ORIGIN_SALE_TAMT
                                , 0                                    AS ORIGIN_SALE_TAMT_OFF
                                , 0                                    AS ORIGIN_SALE_TAMT_ON, 0                                    AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND G.STR_CD    = ?
    ]]>
	</query>
                              
                              
	<query name="SEL_SALE_DEPT3-02">        
        <![CDATA[
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , SUBSTR(H.SALE_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF --  20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE G.STR_CD    = ?
    ]]>
	</query>

	<query name="SEL_SALE_DEPT3-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE G.STR_CD    = ?
    ]]>
	</query>
                            
                              
	<query name="SEL_SALE_DEPT3-04">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?
                              AND G.STR_CD    = ?
    ]]>
	</query>
                              
                              
	<query name="SEL_SALE_DEPT3-05">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.SALE_ORG_CD,1,8)
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY
                    DECODE(X.ORG_CD,'0104000000',NULL,X.ORG_CD) NULLS LAST
                  --------------------------------------------1
    ]]>
	</query>
	<query name="SEL_SALE_DEPT4-01">        
        <![CDATA[
             SELECT 
             		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 4) || '000000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'D'   AS SKU_FLAG
                     FROM (                           SELECT 
                                  A.STR_CD                             AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,8) || '00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                    AS ORIGIN_SALE_TAMT
                                , 0                                    AS ORIGIN_SALE_TAMT_OFF
                                , 0                                    AS ORIGIN_SALE_TAMT_ON, 0                                    AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.BUY_ORG_CD  = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND G.STR_CD    = ?
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_DEPT4-02">        
        <![CDATA[
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , SUBSTR(H.BUY_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE G.STR_CD    = ?
                            
        ]]>
	</query>
                              
	<query name="SEL_SALE_DEPT4-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2	 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF	 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE G.STR_CD    = ?
                            
        ]]>
	</query>
                              
	<query name="SEL_SALE_DEPT4-04">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                          UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT	 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?
                              AND G.STR_CD    = ?
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_DEPT4-05">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)= C.PUMBUN_CD
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.BUY_ORG_CD,1,8)         
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY
                    DECODE(X.ORG_CD,'010D000000',NULL,X.ORG_CD) NULLS LAST      
                    --------------------------------------------2
        ]]>
	</query>
	
	<query name="SEL_SALE_DEPT-01">        
        <![CDATA[
            SELECT  
            		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분
                  , ? AS UNIT                
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 4) || '000000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'D'   AS SKU_FLAG
                             FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                        , SUBSTR(H.SALE_ORG_CD,1,8) || '00'   AS ORG_CD
                                        , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                        , SUM(A.SALE_QTY)                     AS SALE_QTY
                                        , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
	                                    , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
	                                    , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
	                                    , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                        , SUM(A.VAT_AMT)                      AS VAT_AMT
                                        , SUM(A.REDU_AMT)                     AS REDU_AMT
                                        , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                        , SUM(A.DC_AMT)                       AS DC_AMT
                                        , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                        , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                        , SUM(A.CUST_CNT)                     AS CUST_CNT
                                        , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                        , 0                                   AS TOT_SALE_AMT_CMPR1
                                        , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                        , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                        , 0                                  AS ORIGIN_SALE_TAMT
                                        , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                        , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER        
                                     FROM DPS.PS_DAYPBN    A
                                        , DPS.PC_STRPBN    H
                                        , DPS.PC_ORGMST    G
                                        , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
		                                     FROM COM.TC_COMMCODE Y
		                                    WHERE Y.SYS_PART = 'D'
		                                      AND Y.COMM_PART = 'P614'
		                                  ) Y
                                    WHERE H.STR_CD      = G.STR_CD
                                      AND H.SALE_ORG_CD = G.ORG_CD
                                      AND A.STR_CD      = H.STR_CD
                                      AND A.PUMBUN_CD   = H.PUMBUN_CD
                                      AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                                      AND G.STR_CD   = ?
        ]]>
	</query>
	
	<query name="SEL_SALE_DEPT-02">        
        <![CDATA[
                                      AND A.SALE_DT     >= ?  -- 매출기간(시작)
                                      AND A.SALE_DT     <= ?  -- 매출기간(종료)
                                      AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                        GROUP BY A.STR_CD
                                               , SUBSTR(H.SALE_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD                                                                                   
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                                       
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y                                                                     
                            WHERE D.STR_CD    = ?                                                               
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점
        ]]>
	</query>
                                                         
	<query name="SEL_SALE_DEPT-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                          UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER 
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?
                               AND G.STR_CD    = ? 
        ]]>
	</query>
                               
                               
	<query name="SEL_SALE_DEPT-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)= C.PUMBUN_CD
                               AND G.ORG_CD    = I.SALE_ORG_CD
                               AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.SALE_ORG_CD,1,8)
                                    ) A  
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY
                    DECODE(X.ORG_CD,'0104000000',NULL,X.ORG_CD) NULLS LAST
                             --------------------------------------------3
        ]]>
	</query>
	<query name="SEL_SALE_DEPT2-01">        
        <![CDATA[
            SELECT 
            		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분
                  , ? AS UNIT                
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 4) || '000000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'D'   AS SKU_FLAG
                             FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                        , SUBSTR(H.BUY_ORG_CD,1,8) || '00'   AS ORG_CD
                                        , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                        , SUM(A.SALE_QTY)                     AS SALE_QTY
                                        , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                        , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                        , SUM(A.VAT_AMT)                      AS VAT_AMT
                                        , SUM(A.REDU_AMT)                     AS REDU_AMT
                                        , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                        , SUM(A.DC_AMT)                       AS DC_AMT
                                        , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                        , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                        , SUM(A.CUST_CNT)                     AS CUST_CNT
                                        , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                        , 0                                   AS TOT_SALE_AMT_CMPR1
                                        , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                        , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                        , 0                                  AS ORIGIN_SALE_TAMT
                                        , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                        , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                                     FROM DPS.PS_DAYPBN    A
                                        , DPS.PC_STRPBN    H
                                        , DPS.PC_ORGMST    G
                                        , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
										   FROM COM.TC_COMMCODE Y
										  WHERE Y.SYS_PART = 'D'
										    AND Y.COMM_PART = 'P614'
										) Y
                                    WHERE H.STR_CD      = G.STR_CD
                                      AND H.BUY_ORG_CD = G.ORG_CD
                                      AND A.STR_CD      = H.STR_CD
                                      AND A.PUMBUN_CD   = H.PUMBUN_CD
                                      AND Y.PUMBUN_CD(+)= H.PUMBUN_CD 
                                      AND G.STR_CD    = ?
                                      
                                      
        ]]>
	</query>
                                      
	<query name="SEL_SALE_DEPT2-02">        
        <![CDATA[
                                      AND A.SALE_DT     >= ?  -- 매출기간(시작)
                                      AND A.SALE_DT     <= ?  -- 매출기간(종료)
                                      AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                        GROUP BY A.STR_CD
                                               , SUBSTR(H.BUY_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD                                                                                   
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                                       
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D    
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y                                                                      
                            WHERE D.STR_CD    = ?                            
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?  -- 점     
                              
                                                                                        
        ]]>
	</query>
                              
                              
	<query name="SEL_SALE_DEPT2-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                          UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                   
                              AND G.STR_CD    = ?  -- 점 
                                                                                            
         ]]>
	</query>
                              
	<query name="SEL_SALE_DEPT2-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)= I.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.BUY_ORG_CD,1,8)         
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY
                    DECODE(X.ORG_CD,'010D000000',NULL,X.ORG_CD) NULLS LAST
                    --------------------------------------------4
        ]]>
	</query>


	<query name="SEL_SALE_SKU4">        
        <![CDATA[
    		 SELECT 
    		 		F.PUMBUN_CD,
                    DPS.FN_GET_PUMBUN_SNAME(F.PUMBUN_CD) STR_NAME,
     		 		 A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , 0                                                                 AS ORIGIN_SALE_TAMT_OFF
                  , 0                                                                 AS ORIGIN_SALE_TAMT, 0                                                                 AS ORIGIN_SALE_TAMT_ON, 0                                                                 AS ORIGIN_SALE_TAMT_NAVER
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                        AS TOT_SALE_AMT_CMPR1_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                        AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                        AS TOT_SALE_AMT_CMPR1_NAVER
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR2
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                  , 'E' AS SKU_FLAG
                  , ? AS UNIT
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.NORM_SALE_AMT     ) AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER      -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1
                          , 0                        AS TOT_SALE_AMT_CMPR1_OFF
                          , 0                        AS TOT_SALE_AMT_CMPR1_ON, 0                        AS TOT_SALE_AMT_CMPR1_NAVER 
                          , 0                        AS TOT_SALE_AMT_CMPR2
                          , 0                        AS TOT_SALE_AMT_CMPR2_OFF
                          , 0                        AS TOT_SALE_AMT_CMPR2_ON   
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.BUY_ORG_CD   	= B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                        AND B.STR_CD    = ?
                        AND B.DEPT_CD   = ?
                        AND B.TEAM_CD   = ?
                        AND B.PC_CD     = ?
                        AND B.CORNER_CD LIKE ? || '%'
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT
                          , 0                   AS TOT_SALE_AMT_OFF
                          , 0                   AS TOT_SALE_AMT_ON, 0                   AS TOT_SALE_AMT_NAVER         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT             
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.NORM_SALE_AMT) AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경   
                          , 0                   AS TOT_SALE_AMT_CMPR2
                          , 0                   AS TOT_SALE_AMT_CMPR2_OFF
                          , 0                   AS TOT_SALE_AMT_CMPR2_ON   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.BUY_ORG_CD    = G.ORG_CD  
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                        AND D.STR_CD    = ?
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 1
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 1
                        AND G.STR_CD     = ?
                        AND G.DEPT_CD    = ?
                        AND G.TEAM_CD    = ?
                        AND G.PC_CD      = ?
                        AND G.CORNER_CD LIKE ? || '%'
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT
                          , 0                   AS TOT_SALE_AMT_OFF
                          , 0                   AS TOT_SALE_AMT_ON, 0                   AS TOT_SALE_AMT_NAVER         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT             
                          , 0                   AS SAL_COST_PRC         
                          , 0                   AS TOT_SALE_AMT_CMPR1
                          , 0                   AS TOT_SALE_AMT_CMPR1_OFF
                          , 0                   AS TOT_SALE_AMT_CMPR1_ON           
                          , SUM(F.NORM_SALE_AMT) AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER    -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.BUY_ORG_CD    = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                        AND D.STR_CD    = ?
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 2
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 2
                        AND G.STR_CD     = ?
                        AND G.DEPT_CD    = ?
                        AND G.TEAM_CD    = ?
                        AND G.PC_CD      = ?
                        AND G.CORNER_CD LIKE ? || '%'
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD         
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
              		F.PUMBUN_CD,
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
    --------------------------------------------5
    ]]>
	</query>

	<query name="SEL_SALE_SKU3">        
        <![CDATA[
             SELECT 
             		F.PUMBUN_CD,
                    DPS.FN_GET_PUMBUN_SNAME(F.PUMBUN_CD) STR_NAME,
             		A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , 0                                                                 AS ORIGIN_SALE_TAMT_OFF
                  , 0                                                                 AS ORIGIN_SALE_TAMT_ON
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                        AS TOT_SALE_AMT_CMPR1_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                        AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                        AS TOT_SALE_AMT_CMPR1_NAVER
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR2
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                  , 'E' AS SKU_FLAG
                  , ? AS UNIT
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.NORM_SALE_AMT     ) AS TOT_SALE_AMT  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER      -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1
                          , 0                        AS TOT_SALE_AMT_CMPR1_OFF
                          , 0                        AS TOT_SALE_AMT_CMPR1_ON, 0                        AS TOT_SALE_AMT_CMPR1_NAVER 
                          , 0                        AS TOT_SALE_AMT_CMPR2
                          , 0                        AS TOT_SALE_AMT_CMPR2_OFF
                          , 0                        AS TOT_SALE_AMT_CMPR2_ON                             
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.SALE_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                        AND B.STR_CD    = ?
                        AND B.DEPT_CD   = ?
                        AND B.TEAM_CD   = ?
                        AND B.PC_CD     = ?
                        AND B.CORNER_CD LIKE ? || '%'
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT
                          , 0                   AS TOT_SALE_AMT_OFF
                          , 0                   AS TOT_SALE_AMT_ON, 0                   AS TOT_SALE_AMT_NAVER         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT             
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.NORM_SALE_AMT ) AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT ,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경   
                          , 0                   AS TOT_SALE_AMT_CMPR2
                          , 0                   AS TOT_SALE_AMT_CMPR2_OFF
                          , 0                   AS TOT_SALE_AMT_CMPR2_ON   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.SALE_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                        AND D.STR_CD    = ?
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 1
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 1
                        AND G.STR_CD     = ?
                        AND G.DEPT_CD    = ?
                        AND G.TEAM_CD    = ?
                        AND G.PC_CD      = ?
                        AND G.CORNER_CD LIKE ? || '%'
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT
                          , 0                   AS TOT_SALE_AMT_OFF
                          , 0                   AS TOT_SALE_AMT_ON, 0                   AS TOT_SALE_AMT_NAVER         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT             
                          , 0                   AS SAL_COST_PRC         
                          , 0                   AS TOT_SALE_AMT_CMPR1
                          , 0                   AS TOT_SALE_AMT_CMPR1_OFF
                          , 0                   AS TOT_SALE_AMT_CMPR1_ON           
                          , SUM(F.NORM_SALE_AMT ) AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT ,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.SALE_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)  = F.PUMBUN_CD 
                        AND D.STR_CD    = ?
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 2
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 2
                        AND G.STR_CD     = ?
                        AND G.DEPT_CD    = ?
                        AND G.TEAM_CD    = ?
                        AND G.PC_CD      = ?
                        AND G.CORNER_CD LIKE ? || '%'
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD         
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
              		F.PUMBUN_CD,
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
                    --------------------------------------------6
     ]]>

	</query>
	<query name="SEL_SALE_SKU2">        
        <![CDATA[
        	 SELECT 
        	 		F.PUMBUN_CD,
                    DPS.FN_GET_PUMBUN_SNAME(F.PUMBUN_CD) STR_NAME,
        	 		A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , 0                                                                 AS ORIGIN_SALE_TAMT_OFF
                  , 0                                                                 AS ORIGIN_SALE_TAMT_ON
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                        AS TOT_SALE_AMT_CMPR1_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                        AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                        AS TOT_SALE_AMT_CMPR1_NAVER
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2_ON, 0                                                                 AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                                                                 AS TOT_COMP_RATE_CMPR2
                  , 0                                                                 AS SALEIRATE2
                  , 'E' AS SKU_FLAG
                  , ? AS UNIT
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.NORM_SALE_AMT     ) AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER      -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1
                          , 0                        AS TOT_SALE_AMT_CMPR1_OFF
                          , 0                        AS TOT_SALE_AMT_CMPR1_ON, 0                        AS TOT_SALE_AMT_CMPR1_NAVER   
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.BUY_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                        AND B.STR_CD    = ?
                        AND B.DEPT_CD   = ?
                        AND B.TEAM_CD   = ?
                        AND B.PC_CD     = ?
                        AND B.CORNER_CD LIKE ? || '%'
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT
                          , 0                   AS TOT_SALE_AMT_OFF
                          , 0                   AS TOT_SALE_AMT_ON, 0                   AS TOT_SALE_AMT_NAVER        
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT             
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.NORM_SALE_AMT) AS TOT_SALE_AMT_CMPR1	 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER    -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.BUY_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                        AND D.STR_CD    = ?
                        AND D.SALE_DT     >= ?
                        AND D.SALE_DT     <= ?
                        AND G.STR_CD     = ?
                        AND G.DEPT_CD    = ?
                        AND G.TEAM_CD    = ?
                        AND G.PC_CD      = ?
                        AND G.CORNER_CD LIKE ? || '%'
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
              		F.PUMBUN_CD,
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
                    --------------------------------------------7
    	 ]]>
	</query>

	<query name="SEL_SALE_SKU">        
        <![CDATA[
    		 SELECT 
    		 		F.PUMBUN_CD STR_CD
                  , DPS.FN_GET_PUMBUN_SNAME(F.PUMBUN_CD) STR_NAME
    		 	  , A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , 0                                                                 AS ORIGIN_SALE_TAMT_OFF
                  , 0                                                                 AS ORIGIN_SALE_TAMT_ON
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                        AS TOT_SALE_AMT_CMPR1_OFF
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                        AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                        AS TOT_SALE_AMT_CMPR1_NAVER 
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2_ON, 0                                                                 AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                                                                 AS TOT_COMP_RATE_CMPR2
                  , 0                                                                 AS SALEIRATE2
                  , 'E' AS SKU_FLAG
                  , ? AS UNIT
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.NORM_SALE_AMT     ) AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER      -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1
                          , 0                        AS TOT_SALE_AMT_CMPR1_OFF
                          , 0                        AS TOT_SALE_AMT_CMPR1_ON, 0                        AS TOT_SALE_AMT_CMPR1_NAVER
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.SALE_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                        AND B.STR_CD    = ?
                        AND B.DEPT_CD   = ?
                        AND B.TEAM_CD   = ?
                        AND B.PC_CD     = ?
                        AND B.CORNER_CD LIKE ? || '%'
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT
                          , 0                   AS TOT_SALE_AMT_OFF
                          , 0                   AS TOT_SALE_AMT_ON, 0                   AS TOT_SALE_AMT_NAVER          
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT             
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.NORM_SALE_AMT) AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                          , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
						  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER    -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                          , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
							   FROM COM.TC_COMMCODE Y
							  WHERE Y.SYS_PART = 'D'
							    AND Y.COMM_PART = 'P614'
							) Y
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.SALE_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                        AND D.STR_CD    = ?
                        AND D.SALE_DT     >= ?
                        AND D.SALE_DT     <= ?
                        AND G.STR_CD     = ?
                        AND G.DEPT_CD    = ?
                        AND G.TEAM_CD    = ?
                        AND G.PC_CD      = ?
                        AND G.CORNER_CD LIKE ? || '%'
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
              		F.PUMBUN_CD
                  , A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
                    --------------------------------------------8
     ]]>
	</query>



	<query name="SEL_SALE_BRAND8">  
    	 <![CDATA[
    		 SELECT 
    		 		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , X.ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON, SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                         AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                         AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                         AS TOT_SALE_AMT_CMPR1_ON, SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON, SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , C.REP_PUMBUN_CD                     AS PUMBUN_CD
                                , H.BUY_ORG_CD                       AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD) AS PUMBUN_NAME
                                , MAX(B.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                   AS TOT_SALE_AMT_CMPR2
                                , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR2_ON, 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , DPS.PC_PBNMST    C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND A.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'                                                                     
                              AND B.CORNER_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , C.REP_PUMBUN_CD
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    	 AS PUMBUN_CD
                                , I.BUY_ORG_CD                       AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , DPS.PC_PBNMST C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                             
                              AND F.SALE_DT     >= ?  -- 대비기간1(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 매출기간1(종료)                                                   
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%'                                                                      
                              AND G.CORNER_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD = C.PUMBUN_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR2  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , DPS.PC_PBNMST C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                 
                              AND F.SALE_DT     >= ?  -- 대비기간2(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 대비기간2(종료)                                                   
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%'                                                                      
                              AND G.CORNER_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.BUY_ORG_CD
                                   
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER 
                                , SUM(F.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF 
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER                       
                             FROM DPS.PS_ACTPUMBUN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , DPS.PC_PBNMST C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                    
                              AND F.EXE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND F.EXE_DT     <= ?  -- 매출기간(종료) 
                               AND G.STR_CD    = ?                                 
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%' 
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND I.PUMBUN_CD = C.PUMBUN_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.BUY_ORG_CD
                          )                    A
                      GROUP BY A.STR_CD,A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------9
     	]]>
	</query>

	<query name="SEL_SALE_BRAND7-01">        
        <![CDATA[
    		 SELECT 
    		 		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , X.ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON, SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                         AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                         AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                         AS TOT_SALE_AMT_CMPR1_ON, SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON, SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , C.REP_PUMBUN_CD                     AS PUMBUN_CD
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                  AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                   AS TOT_SALE_AMT_CMPR2
                                , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR2_ON, 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , DPS.PC_PBNMST    C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND A.PUMBUN_CD = C.PUMBUN_CD
                              AND G.STR_CD    = ?
                              
                              
        ]]>
	</query>   
                              
	<query name="SEL_SALE_BRAND7-02">        
        <![CDATA[                                        
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , C.REP_PUMBUN_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    	 AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER 
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , DPS.PC_PBNMST C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE F.STR_CD    = ?                                               
                              AND F.SALE_DT     >= ?  -- 대비기간1(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 매출기간1(종료)    
                              
                                                                             
        ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND7-03">        
        <![CDATA[                                                            
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    	 AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , DPS.PC_PBNMST C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                              
                              AND F.SALE_DT     >= ?  -- 대비기간2(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 대비기간2(종료)    
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND7-04">        
        <![CDATA[                                                                      
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , D.REP_PUMBUN_CD                    AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = D.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER 
                                , SUM(F.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER                             
                             FROM DPS.PS_ACTPUMBUN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , DPS.PC_PBNMST D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE F.STR_CD    = ?                                                 
                              AND F.EXE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND F.EXE_DT     <= ?  -- 매출기간(종료)                                                  
                               AND G.STR_CD    = ?    
        ]]>
	</query>
                                     

	<query name="SEL_SALE_BRAND7-05">        
        <![CDATA[    
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND I.PUMBUN_CD = D.PUMBUN_CD
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , D.REP_PUMBUN_CD
                                   , I.SALE_ORG_CD
                          )                    A
                      GROUP BY A.STR_CD,A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------10
        ]]>
	</query>

	<query name="SEL_SALE_BRAND6-01">        
        <![CDATA[
    		SELECT  
    				X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , X.ORG_NAME   AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분
                  , ? AS UNIT                
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , C.REP_PUMBUN_CD                     AS PUMBUN_CD
                                , H.BUY_ORG_CD                       AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                  AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER  
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , DPS.PC_PBNMST    C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.BUY_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND A.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
    ]]>
	</query>  
                              
	<query name="SEL_SALE_BRAND6-02">        
        <![CDATA[                                                                                               
                              --AND B.CORNER_CD    LIKE  || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , C.REP_PUMBUN_CD
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    	 AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER 
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D 
                                , DPS.PC_PBNMST C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y                                                                            
                            WHERE D.STR_CD    = ?                                         
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점       
                              
    ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND6-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.PUMBUN_CD = C.PUMBUN_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.BUY_ORG_CD
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , D.REP_PUMBUN_CD                    AS PUMBUN_CD
                                , I.BUY_ORG_CD                       AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = D.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER     
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER  
                                , ''                                  AS SKU_FLAG         
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , DPS.PC_PBNMST D
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?          
                               
    ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND6-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                               AND I.PUMBUN_CD = D.PUMBUN_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.BUY_ORG_CD
                                    , D.REP_PUMBUN_CD
                          )  A
                      GROUP BY A.STR_CD, A.ORG_CD
                             , A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------11
    ]]>
	</query>
	
	<query name="SEL_SALE_BRAND5-01">        
        <![CDATA[
        	SELECT 
        			 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , X.ORG_NAME   AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분           
                  , ? AS UNIT     
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , C.REP_PUMBUN_CD                     AS PUMBUN_CD
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                  AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER 
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , DPS.PC_PBNMST    C
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND A.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
         ]]>
	</query>
                              
                              
	<query name="SEL_SALE_BRAND5-02">        
        <![CDATA[                                                                
                              AND G.CORNER_CD    = ? 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , C.REP_PUMBUN_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , C.REP_PUMBUN_CD                    	 AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = C.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF   -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END)      AS ORIGIN_SALE_TAMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER   -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT 
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D
                                , DPS.PC_PBNMST C   
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y                                                                          
                            WHERE D.STR_CD    = ?                                                    
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점   
         ]]>
	</query>
                                                                         
                              
	<query name="SEL_SALE_BRAND5-03">        
        <![CDATA[                                                        
                              AND G.CORNER_CD   = ?
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.PUMBUN_CD = C.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , C.REP_PUMBUN_CD
                                   , I.SALE_ORG_CD
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , D.REP_PUMBUN_CD                    AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , (SELECT PUMBUN_NAME FROM DPS.PC_PBNMST WHERE PUMBUN_CD = D.REP_PUMBUN_CD)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT 
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                                , ''                                 AS SKU_FLAG         
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , DPS.PC_PBNMST D
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?    
            ]]>
	</query>
                                                            
                              
	<query name="SEL_SALE_BRAND5-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND I.PUMBUN_CD = D.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.SALE_ORG_CD  
                                    , D.REP_PUMBUN_CD       
                          )  A
                      GROUP BY A.STR_CD,A.ORG_CD
                             , A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
        	--------------------------------------------12
         ]]>
	</query>

	<query name="SEL_SALE_BRAND4">  
    	 <![CDATA[
    		 SELECT 
    		 		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , X.ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON, SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                         AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                         AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                         AS TOT_SALE_AMT_CMPR1_ON, SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON, SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.PUMBUN_CD                         AS PUMBUN_CD
                                , H.BUY_ORG_CD                       AS ORG_CD
                                , MAX(H.PUMBUN_NAME)                  AS PUMBUN_NAME
                                , MAX(B.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                   AS TOT_SALE_AMT_CMPR2
                                , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR2_ON, 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'                                                                     
                              AND B.CORNER_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , H.PUMBUN_CD
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.BUY_ORG_CD                       AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                             
                              AND F.SALE_DT     >= ?  -- 대비기간1(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 매출기간1(종료)                                                   
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%'                                                                      
                              AND G.CORNER_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR2  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                 
                              AND F.SALE_DT     >= ?  -- 대비기간2(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 대비기간2(종료)                                                   
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%'                                                                      
                              AND G.CORNER_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER 
                                , SUM(F.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER                             
                             FROM DPS.PS_ACTPUMBUN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                    
                              AND F.EXE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND F.EXE_DT     <= ?  -- 매출기간(종료) 
                              AND G.STR_CD    = ?                                 
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%' 
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.BUY_ORG_CD
                          )                    A
                      GROUP BY A.STR_CD,A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------13
     	]]>
	</query>

	<query name="SEL_SALE_BRAND3-01">        
        <![CDATA[
    		 SELECT 
    		 		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , X.ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON, SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                         AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                         AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                         AS TOT_SALE_AMT_CMPR1_ON, SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON, SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.PUMBUN_CD                         AS PUMBUN_CD
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , MAX(H.PUMBUN_NAME)                  AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                   AS TOT_SALE_AMT_CMPR2
                                , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR2_ON, 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND3-02">        
        <![CDATA[                                                               
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , H.PUMBUN_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER 
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE F.STR_CD    = ?                                               
                              AND F.SALE_DT     >= ?  -- 대비기간1(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 매출기간1(종료)    
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND3-03">        
        <![CDATA[                                                                 
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                            
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE F.STR_CD    = ?                                              
                              AND F.SALE_DT     >= ?  -- 대비기간2(시작)                                                   
                              AND F.SALE_DT     <= ?  -- 대비기간2(종료)   
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND3-04">        
        <![CDATA[                                                                
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG           
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER 
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER 
                                , SUM(F.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER                             
                             FROM DPS.PS_ACTPUMBUN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE F.STR_CD    = ?                                                 
                              AND F.EXE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND F.EXE_DT     <= ?  -- 매출기간(종료)                                                  
                              AND G.STR_CD    = ? 
                              
        ]]>
	</query>
                              
 	<query name="SEL_SALE_BRAND3-05">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.SALE_ORG_CD
                          )                    A
                      GROUP BY A.STR_CD,A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
                    -------------------------------------------14
        ]]>
	</query>

	<query name="SEL_SALE_BRAND2-01">        
        <![CDATA[
    		SELECT  
    				X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , X.ORG_NAME   AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분    
                  , ? AS UNIT            
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.PUMBUN_CD                         AS PUMBUN_CD
                                , H.BUY_ORG_CD                       AS ORG_CD
                                , MAX(H.PUMBUN_NAME)                  AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER  
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.BUY_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
    ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND2-02">        
        <![CDATA[                   
                              --AND B.CORNER_CD    LIKE  || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , H.PUMBUN_CD
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER 
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D 
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y                                                                            
                            WHERE D.STR_CD    = ?                                         
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점     
                              
    ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND2-03">        
        <![CDATA[                                                               
                              --AND G.CORNER_CD    LIKE  || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.BUY_ORG_CD
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.BUY_ORG_CD                       AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER     
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER  
                                , ''                                  AS SKU_FLAG         
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?   
    ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND2-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.BUY_ORG_CD
                                    , I.PUMBUN_CD     
                          )  A
                      GROUP BY A.STR_CD, A.ORG_CD
                             , A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------15
    ]]>
	</query>
	
	<query name="SEL_SALE_BRAND-01">        
        <![CDATA[
        	SELECT 
        			X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , X.ORG_NAME   AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분             
                  , ? AS UNIT   
              FROM ( SELECT A.STR_CD
                          , A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.PUMBUN_CD                         AS PUMBUN_CD
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , MAX(H.PUMBUN_NAME)                  AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER 
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
             ]]>
	</query>
                              
	<query name="SEL_SALE_BRAND-02">        
        <![CDATA[                                                           
                              --AND G.CORNER_CD    = 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , H.PUMBUN_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT )                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF   -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT ,0) END)      AS ORIGIN_SALE_TAMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT 
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D   
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y                                                                          
                            WHERE D.STR_CD    = ?                                                    
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?  
         ]]>
	</query>

                              
	<query name="SEL_SALE_BRAND-03">        
        <![CDATA[                                                            
                              --AND G.CORNER_CD    = 
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.SALE_ORG_CD
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT 
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                                , ''                                 AS SKU_FLAG         
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?
         ]]>
	</query>
                                 
                              
	<query name="SEL_SALE_BRAND-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.SALE_ORG_CD  
                                    , I.PUMBUN_CD          
                          )  A
                      GROUP BY A.STR_CD,A.ORG_CD
                             , A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
        	--------------------------------------------16
         ]]>
	</query>


	<query name="SEL_SALE_CORNER4">        
        <![CDATA[
    		SELECT 
    				X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(MAX(C.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(MAX(C.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(MAX(C.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(MAX(C.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(C.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(C.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                             AS STR_CD
                                , H.BUY_ORG_CD                        AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                    AS ORIGIN_SALE_TAMT
                                , 0                                    AS ORIGIN_SALE_TAMT_OFF
                                , 0                                    AS ORIGIN_SALE_TAMT_ON, 0                                    AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND B.STR_CD      = '01'
                              AND B.DEPT_CD  LIKE '%' || '%'
                              AND B.TEAM_CD  LIKE '%' || '%'
                              AND B.PC_CD    LIKE '%' || '%'
                              AND A.SALE_DT     >= '20120719'      -- 매출기간시작
                              AND A.SALE_DT     <= '20120719'      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.BUY_ORG_CD
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , I.BUY_ORG_CD                       AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.BUY_ORG_CD
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , I.BUY_ORG_CD                       AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?                                 
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%' 
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.BUY_ORG_CD
                          )  A
                      GROUP BY A.STR_CD,A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
            --------------------------------------------17
        ]]>
	</query>





	<query name="SEL_SALE_CORNER3-01">        
        <![CDATA[
    		 SELECT 
    		 		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                             AS STR_CD
                                , H.SALE_ORG_CD                        AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER3-02">        
        <![CDATA[
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT ,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT ,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                            
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER3-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.SALE_ORG_CD
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                            
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER3-04">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.SALE_ORG_CD
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?         
                               
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER3-05">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.SALE_ORG_CD
                          )  A
                      GROUP BY A.STR_CD,A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
            --------------------------------------------18
        ]]>
	</query>


	<query name="SEL_SALE_CORNER2">        
        <![CDATA[
    		SELECT 
    				X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분   
                  , ? AS UNIT             
              FROM ( SELECT A.STR_CD
                          , A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.BUY_ORG_CD                       AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT )                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT  ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT  END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT  ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER  
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER   
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.BUY_ORG_CD                      AS ORG_CD                                                                                   
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER    -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                                      
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D    
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y                                                                      
                            WHERE D.STR_CD    = ?                                     
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점                                                               
                              AND G.DEPT_CD  LIKE ? || '%'                                                                       
                              AND G.TEAM_CD  LIKE ? || '%'                                                                       
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.BUY_ORG_CD
                            
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , I.BUY_ORG_CD,1,8                   AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_FF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?                                 
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%' 
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.BUY_ORG_CD
                          )  A
                      GROUP BY A.STR_CD,A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
            --------------------------------------------19
        ]]>
	</query>




	<query name="SEL_SALE_CORNER-01">        
        <![CDATA[
        
            SELECT  
            		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분  
                  , ? AS UNIT              
              FROM ( SELECT A.STR_CD
                          , A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER  
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER   
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER-02">        
        <![CDATA[
        
                              
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.SALE_ORG_CD                      AS ORG_CD                                                                                   
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER    -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT, 0                                  AS ORIGIN_SALE_TAMT_NAVER                                      
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D    
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y                                                                         
                            WHERE D.STR_CD    = ?                                                        
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점      
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER-03">        
        <![CDATA[
        
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , I.SALE_ORG_CD
                            
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?    
                                
        ]]>
	</query>
                              
	<query name="SEL_SALE_CORNER-04">        
        <![CDATA[
        
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , I.SALE_ORG_CD
                          )  A
                      GROUP BY A.STR_CD,A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
            --------------------------------------------20
        ]]>
	</query>

	<query name="SEL_SALE_PC4">        
        <![CDATA[
             SELECT 
             		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 8) || '00'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                             AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,8) || '00'    AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , SUBSTR(H.BUY_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?                                 
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%' 
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.BUY_ORG_CD,1,8)
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 8)
                   ) X
              ORDER BY
                    X.ORG_CD
                    -------------------------------------------21
        ]]>
	</query>


	<query name="SEL_SALE_PC3-01">        
        <![CDATA[
		     SELECT 
		     		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 8) || '00'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (                           SELECT 
                                  A.STR_CD                             AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,8) || '00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_PC3-02">        
        <![CDATA[
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , SUBSTR(H.SALE_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT ,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT ,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT ,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                            
        ]]>
	</query>
                              
	<query name="SEL_SALE_PC3-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                            
        ]]>
	</query>
                              
	<query name="SEL_SALE_PC3-04">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
										   FROM COM.TC_COMMCODE Y
										  WHERE Y.SYS_PART = 'D'
										    AND Y.COMM_PART = 'P614'
										) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?    
                               
        ]]>
	</query>
                              
	<query name="SEL_SALE_PC3-05">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.SALE_ORG_CD,1,8)       
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 8)
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------22
        ]]>
	</query>

	<query name="SEL_SALE_PC2-01">        
        <![CDATA[
            SELECT 
            		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분   
                  , ? AS UNIT             
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 8) || '00'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
				             FROM (SELECT A.STR_CD                            AS STR_CD                                             
				                        , SUBSTR(H.BUY_ORG_CD,1,8) || '00'   AS ORG_CD
				                        , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
				                        , SUM(A.SALE_QTY)                     AS SALE_QTY
				                        , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
				                        , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
				                        , SUM(A.VAT_AMT)                      AS VAT_AMT
				                        , SUM(A.REDU_AMT)                     AS REDU_AMT
				                        , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
				                        , SUM(A.DC_AMT)                       AS DC_AMT
				                        , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
				                        , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
				                        , SUM(A.CUST_CNT)                     AS CUST_CNT
				                        , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
				                        , 0                                   AS TOT_SALE_AMT_CMPR1
				                        , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
				                        , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                        , 0                                  AS ORIGIN_SALE_TAMT
                                        , 0                                  AS ORIGIN_SALE_TAMT_OFF    
                                        , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER        
				                     FROM DPS.PS_DAYPBN    A
				                        , DPS.PC_STRPBN    H
				                        , DPS.PC_ORGMST    G
				                        , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
										   FROM COM.TC_COMMCODE Y
										  WHERE Y.SYS_PART = 'D'
										    AND Y.COMM_PART = 'P614'
										) Y
				                    WHERE H.STR_CD      = G.STR_CD
				                      AND H.BUY_ORG_CD = G.ORG_CD
				                      AND A.STR_CD      = H.STR_CD
				                      AND A.PUMBUN_CD   = H.PUMBUN_CD
				                      AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
				                      AND G.STR_CD    = ?    -- 점 
				                      
        ]]>
	</query>
				                      
	<query name="SEL_SALE_PC2-02">        
        <![CDATA[
				                      AND A.SALE_DT     >= ?  -- 매출기간(시작)
				                      AND A.SALE_DT     <= ?  -- 매출기간(종료)
				                      AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
				                        GROUP BY A.STR_CD
				                               , SUBSTR(H.BUY_ORG_CD,1,8) || '00'
		                   UNION ALL
		                   SELECT F.STR_CD                           AS STR_CD                                              
		                        , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD                                                                                   
		                        , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
		                        , 0                                  AS SALE_QTY               
		                        , 0                                  AS TOT_SALE_AMT
		                        , 0                                  AS TOT_SALE_AMT_OFF
		                        , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
		                        , 0                                  AS VAT_AMT                 
		                        , 0                                  AS REDU_AMT               
		                        , 0                                  AS NORM_SALE_AMT     
		                        , 0                                  AS DC_AMT                   
		                        , 0                                  AS NET_SALE_AMT       
		                        , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D  
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y                                                                           
                            WHERE D.STR_CD    = ?   -- 점                                                                     
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점     
                              
        ]]>
	</query>
                              
	<query name="SEL_SALE_PC2-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?    
                               
        ]]>
	</query>
                              
	<query name="SEL_SALE_PC2-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.BUY_ORG_CD,1,8)       
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 8)
                   ) X
              ORDER BY
                    X.ORG_CD       
                    --------------------------------------------23
        ]]>
	</query>

	<query name="SEL_SALE_PC-01">        
        <![CDATA[
        
            SELECT 
            		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분  
                  , ? AS UNIT              
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 8) || '00'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                       AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                       AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                       AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                       AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
				             FROM (SELECT A.STR_CD                            AS STR_CD                                             
				                        , SUBSTR(H.SALE_ORG_CD,1,8) || '00'   AS ORG_CD
				                        , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
				                        , SUM(A.SALE_QTY)                     AS SALE_QTY
				                        , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
				                        , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
				                        , SUM(A.VAT_AMT)                      AS VAT_AMT
				                        , SUM(A.REDU_AMT)                     AS REDU_AMT
				                        , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
				                        , SUM(A.DC_AMT)                       AS DC_AMT
				                        , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
				                        , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
				                        , SUM(A.CUST_CNT)                     AS CUST_CNT
				                        , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
				                        , 0                                   AS TOT_SALE_AMT_CMPR1
				                        , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
				                        , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                        , 0                                  AS ORIGIN_SALE_TAMT
                                        , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                        , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER   
				                     FROM DPS.PS_DAYPBN    A
				                        , DPS.PC_STRPBN    H
				                        , DPS.PC_ORGMST    G
				                        , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
											   FROM COM.TC_COMMCODE Y
											  WHERE Y.SYS_PART = 'D'
											    AND Y.COMM_PART = 'P614'
											) Y
				                    WHERE H.STR_CD      = G.STR_CD
				                      AND H.SALE_ORG_CD = G.ORG_CD
				                      AND A.STR_CD      = H.STR_CD
				                      AND A.PUMBUN_CD   = H.PUMBUN_CD
				                      AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
				                      AND G.STR_CD    = ?
				                      
        ]]>
	</query>
				                      
	<query name="SEL_SALE_PC-02">        
        <![CDATA[
        
				                      
				                      AND A.SALE_DT     >= ?  -- 매출기간(시작)
				                      AND A.SALE_DT     <= ?  -- 매출기간(종료)
				                      AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
				                        GROUP BY A.STR_CD
				                               , SUBSTR(H.SALE_ORG_CD,1,8) || '00'
		                   UNION ALL
		                   SELECT F.STR_CD                           AS STR_CD                                              
		                        , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD                                                                                   
		                        , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
		                        , 0                                  AS SALE_QTY               
		                        , 0                                  AS TOT_SALE_AMT
		                        , 0                                  AS TOT_SALE_AMT_OFF
		                        , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
		                        , 0                                  AS VAT_AMT                 
		                        , 0                                  AS REDU_AMT               
		                        , 0                                  AS NORM_SALE_AMT     
		                        , 0                                  AS DC_AMT                   
		                        , 0                                  AS NET_SALE_AMT       
		                        , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D   
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y                                                                          
                            WHERE D.STR_CD    = ?                                       
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점    
                              
        ]]>
	</query>                          
                              
                              
	<query name="SEL_SALE_PC-03">        
        <![CDATA[
        
                              
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF   -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?    
                               
        ]]>
	</query>
                                              
                              
                              
	<query name="SEL_SALE_PC-04">        
        <![CDATA[
        
                              
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                               --AND SUBSTR(C.ORG_CD,1,8) = SUBSTR(I.SALE_ORG_CD,1,8)		-- 2013.07.22
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.SALE_ORG_CD,1,8)         
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 8)
                   ) X
              ORDER BY
                    X.ORG_CD
            --------------------------------------------24
        ]]>
	</query>

	<query name="SEL_SALE_TEAM4">        
        <![CDATA[
        	 SELECT 
        	 		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 6) || '0000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (                           SELECT 
                                  A.STR_CD                             AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,8) || '00'    AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , SUBSTR(H.BUY_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?                                 
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%' 
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.BUY_ORG_CD,1,8)        
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------25
         ]]>
	</query>

	<query name="SEL_SALE_TEAM3-01">        
        <![CDATA[
        	 SELECT 
        	 		X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON, X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , X.SKU_FLAG
                  , ? AS UNIT
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 6) || '0000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_OFF,0))                                  AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2_ON,0))                                  AS TOT_SALE_AMT_CMPR2_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR2_NAVER,0))                                  AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (                           SELECT 
                                  A.STR_CD                             AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,8) || '00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.NORM_SALE_AMT)                  AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR1_ON, 0                                    AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                                , 0                                    AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                    AS TOT_SALE_AMT_CMPR2_ON, 0                                    AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE H.STR_CD      = G.STR_CD
                              AND H.SALE_ORG_CD = G.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
                              AND G.STR_CD    = ?
                              
         ]]>
	</query>
                              
	<query name="SEL_SALE_TEAM3-02">        
        <![CDATA[
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , SUBSTR(H.SALE_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                            
         ]]>
	</query>
                              
	<query name="SEL_SALE_TEAM3-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(NVL(F.NORM_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                            WHERE G.STR_CD    = ?
                            
         ]]>
	</query>
                              
	<query name="SEL_SALE_TEAM3-04">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                                , 0                                  AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR2_ON, 0                                  AS TOT_SALE_AMT_CMPR2_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?    
         ]]>
	</query>   
                                      
                              
	<query name="SEL_SALE_TEAM3-05">        
        <![CDATA[ 
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.SALE_ORG_CD,1,8)         
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------26
         ]]>
	</query>

	<query name="SEL_SALE_TEAM2-01">        
        <![CDATA[
        	SELECT  
        			X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분 
                  , ? AS UNIT               
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 6) || '0000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
				             FROM (SELECT A.STR_CD                            AS STR_CD                                             
				                        , SUBSTR(H.BUY_ORG_CD,1,8) || '00'   AS ORG_CD
				                        , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
				                        , SUM(A.SALE_QTY)                     AS SALE_QTY
				                        , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
				                        , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
				                        , SUM(A.VAT_AMT)                      AS VAT_AMT
				                        , SUM(A.REDU_AMT)                     AS REDU_AMT
				                        , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
				                        , SUM(A.DC_AMT)                       AS DC_AMT
				                        , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
				                        , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
				                        , SUM(A.CUST_CNT)                     AS CUST_CNT
				                        , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
				                        , 0                                   AS TOT_SALE_AMT_CMPR1
				                        , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
				                        , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                        , 0                                  AS ORIGIN_SALE_TAMT
                                        , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                        , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER   
				                     FROM DPS.PS_DAYPBN    A
				                        , DPS.PC_STRPBN    H
				                        , DPS.PC_ORGMST    G
				                        , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
										   FROM COM.TC_COMMCODE Y
										  WHERE Y.SYS_PART = 'D'
										    AND Y.COMM_PART = 'P614'
										) Y
				                    WHERE H.STR_CD      = G.STR_CD
				                      AND H.BUY_ORG_CD = G.ORG_CD
				                      AND A.STR_CD      = H.STR_CD
				                      AND A.PUMBUN_CD   = H.PUMBUN_CD
				                      AND Y.PUMBUN_CD(+)	= H.PUMBUN_CD 
				                      AND G.STR_CD    = ?
         ]]>
	</query>
				                      
				                      

	<query name="SEL_SALE_TEAM2-02">        
        <![CDATA[
				                      AND A.SALE_DT     >= ?  -- 매출기간(시작)
				                      AND A.SALE_DT     <= ?  -- 매출기간(종료)
				                      AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
				                        GROUP BY A.STR_CD
				                               , SUBSTR(H.BUY_ORG_CD,1,8) || '00'
		                   UNION ALL
		                   SELECT F.STR_CD                           AS STR_CD                                              
		                        , SUBSTR(I.BUY_ORG_CD,1,8)||'00'    AS ORG_CD                                                                                   
		                        , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
		                        , 0                                  AS SALE_QTY               
		                        , 0                                  AS TOT_SALE_AMT
		                        , 0                                  AS TOT_SALE_AMT_OFF
		                        , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
		                        , 0                                  AS VAT_AMT                 
		                        , 0                                  AS REDU_AMT               
		                        , 0                                  AS NORM_SALE_AMT     
		                        , 0                                  AS DC_AMT                   
		                        , 0                                  AS NET_SALE_AMT       
		                        , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                  AS ORIGIN_SALE_TAMT                                         
                                , 0                                  AS ORIGIN_SALE_TAMT_OFF
                                , 0                                  AS ORIGIN_SALE_TAMT_ON, 0                                  AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D 
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y                                                                            
                            WHERE D.STR_CD    = ?                                              
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점
         ]]>
	</query>
                              
                              
	<query name="SEL_SALE_TEAM2-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)	= F.PUMBUN_CD 
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.BUY_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.BUY_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?                                                 
                               AND G.STR_CD    = ?      
         ]]>
	</query>                        
                              
                              
                              
	<query name="SEL_SALE_TEAM2-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)	= C.PUMBUN_CD 
                               AND G.ORG_CD    = I.BUY_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.BUY_ORG_CD,1,8)           
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY
                    X.ORG_CD
                    --------------------------------------------27
         ]]>
	</query>
	
	
	<query name="SEL_SALE_TEAM-01">        
        <![CDATA[
             SELECT 
             		 X.STR_CD, DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NAME, ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF            -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON, X.ORIGIN_SALE_TAMT_NAVER            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.TOT_SALE_AMT_OFF                -- 총매출
                  , X.TOT_SALE_AMT_ON, X.TOT_SALE_AMT_NAVER                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF          -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON, X.TOT_SALE_AMT_CMPR1_NAVER          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0  AS TOT_SALE_AMT_CMPR2_ON , 0  AS TOT_SALE_AMT_CMPR2_NAVER     -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
                  , X.SKU_FLAG                    -- 단품구분
                  , ? AS UNIT                
              FROM ( SELECT A.STR_CD
                          , SUBSTR(A.ORG_CD, 1, 6) || '0000'                                AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(SUM(A.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_OFF),0)                                    AS ORIGIN_SALE_TAMT_OFF
                          , NVL(SUM(A.ORIGIN_SALE_TAMT_ON),0)                                    AS ORIGIN_SALE_TAMT_ON, NVL(SUM(A.ORIGIN_SALE_TAMT_NAVER),0)                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON, SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_OFF,0))                                  AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1_ON,0))                                  AS TOT_SALE_AMT_CMPR1_ON, SUM(NVL(A.TOT_SALE_AMT_CMPR1_NAVER,0))                                  AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(SUM(A.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(SUM(A.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                             FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                        , SUBSTR(H.SALE_ORG_CD,1,8) || '00'   AS ORG_CD
                                        , MAX(G.ORG_SHORT_NAME)               AS ORG_NAME
                                        , SUM(A.SALE_QTY)                     AS SALE_QTY
                                        , SUM(A.NORM_SALE_AMT)                 AS TOT_SALE_AMT -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                        , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.NORM_SALE_AMT END) AS TOT_SALE_AMT_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
										, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.NORM_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                        , SUM(A.VAT_AMT)                      AS VAT_AMT
                                        , SUM(A.REDU_AMT)                     AS REDU_AMT
                                        , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                        , SUM(A.DC_AMT)                       AS DC_AMT
                                        , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                        , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                        , SUM(A.CUST_CNT)                     AS CUST_CNT
                                        , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                        , 0                                   AS TOT_SALE_AMT_CMPR1
                                        , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                        , 0                                   AS TOT_SALE_AMT_CMPR1_ON, 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                        , 0                                   AS ORIGIN_SALE_TAMT
                                        , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                        , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER
                                     FROM DPS.PS_DAYPBN    A
                                        , DPS.PC_STRPBN    H
                                        , DPS.PC_ORGMST    G
                                        , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
										   FROM COM.TC_COMMCODE Y
										  WHERE Y.SYS_PART = 'D'
										    AND Y.COMM_PART = 'P614'
										) Y
                                    WHERE H.STR_CD      = G.STR_CD
                                      AND H.SALE_ORG_CD = G.ORG_CD
                                      AND A.STR_CD      = H.STR_CD
                                      AND A.PUMBUN_CD   = H.PUMBUN_CD
                                      AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                                      AND G.STR_CD    = ?
                                      
        ]]>
	</query>
                                      
                                      
                                      
                                      
	<query name="SEL_SALE_TEAM-02">        
        <![CDATA[
                                      AND A.SALE_DT     >= ?  -- 매출기간(시작)
                                      AND A.SALE_DT     <= ?  -- 매출기간(종료)
                                      AND A.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                                        GROUP BY A.STR_CD
                                               , SUBSTR(H.SALE_ORG_CD,1,8) || '00'
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'    AS ORG_CD                                                                                   
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT               
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.NORM_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.NORM_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.NORM_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER  -- 20180314 TOT_SALE_AMT >> NORM_SALE_AMT 로 변경
                                , 0                                   AS ORIGIN_SALE_TAMT
                                , 0                                   AS ORIGIN_SALE_TAMT_OFF
                                , 0                                   AS ORIGIN_SALE_TAMT_ON, 0                                   AS ORIGIN_SALE_TAMT_NAVER                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D     
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
								   FROM COM.TC_COMMCODE Y
								  WHERE Y.SYS_PART = 'D'
								    AND Y.COMM_PART = 'P614'
								) Y                                                                        
                            WHERE D.STR_CD    = ?   -- 점                                                                     
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?  
                              
        ]]>
	</query>
                              
                                        
                              
	<query name="SEL_SALE_TEAM-03">        
        <![CDATA[
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND F.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                            GROUP BY F.STR_CD
                                   , SUBSTR(I.SALE_ORG_CD,1,8)||'00'
                            UNION ALL
                            SELECT 
                                  C.STR_CD                           AS STR_CD
                                , SUBSTR(I.SALE_ORG_CD,1,8)||'00'     AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT
                                , 0                                  AS TOT_SALE_AMT_OFF
                                , 0                                  AS TOT_SALE_AMT_ON, 0                                  AS TOT_SALE_AMT_NAVER      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT          
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                  AS TOT_SALE_AMT_CMPR1_ON, 0                                  AS TOT_SALE_AMT_CMPR1_NAVER
                                , SUM(C.ORIGIN_SALE_TAMT)            AS ORIGIN_SALE_TAMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
								, SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                              FROM DPS.PS_ACTPUMBUN C
                                 , DPS.PC_STRPBN I
                                 , DPS.PC_ORGMST G
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
									   FROM COM.TC_COMMCODE Y
									  WHERE Y.SYS_PART = 'D'
									    AND Y.COMM_PART = 'P614'
									) Y
                             WHERE C.STR_CD    = ?
                               AND C.EXE_DT >= ?
                               AND C.EXE_DT <= ?               
                               AND G.STR_CD    = ?    

        ]]>
	</query>
                               
                                        
                              
	<query name="SEL_SALE_TEAM-04">        
        <![CDATA[
                               AND I.STR_CD = C.STR_CD
                               AND I.PUMBUN_CD = C.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)= C.PUMBUN_CD
                               AND G.ORG_CD    = I.SALE_ORG_CD
                              AND C.PUMBUN_CD IN ( SELECT MYORG.PUMBUN_CD
                                                     FROM COM.V_MYORG MYORG
                                                    WHERE MYORG.USER_ID     = ?  -- USER_ID
                                                 )
                             GROUP BY C.STR_CD
                                    , SUBSTR(I.SALE_ORG_CD,1,8)          
                          )  A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY
                    DECODE(X.ORG_CD,'0107060000',NULL,X.ORG_CD) NULLS FIRST
                    --------------------------------------------28
        ]]>
	</query>
	
	
	<query name="WHERE_DEPT_CD">        
        <![CDATA[
        				AND G.DEPT_CD  = ?
        ]]>
	</query>
	
	<query name="WHERE_TEAM_CD">        
        <![CDATA[
        				AND G.TEAM_CD  = ?
        ]]>
	</query>
	
	<query name="WHERE_PC_CD">        
        <![CDATA[
        				AND G.PC_CD    = ?
        ]]>
	</query>
				    
	


	<query name="SEL_CMPRDT">       
        <![CDATA[
            SELECT CMPR_DT                
              FROM DPS.PS_SCHEDULE
             WHERE STR_CD  = ?
               AND SALE_DT = ?
        ]]>
	</query>

	<query name="SEARCH_CMPR_DATE">
        <![CDATA[
          SELECT NVL(MAX(CMPR_DT), TO_CHAR(ADD_MONTHS(TO_DATE(?, 'YYYYMMDD'),-12), 'YYYYMMDD'))
              FROM DPS.PS_SCHEDULE
             WHERE STR_CD  = ?
               AND SALE_DT = ?
        ]]>
	</query>

</service>