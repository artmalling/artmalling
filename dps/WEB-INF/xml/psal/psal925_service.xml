<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 조형욱
 * 회 사 명 : 한국후지쯔
 * 작 성 일 : 2010.05.25
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  POS 신용카드 매출건수와 청구대상 데이터 건수와 보류건수, 실청구 건수를 확인한다.
 -->
<service name="/psal925.ps">
    <!-- 청구데이터건수 목록 -->
    <gauce name="H_MASTER">
        <column colName="STR_CD"        colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="STR_NM"        colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="SALE_DT"       colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="BCOMP_CD"      colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="BCOMP_NM"      colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="POS_NO"        colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="REQ_DT"        colType="TB_STRING"  size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="POS_COUNT"     colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />		
		<column colName="POS_AMT"       colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="REQ_COUNT"     colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="REQ_AMT"       colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="PP_COUNT"      colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="PP_AMT"        colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="REAL_COUNT"    colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="REAL_AMT"      colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="BUY_COUNT"     colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="BUY_AMT"       colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="DIF_COUNT"     colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="DIF_AMT"       colType="TB_DECIMAL" size=""   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
    </gauce>
    
    <!-- 청구데이터건수 목록 조회 -->
    <query name="SEL_MASTER">        
        <![CDATA[
            SELECT X.STR_CD
			     , DPS.FN_GET_STORE_NAME(X.STR_CD) STR_NM
			     , X.SALE_DT
			     , X.BCOMP_CD
			     , DPS.FN_GET_CCOMP_NM(X.BCOMP_CD) BCOMP_NM
			     , POS_NO
			     , CHRG_DT AS REQ_DT
			     , SUM(POS_COUNT) POS_COUNT
			     , SUM(POS_AMT) POS_AMT
			     , SUM(REQ_COUNT) REQ_COUNT
			     , SUM(REQ_AMT) REQ_AMT
			     , SUM(PP_COUNT)  PP_COUNT
			     , SUM(PP_AMT)  PP_AMT
			     , SUM(REQ_COUNT) -  SUM(PP_COUNT) REAL_COUNT
			     , SUM(REQ_AMT) -  SUM(PP_AMT) REAL_AMT
			     , SUM(BUY_COUNT) BUY_COUNT
			     , SUM(BUY_AMT) BUY_AMT
			     , SUM(BUY_COUNT) - SUM(REQ_COUNT) - SUM(PP_COUNT) AS DIF_COUNT
			     , SUM(BUY_AMT) - SUM(REQ_AMT) - SUM(PP_AMT) AS DIF_AMT
			  FROM (     
			         SELECT A.STR_CD
			              , A.SALE_DT
			              , A.PAY_DATA_07 BCOMP_CD  -- 매입사코드
			              , A.POS_NO
			              , TO_CHAR(A.SEND_DATE, 'YYYYMMDD') AS CHRG_DT
			              , COUNT(*) POS_COUNT
			              , SUM(DECODE(B.TRAN_FLAG, '0', A.PAY_AMT, -1 * A.PAY_AMT)) AS POS_AMT
			              , 0 REQ_COUNT
			              , 0 REQ_AMT
			              , 0 PP_COUNT
			              , 0 PP_AMT
			              , 0 BUY_COUNT
			              , 0 BUY_AMT
			           FROM DPS.PS_TRPAID A
			              , DPS.PS_TRHEADER B
                      WHERE A.SALE_DT   =  B.SALE_DT
                        AND A.STR_CD    =  B.STR_CD
                        AND A.POS_NO    =  B.POS_NO
                        AND A.TRAN_NO   =  B.TRAN_NO
                        AND B.TRAN_MODE <> '92'
			            AND A.STR_CD LIKE ? || '%'
			            AND A.PAY_TYPE IN (SELECT COMM_CODE FROM COM.TC_COMMCODE
			                                WHERE COMM_PART = 'D065'
			                                  AND SYS_PART  = 'D'
			                               ) -- VAN 청구대상 결재코드
			            AND A.SALE_DT      BETWEEN ? AND ?
			            AND A.PAY_DATA_07  LIKE ? || '%' 	
			            AND TO_CHAR(A.SEND_DATE, 'YYYYMMDD')      BETWEEN ? AND ?	
			            AND A.POS_NO BETWEEN NVL(?, '0000') AND NVL(?, '9999')	            
			          GROUP BY A.STR_CD, A.SALE_DT, A.PAY_DATA_07, A.POS_NO , A.SEND_DATE                    
			         UNION ALL
			         SELECT A.STR_CD
			              , A.SALE_DT
			              , A.BCOMP_CD  -- 매입사코드
			              , A.POS_NO
			              , A.CHRG_DT AS CHRG_DT
			              , 0 POS_COUNT
			              , 0 POS_AMT
			              , COUNT(*) REQ_COUNT
			              , SUM(DECODE(A.WORK_FLAG, '11', A.APPR_AMT, -1 * A.APPR_AMT)) AS REQ_AMT
			              , 0 PP_COUNT
			              , 0 PP_AMT
			              , 0 BUY_COUNT
			              , 0 BUY_AMT
			           FROM DPS.PD_BUYREQPREP A
			          WHERE A.STR_CD       LIKE ? || '%'
			            AND A.SALE_DT      BETWEEN ? AND ?
			            AND A.BCOMP_CD     LIKE ? || '%'
			            AND A.CHRG_DT      BETWEEN ? AND ?
			            AND A.POS_NO BETWEEN NVL(?, '0000') AND NVL(?, '9999')
			            AND A.JBRCH_ID     LIKE ? || '%'
			            AND NOT EXISTS ( SELECT 'Y'
                               FROM DPS.PD_BUYREQPREPHOLD
                              WHERE PROC_DT  = TO_CHAR(SYSDATE,'YYYYMMDD')   -- 현재일자
                                AND STR_CD   = A.STR_CD         -- 점코드
                                AND BCOMP_CD = A.BCOMP_CD       -- 매입사코드
                                AND JBRCH_ID = A.JBRCH_ID       -- 가맹점번호
                           )  -- 11.08.30 청구대상데이터마감(청구보류)로 청구보류 로직 추가
			          GROUP BY A.STR_CD, A.SALE_DT, A.BCOMP_CD, A.POS_NO, A.CHRG_DT
			         UNION ALL                      
			         SELECT A.STR_CD
			              , A.SALE_DT
			              , A.BCOMP_CD  -- 매입사코드
			              , A.POS_NO
			              , A.CHRG_DT AS CHRG_DT
			              , 0 POS_COUNT
                          , 0 POS_AMT
                          , 0 REQ_COUNT
                          , 0 REQ_AMT
			              , COUNT(*) PP_COUNT
			              , SUM(DECODE(B.WORK_FLAG, '11', A.APPR_AMT, -1 * A.APPR_AMT)) AS PP_AMT
			              , 0 BUY_COUNT
			              , 0 BUY_AMT
			           FROM DPS.PD_POSTPONE A
			              , DPS.PD_BUYREQPREP B  -- 추가
                      WHERE A.STR_CD      =  B.STR_CD 
                        AND A.SALE_DT     =  B.SALE_DT
                        AND A.POS_NO      =  B.POS_NO 
                        AND A.TRAN_NO     =  B.TRAN_NO 
                        AND A.POS_SEQ_NO  =  B.POS_SEQ_NO 
                        AND A.PAY_TYPE    =  B.PAY_TYPE
			            AND A.STR_CD       LIKE ? || '%'
			            AND A.SALE_DT      BETWEEN ? AND ?
			            AND A.BCOMP_CD     LIKE ? || '%'
			            AND A.CHRG_DT      BETWEEN ? AND ?
			            AND A.POS_NO BETWEEN NVL(?, '0000') AND NVL(?, '9999')
			            AND NOT EXISTS ( SELECT 'Y'
                               FROM DPS.PD_BUYREQPREPHOLD
                              WHERE PROC_DT  = TO_CHAR(SYSDATE,'YYYYMMDD')   -- 현재일자
                                AND STR_CD   = B.STR_CD         -- 점코드
                                AND BCOMP_CD = B.BCOMP_CD       -- 매입사코드
                                AND JBRCH_ID = B.JBRCH_ID       -- 가맹점번호
                           )  -- 11.08.30 청구대상데이터마감(청구보류)로 청구보류 로직 추가
			          GROUP BY A.STR_CD, A.SALE_DT, A.BCOMP_CD, A.POS_NO, A.CHRG_DT
			         UNION ALL
                     -- 창구대상데이터마감(청구보류)으로 인한 청구보류
                     SELECT A.STR_CD
                          , A.SALE_DT
                          , A.BCOMP_CD  -- 매입사코드
                          , A.POS_NO
                          , A.CHRG_DT AS CHRG_DT
                          , 0 POS_COUNT
                          , 0 POS_AMT
                          , 0 REQ_COUNT
                          , 0 REQ_AMT
                          , COUNT(*) PP_COUNT
                          , SUM(DECODE(A.WORK_FLAG, '11', A.APPR_AMT, -1 * A.APPR_AMT)) AS PP_AMT
                          , 0 BUY_COUNT
                          , 0 BUY_AMT
                       FROM DPS.PD_BUYREQPREP A
                      WHERE A.STR_CD       LIKE ? || '%'
                        AND A.SALE_DT      BETWEEN ? AND ?
                        AND A.BCOMP_CD     LIKE ? || '%'
                        AND A.CHRG_DT      BETWEEN ? AND ?
                        AND A.POS_NO BETWEEN NVL(?, '0000') AND NVL(?, '9999')
                        AND A.JBRCH_ID     LIKE ? || '%'
                        AND EXISTS ( SELECT 'Y'
                                       FROM DPS.PD_BUYREQPREPHOLD
                                      WHERE PROC_DT  = TO_CHAR(SYSDATE,'YYYYMMDD')   -- 현재일자
                                        AND STR_CD   = A.STR_CD         -- 점코드
                                        AND BCOMP_CD = A.BCOMP_CD       -- 매입사코드
                                        AND JBRCH_ID = A.JBRCH_ID       -- 가맹점번호
                                    )  -- 11.08.10 창구대상데이터마감(청구보류)로 청구보류 로직 추가
                      GROUP BY A.STR_CD, A.SALE_DT, A.BCOMP_CD, A.POS_NO, A.CHRG_DT
			         UNION ALL
			         SELECT B.STR_CD
			              , B.SALE_DT
			              , B.BCOMP_CD  -- 매입사코드
			              , B.POS_NO
			              , B.CHRG_DT AS CHRG_DT
			              , 0 POS_COUNT
			              , 0 POS_AMT
			              , 0 REQ_COUNT
			              , 0 REQ_AMT
			              , 0 PP_COUNT
			              , 0 PP_AMT
			              , COUNT(*) BUY_COUNT
			              , SUM(DECODE(A.WORK_FLAG, '11', A.APPR_AMT, -1 * A.APPR_AMT)) AS BUY_AMT
			           FROM DPS.PD_BUYREQD A
			              , DPS.PD_BUYREQPREP B
			          WHERE A.CHRG_DT  = B.CHRG_DT
			            AND A.CHRG_SEQ = B.CHRG_SEQ
			            AND A.SEQ_NO   = B.CHRG_NO
			            AND A.JBRCH_ID = B.JBRCH_ID
			            AND B.STR_CD       LIKE ? || '%'
			            AND B.SALE_DT      BETWEEN ? AND ?
			            AND B.BCOMP_CD     LIKE ? || '%'
			            AND B.CHRG_DT      BETWEEN ? AND ?
			            AND B.POS_NO BETWEEN NVL(?, '0000') AND NVL(?, '9999')
			            AND A.JBRCH_ID     LIKE ? || '%'
			          GROUP BY B.STR_CD, B.SALE_DT, B.BCOMP_CD, B.POS_NO, B.CHRG_DT
			       ) X
			 GROUP BY STR_CD, SALE_DT, BCOMP_CD, POS_NO, CHRG_DT
        ]]>        
    </query>
    
</service>