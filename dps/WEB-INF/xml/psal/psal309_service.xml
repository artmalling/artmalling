<?xml version="1.0"	encoding="euc-kr"?>
<!-- XML 버전 1.0을	사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자	: 박종은
 * 회 사 명	: 한국후지쯔
 * 작 성 일	: 2010.06.14
 * 변 경 일	: 
 * 변경내용	: 
 * 개	 요	:  
 -->
<service name="/psal309.ps">

	<gauce name="H_SEL_MASTER">
		<column	colName="STR_CD"				colType="TB_STRING"		size="2"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="SALE_MONTH"			colType="TB_STRING"		size="8"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="GUBUN"					colType="TB_STRING"		size="15"	dec="0"	keyType="TB_NORMAL"	roundMode="ROUND" />
		<column	colName="D01"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D02"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D03"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D04"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D05"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D06"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D07"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D08"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D09"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D10"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D11"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D11"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D12"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D13"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D14"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D15"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D16"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D17"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D18"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D19"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D20"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D21"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D22"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D23"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D24"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D25"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D26"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D27"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D28"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D29"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D30"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="D31"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="DTOT"					colType="TB_STRING"		size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="BIGO"					colType="TB_STRING"		size="20"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="QRY_ORD"				colType="TB_STRING"		size="20"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="UNIT"    	            colType="TB_DECIMAL"    size="10"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
	</gauce>
	
	<gauce name="H_SEL_MASTER2">
		<column	colName="GUBUN"					colType="TB_STRING"		size="30"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="SALE_AMT"				colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="RATIO"					colType="TB_DECIMAL"	size="5"	dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="UNIT"    	            colType="TB_DECIMAL"    size="10"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
	</gauce>
	
	<gauce name="H_SEL_MASTER3">
		<column	colName="PART_CD"				colType="TB_STRING"		size="2"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="PART_NM"				colType="TB_STRING"		size="10"	dec="0"	keyType="TB_NORMAL"	roundMode="ROUND" />
		<column	colName="FLOR_CD"				colType="TB_STRING"		size="5"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="FLOR_NM"				colType="TB_STRING"		size="20"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="SALE_AMT"				colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="ORIG_AMT"				colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="RATIO"					colType="TB_DECIMAL"	size="5"	dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="UNIT"    	            colType="TB_DECIMAL"    size="10"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
	</gauce>
	
	
	<gauce name="H_SEL_MASTER4">
		<column	colName="STR_CD"				colType="TB_STRING"		size="2"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="PUMBUN_CD"				colType="TB_STRING"		size="10"	dec="0"	keyType="TB_NORMAL"	roundMode="ROUND" />
		<column	colName="PUMBUN_NAME"			colType="TB_STRING"		size="40"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="SALE_AMT"				colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="ORIG_AMT"				colType="TB_DECIMAL"	size="13"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="RATIO"					colType="TB_DECIMAL"	size="5"	dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
		<column	colName="PUMBUN_RANK"			colType="TB_DECIMAL"	size="5"	dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
		<column colName="UNIT"    	            colType="TB_DECIMAL"    size="10"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
	</gauce>
		 
	<!-- 쿼리는	전부 대문자	-->
	<query name="SEL_MASTER">
		<![CDATA[	
		WITH SALE_REPORT AS
		(
		SELECT '실적' GUBUN
		    , STR_CD
		    , SALE_MONTH
		    , SUM(DECODE(SALE_DATE,'01',NORM_SALE_AMT,0)) D01
		    , SUM(DECODE(SALE_DATE,'02',NORM_SALE_AMT,0)) D02
		    , SUM(DECODE(SALE_DATE,'03',NORM_SALE_AMT,0)) D03
		    , SUM(DECODE(SALE_DATE,'04',NORM_SALE_AMT,0)) D04
		    , SUM(DECODE(SALE_DATE,'05',NORM_SALE_AMT,0)) D05
		    , SUM(DECODE(SALE_DATE,'06',NORM_SALE_AMT,0)) D06
		    , SUM(DECODE(SALE_DATE,'07',NORM_SALE_AMT,0)) D07
		    , SUM(DECODE(SALE_DATE,'08',NORM_SALE_AMT,0)) D08
		    , SUM(DECODE(SALE_DATE,'09',NORM_SALE_AMT,0)) D09
		    , SUM(DECODE(SALE_DATE,'10',NORM_SALE_AMT,0)) D10
		    , SUM(DECODE(SALE_DATE,'11',NORM_SALE_AMT,0)) D11
		    , SUM(DECODE(SALE_DATE,'12',NORM_SALE_AMT,0)) D12
		    , SUM(DECODE(SALE_DATE,'13',NORM_SALE_AMT,0)) D13
		    , SUM(DECODE(SALE_DATE,'14',NORM_SALE_AMT,0)) D14
		    , SUM(DECODE(SALE_DATE,'15',NORM_SALE_AMT,0)) D15
		    , SUM(DECODE(SALE_DATE,'16',NORM_SALE_AMT,0)) D16
		    , SUM(DECODE(SALE_DATE,'17',NORM_SALE_AMT,0)) D17
		    , SUM(DECODE(SALE_DATE,'18',NORM_SALE_AMT,0)) D18
		    , SUM(DECODE(SALE_DATE,'19',NORM_SALE_AMT,0)) D19
		    , SUM(DECODE(SALE_DATE,'20',NORM_SALE_AMT,0)) D20
		    , SUM(DECODE(SALE_DATE,'21',NORM_SALE_AMT,0)) D21
		    , SUM(DECODE(SALE_DATE,'22',NORM_SALE_AMT,0)) D22
		    , SUM(DECODE(SALE_DATE,'23',NORM_SALE_AMT,0)) D23
		    , SUM(DECODE(SALE_DATE,'24',NORM_SALE_AMT,0)) D24
		    , SUM(DECODE(SALE_DATE,'25',NORM_SALE_AMT,0)) D25
		    , SUM(DECODE(SALE_DATE,'26',NORM_SALE_AMT,0)) D26
		    , SUM(DECODE(SALE_DATE,'27',NORM_SALE_AMT,0)) D27
		    , SUM(DECODE(SALE_DATE,'28',NORM_SALE_AMT,0)) D28
		    , SUM(DECODE(SALE_DATE,'29',NORM_SALE_AMT,0)) D29
		    , SUM(DECODE(SALE_DATE,'30',NORM_SALE_AMT,0)) D30
		    , SUM(DECODE(SALE_DATE,'31',NORM_SALE_AMT,0)) D31
		    , SUM(NORM_SALE_AMT) DTOT
		    , 1 QRY_ORD
		    , MIN((SELECT SUM(NORM_SALE_AMT) FROM DPS.PS_DAYPBN WHERE SALE_DT BETWEEN SUBSTR(?,1,6)||'00' AND ?)) DDAY
		FROM
		(
		SELECT STR_CD
		     , SALE_DT
		     , SUBSTR(SALE_DT, 1,6) SALE_MONTH
		     , SUBSTR(SALE_DT, 7,2) SALE_DATE
		     , PUMBUN_CD
		     , NORM_SALE_AMT / ? NORM_SALE_AMT
		 FROM DPS.PS_DAYPBN
		WHERE STR_CD= ?
		AND SALE_DT LIKE SUBSTR(?,1,6)||'%'
		)
		GROUP BY STR_CD, SALE_MONTH
		UNION ALL
		SELECT '목표' GUBUN
		    , STR_CD
		    , SALE_MONTH
		    , SUM(DECODE(SALE_DATE,'01',NORM_SALE_AMT,0)) D01
		    , SUM(DECODE(SALE_DATE,'02',NORM_SALE_AMT,0)) D02
		    , SUM(DECODE(SALE_DATE,'03',NORM_SALE_AMT,0)) D03
		    , SUM(DECODE(SALE_DATE,'04',NORM_SALE_AMT,0)) D04
		    , SUM(DECODE(SALE_DATE,'05',NORM_SALE_AMT,0)) D05
		    , SUM(DECODE(SALE_DATE,'06',NORM_SALE_AMT,0)) D06
		    , SUM(DECODE(SALE_DATE,'07',NORM_SALE_AMT,0)) D07
		    , SUM(DECODE(SALE_DATE,'08',NORM_SALE_AMT,0)) D08
		    , SUM(DECODE(SALE_DATE,'09',NORM_SALE_AMT,0)) D09
		    , SUM(DECODE(SALE_DATE,'10',NORM_SALE_AMT,0)) D10
		    , SUM(DECODE(SALE_DATE,'11',NORM_SALE_AMT,0)) D11
		    , SUM(DECODE(SALE_DATE,'12',NORM_SALE_AMT,0)) D12
		    , SUM(DECODE(SALE_DATE,'13',NORM_SALE_AMT,0)) D13
		    , SUM(DECODE(SALE_DATE,'14',NORM_SALE_AMT,0)) D14
		    , SUM(DECODE(SALE_DATE,'15',NORM_SALE_AMT,0)) D15
		    , SUM(DECODE(SALE_DATE,'16',NORM_SALE_AMT,0)) D16
		    , SUM(DECODE(SALE_DATE,'17',NORM_SALE_AMT,0)) D17
		    , SUM(DECODE(SALE_DATE,'18',NORM_SALE_AMT,0)) D18
		    , SUM(DECODE(SALE_DATE,'19',NORM_SALE_AMT,0)) D19
		    , SUM(DECODE(SALE_DATE,'20',NORM_SALE_AMT,0)) D20
		    , SUM(DECODE(SALE_DATE,'21',NORM_SALE_AMT,0)) D21
		    , SUM(DECODE(SALE_DATE,'22',NORM_SALE_AMT,0)) D22
		    , SUM(DECODE(SALE_DATE,'23',NORM_SALE_AMT,0)) D23
		    , SUM(DECODE(SALE_DATE,'24',NORM_SALE_AMT,0)) D24
		    , SUM(DECODE(SALE_DATE,'25',NORM_SALE_AMT,0)) D25
		    , SUM(DECODE(SALE_DATE,'26',NORM_SALE_AMT,0)) D26
		    , SUM(DECODE(SALE_DATE,'27',NORM_SALE_AMT,0)) D27
		    , SUM(DECODE(SALE_DATE,'28',NORM_SALE_AMT,0)) D28
		    , SUM(DECODE(SALE_DATE,'29',NORM_SALE_AMT,0)) D29
		    , SUM(DECODE(SALE_DATE,'30',NORM_SALE_AMT,0)) D30
		    , SUM(DECODE(SALE_DATE,'31',NORM_SALE_AMT,0)) D31
		    , SUM(NORM_SALE_AMT) DTOT
		    , 0 QRY_ORD
		    , MIN((SELECT SUM(ORIGIN_SALE_TAMT) FROM DPS.PS_ACTPUMBUN WHERE EXE_DT BETWEEN SUBSTR(?,1,6)||'00' AND ?)) DDAY   
		FROM
		(
		SELECT STR_CD
		     , EXE_DT SALE_DT
		     , EXE_YM SALE_MONTH
		     , SUBSTR(EXE_DT, 7,2) SALE_DATE
		     , PUMBUN_CD
		     , ORIGIN_SALE_TAMT / ? NORM_SALE_AMT
		 FROM DPS.PS_ACTPUMBUN
		WHERE STR_CD= ?
		AND EXE_DT LIKE SUBSTR(?,1,6)||'%'
		)
		GROUP BY STR_CD, SALE_MONTH
		ORDER BY QRY_ORD
		)
		
		SELECT
		STR_CD
		,SALE_MONTH
		,GUBUN
		,TO_CHAR( D01,'FM999,999,999,990') D01
		,TO_CHAR( D02,'FM999,999,999,990') D02
		,TO_CHAR( D03,'FM999,999,999,990') D03
		,TO_CHAR( D04,'FM999,999,999,990') D04
		,TO_CHAR( D05,'FM999,999,999,990') D05
		,TO_CHAR( D06,'FM999,999,999,990') D06
		,TO_CHAR( D07,'FM999,999,999,990') D07
		,TO_CHAR( D08,'FM999,999,999,990') D08
		,TO_CHAR( D09,'FM999,999,999,990') D09
		,TO_CHAR( D10,'FM999,999,999,990') D10
		,TO_CHAR( D11,'FM999,999,999,990') D11
		,TO_CHAR( D12,'FM999,999,999,990') D12
		,TO_CHAR( D13,'FM999,999,999,990') D13
		,TO_CHAR( D14,'FM999,999,999,990') D14
		,TO_CHAR( D15,'FM999,999,999,990') D15
		,TO_CHAR( D16,'FM999,999,999,990') D16
		,TO_CHAR( D17,'FM999,999,999,990') D17
		,TO_CHAR( D18,'FM999,999,999,990') D18
		,TO_CHAR( D19,'FM999,999,999,990') D19
		,TO_CHAR( D20,'FM999,999,999,990') D20
		,TO_CHAR( D21,'FM999,999,999,990') D21
		,TO_CHAR( D22,'FM999,999,999,990') D22
		,TO_CHAR( D23,'FM999,999,999,990') D23
		,TO_CHAR( D24,'FM999,999,999,990') D24
		,TO_CHAR( D25,'FM999,999,999,990') D25
		,TO_CHAR( D26,'FM999,999,999,990') D26
		,TO_CHAR( D27,'FM999,999,999,990') D27
		,TO_CHAR( D28,'FM999,999,999,990') D28
		,TO_CHAR( D29,'FM999,999,999,990') D29
		,TO_CHAR( D30,'FM999,999,999,990') D30
		,TO_CHAR( D31,'FM999,999,999,990') D31
		,TO_CHAR( DTOT,'FM999,999,999,990') DTOT
		,DECODE(QRY_ORD,0, TO_CHAR((SELECT DECODE(SUM(DECODE(QRY_ORD,0,DTOT,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,DTOT,0))/SUM(DECODE(QRY_ORD,0,DTOT,0)))*100,2)) FROM SALE_REPORT)),'누계달성율') BIGO
		,QRY_ORD
		FROM SALE_REPORT
		UNION ALL
		SELECT
		STR_CD
		,SALE_MONTH
		,'달성율' GUBUN
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D01,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D01,0))/SUM(DECODE(QRY_ORD,0,D01,0)))*100,2))) RATI_D01
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D02,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D02,0))/SUM(DECODE(QRY_ORD,0,D02,0)))*100,2))) RATI_D02
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D03,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D03,0))/SUM(DECODE(QRY_ORD,0,D03,0)))*100,2))) RATI_D03
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D04,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D04,0))/SUM(DECODE(QRY_ORD,0,D04,0)))*100,2))) RATI_D04
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D05,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D05,0))/SUM(DECODE(QRY_ORD,0,D05,0)))*100,2))) RATI_D05
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D06,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D06,0))/SUM(DECODE(QRY_ORD,0,D06,0)))*100,2))) RATI_D06
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D07,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D07,0))/SUM(DECODE(QRY_ORD,0,D07,0)))*100,2))) RATI_D07
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D08,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D08,0))/SUM(DECODE(QRY_ORD,0,D08,0)))*100,2))) RATI_D08
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D09,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D09,0))/SUM(DECODE(QRY_ORD,0,D09,0)))*100,2))) RATI_D09
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D10,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D10,0))/SUM(DECODE(QRY_ORD,0,D10,0)))*100,2))) RATI_D10
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D11,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D11,0))/SUM(DECODE(QRY_ORD,0,D11,0)))*100,2))) RATI_D11
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D12,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D12,0))/SUM(DECODE(QRY_ORD,0,D12,0)))*100,2))) RATI_D12
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D13,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D13,0))/SUM(DECODE(QRY_ORD,0,D13,0)))*100,2))) RATI_D13
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D14,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D14,0))/SUM(DECODE(QRY_ORD,0,D14,0)))*100,2))) RATI_D14
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D15,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D15,0))/SUM(DECODE(QRY_ORD,0,D15,0)))*100,2))) RATI_D15
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D16,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D16,0))/SUM(DECODE(QRY_ORD,0,D16,0)))*100,2))) RATI_D16
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D17,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D17,0))/SUM(DECODE(QRY_ORD,0,D17,0)))*100,2))) RATI_D17
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D18,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D18,0))/SUM(DECODE(QRY_ORD,0,D18,0)))*100,2))) RATI_D18
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D19,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D19,0))/SUM(DECODE(QRY_ORD,0,D19,0)))*100,2))) RATI_D19
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D20,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D20,0))/SUM(DECODE(QRY_ORD,0,D20,0)))*100,2))) RATI_D20
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D21,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D21,0))/SUM(DECODE(QRY_ORD,0,D21,0)))*100,2))) RATI_D21
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D22,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D22,0))/SUM(DECODE(QRY_ORD,0,D22,0)))*100,2))) RATI_D22
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D23,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D23,0))/SUM(DECODE(QRY_ORD,0,D23,0)))*100,2))) RATI_D23
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D24,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D24,0))/SUM(DECODE(QRY_ORD,0,D24,0)))*100,2))) RATI_D24
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D25,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D25,0))/SUM(DECODE(QRY_ORD,0,D25,0)))*100,2))) RATI_D25
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D26,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D26,0))/SUM(DECODE(QRY_ORD,0,D26,0)))*100,2))) RATI_D26
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D27,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D27,0))/SUM(DECODE(QRY_ORD,0,D27,0)))*100,2))) RATI_D27
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D28,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D28,0))/SUM(DECODE(QRY_ORD,0,D28,0)))*100,2))) RATI_D28
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D29,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D29,0))/SUM(DECODE(QRY_ORD,0,D29,0)))*100,2))) RATI_D29
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D30,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D30,0))/SUM(DECODE(QRY_ORD,0,D30,0)))*100,2))) RATI_D30
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,D31,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,D31,0))/SUM(DECODE(QRY_ORD,0,D31,0)))*100,2))) RATI_D31
		, TO_CHAR(DECODE(SUM(DECODE(QRY_ORD,0,DTOT,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,DTOT,0))/SUM(DECODE(QRY_ORD,0,DTOT,0)))*100,2))) RATI_DTOT
		,TO_CHAR((SELECT DECODE(SUM(DECODE(QRY_ORD,0,DDAY,0)),0,0,ROUND((SUM(DECODE(QRY_ORD,1,DDAY,0))/SUM(DECODE(QRY_ORD,0,DDAY,0)))*100,2)) FROM SALE_REPORT)) BIGO
		,2 QRY_ORD
		FROM SALE_REPORT
		GROUP BY STR_CD, SALE_MONTH
		ORDER BY QRY_ORD	
		]]>		   
	</query>	
	<query name="SEL_MASTER2">
		<![CDATA[
			WITH SALE_REPORT AS
			(
			SELECT STR_CD
			     , PUMBUN_CD
			     , SUM(NORM_SALE_AMT) SALE_AMT
			     , SUM(ORIGIN_SALE_TAMT) ORIG_AMT
			     , (SELECT SALE_ORG_CD FROM DPS.PC_STRPBN WHERE PUMBUN_CD = A.PUMBUN_CD) ORG
			  FROM
			(
			SELECT STR_CD
			     , SALE_DT
			     , SUBSTR(SALE_DT, 1,6) SALE_MONTH
			     , SUBSTR(SALE_DT, 7,2) SALE_DATE
			     , PUMBUN_CD
			     , NORM_SALE_AMT / ? NORM_SALE_AMT
			     , 0 ORIGIN_SALE_TAMT
			 FROM DPS.PS_DAYPBN A
			WHERE STR_CD= ?
			--AND SALE_DT LIKE ||%'
			AND SALE_DT = ?
			UNION ALL
			SELECT STR_CD
			     , EXE_DT SALE_DT
			     , EXE_YM SALE_MONTH
			     , SUBSTR(EXE_DT, 7,2) SALE_DATE
			     , PUMBUN_CD
			     , 0  NORM_SALE_AMT
			     , ORIGIN_SALE_TAMT / ? ORIGIN_SALE_TAMT
			 FROM DPS.PS_ACTPUMBUN
			WHERE STR_CD= ?
			--AND EXE_DT LIKE ||'%'
			AND EXE_DT = ?
			) A
			GROUP BY STR_CD, PUMBUN_CD
			ORDER BY STR_CD, ORG, PUMBUN_CD
			)
			/*패션*/
			SELECT '패션(리테일)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE ORG BETWEEN '0101010100' AND '0101010599'
			UNION ALL 
			/*리빙*/
			SELECT '리빙(한샘 포함)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE ORG BETWEEN '0101010600' AND '0101010699'
			    OR ORG BETWEEN '0102010200' AND '0102010299'  --한샘
			UNION ALL 
			SELECT '리빙(한샘 미포함)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE ORG BETWEEN '0101010600' AND '0101010699'
			UNION ALL 
			/*F&B*/
			SELECT 'F&B(노브랜드 포함)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE ORG BETWEEN '0101020200' AND '0101020299'
			    OR ORG BETWEEN '0102010300' AND '0102010399'  -- 투썸
			UNION ALL 
			SELECT 'F&B(노브랜드 미포함)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE (ORG BETWEEN '0101020200' AND '0101020299'
			   OR ORG BETWEEN '0102010300' AND '0102010399')  -- 투썸 
			   AND PUMBUN_CD NOT IN ('700177')
			UNION ALL 
			/*서비스*/
			SELECT '서비스(CGV 포함)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE ORG BETWEEN '0101020100' AND '0101020199'
			    OR ORG BETWEEN '0102010100' AND '0102010199' -- CGV
			UNION ALL 
			SELECT '서비스(CGV 미포함)' GUBUN
			      , SUM(SALE_AMT) SALE_AMT
			      , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			  FROM SALE_REPORT
			 WHERE ORG BETWEEN '0101020100' AND '0101020199'		
		]]>		   
	</query>
	
	<query name="SEL_MASTER3">
		<![CDATA[
			
			SELECT A.PART_CD
			     , A.PART_NM
			     , DECODE(A.FLOR_CD,'B1','00',A.FLOR_CD) FLOR_CD
			     , B.FLOR_NM
			     , SUM(SALE_AMT) SALE_AMT
			     , SUM(ORIG_AMT) ORIG_AMT
			     --, DECODE(SUM(ORIG_AMT),0,0,ROUND((SUM(SALE_AMT)/SUM(ORIG_AMT))*100,2)) RATIO
			     , DECODE(SUM(ORIG_AMT),0,0,(SUM(SALE_AMT)/SUM(ORIG_AMT))*100) RATIO
			FROM 
			(
			SELECT STR_CD
			     , DPS.FN_GET_PART_NM2(STR_CD, 'CD',PUMBUN_CD) PART_CD
			     , DPS.FN_GET_PART_NM2(STR_CD, 'NM',PUMBUN_CD) PART_NM
			     , PUMBUN_CD
			     , SUM(NORM_SALE_AMT) SALE_AMT
			     , SUM(ORIGIN_SALE_TAMT) ORIG_AMT
			     , (SELECT SALE_ORG_CD FROM DPS.PC_STRPBN WHERE PUMBUN_CD = A.PUMBUN_CD) ORG
			     , (SELECT FLOR_CD FROM DPS.PC_STRPBN WHERE PUMBUN_CD = A.PUMBUN_CD) FLOR_CD
			  FROM
			(
			SELECT STR_CD
			     , SALE_DT
			     , SUBSTR(SALE_DT, 1,6) SALE_MONTH
			     , SUBSTR(SALE_DT, 7,2) SALE_DATE
			     , PUMBUN_CD
			     , NORM_SALE_AMT / ?  NORM_SALE_AMT
			     , 0 ORIGIN_SALE_TAMT
			 FROM DPS.PS_DAYPBN A
			WHERE STR_CD = ?
			--AND SALE_DT LIKE '201709%'
			AND SALE_DT = ?
			UNION ALL
			SELECT STR_CD
			     , EXE_DT SALE_DT
			     , EXE_YM SALE_MONTH
			     , SUBSTR(EXE_DT, 7,2) SALE_DATE
			     , PUMBUN_CD
			     , 0  NORM_SALE_AMT
			     , ORIGIN_SALE_TAMT / ?
			 FROM DPS.PS_ACTPUMBUN
			WHERE STR_CD= ?
			--AND EXE_DT LIKE '201709%'
			AND EXE_DT = ?
			) A
			GROUP BY STR_CD, PUMBUN_CD
			ORDER BY STR_CD, ORG, PUMBUN_CD
			) A
			, (
			SELECT COMM_CODE,COMM_NAME1 FLOR_NM FROM COM.TC_COMMCODE 
			WHERE SYS_PART='D'
			  AND COMM_PART='P061'
			  AND USE_YN='Y'
			) B
			WHERE A.FLOR_CD = B.COMM_CODE
			GROUP BY A.PART_CD
			     , A.PART_NM
			     , A.FLOR_CD
			     , B.FLOR_NM
			ORDER BY PART_CD, FLOR_CD
	
		]]>		   
	</query>
	
	<query name="SEL_MASTER4">
		<![CDATA[
			
			SELECT STR_CD
			     , PUMBUN_CD
			     , PUMBUN_NAME
			     , SALE_AMT
			     , ORIG_AMT
			     , RATIO
			     , PUMBUN_RANK
			 FROM
			(
			SELECT STR_CD
			     , PUMBUN_CD
			     , DPS.FN_GET_PUMBUN_NAME(PUMBUN_CD) PUMBUN_NAME
			     , SUM(NORM_SALE_AMT) SALE_AMT
			     , SUM(ORIGIN_SALE_TAMT) ORIG_AMT
			     , DECODE(SUM(ORIGIN_SALE_TAMT),0,0,(SUM(NORM_SALE_AMT)/SUM(ORIGIN_SALE_TAMT))*100) RATIO
			     , RANK() OVER(ORDER BY SUM(NORM_SALE_AMT) DESC) PUMBUN_RANK
			     --, (SELECT SALE_ORG_CD FROM DPS.PC_STRPBN WHERE PUMBUN_CD = A.PUMBUN_CD) ORG
			     --, (SELECT FLOR_CD FROM DPS.PC_STRPBN WHERE PUMBUN_CD = A.PUMBUN_CD) FLOR_CD
			  FROM
			(
			SELECT STR_CD
			     , SALE_DT
			     , SUBSTR(SALE_DT, 1,6) SALE_MONTH
			     , SUBSTR(SALE_DT, 7,2) SALE_DATE
			     , PUMBUN_CD
			     , NORM_SALE_AMT / ? NORM_SALE_AMT 
			     , 0 ORIGIN_SALE_TAMT
			 FROM DPS.PS_DAYPBN A
			WHERE STR_CD= ?
			-- AND SALE_DT LIKE '201709%'
			AND SALE_DT = ?
			UNION ALL
			SELECT STR_CD
			     , EXE_DT SALE_DT
			     , EXE_YM SALE_MONTH
			     , SUBSTR(EXE_DT, 7,2) SALE_DATE
			     , PUMBUN_CD
			     , 0  NORM_SALE_AMT
			     , ORIGIN_SALE_TAMT / ? ORIGIN_SALE_TAMT
			 FROM DPS.PS_ACTPUMBUN
			WHERE STR_CD= ?
			--AND EXE_DT LIKE '201709%'
			AND EXE_DT = ?
			) A
			GROUP BY STR_CD, PUMBUN_CD
			ORDER BY SALE_AMT DESC
			)
			WHERE PUMBUN_RANK <=10
			ORDER BY PUMBUN_RANK
						
		]]>		   
	</query>
	
	
			
	<query name="SEL_SALE_TREND_RATE">
		<![CDATA[
			SELECT A.STR_CD
				 , ?												  AS PC_CD
				 , A.TEAM_CD
				 , B.ORG_SHORT_NAME									  AS ORG_NAME
				 , SUM(A.TOT_SALE_AMT)								  AS TOT_SALE_AMT
				 , SUM(A.CMPR_TOT_SALE_AMT)							  AS CMPR_TOT_SALE_AMT
				 , (CASE WHEN SUM(A.CMPR_TOT_SALE_AMT) = 0 THEN	0 
					ELSE SUM(A.TOT_SALE_AMT)/SUM(A.CMPR_TOT_SALE_AMT)*100 END)	AS TREND_RATE
				 , ?												  AS SALE_DT_S
				 , ?												  AS CMPR_DT_S
				 , ?                                                  AS UNIT
			  FROM (
					SELECT A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,6) || '0000'	 AS	TEAM_CD
						 , SUM(A.TOT_SALE_AMT)				AS TOT_SALE_AMT
						 , 0								AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	  C
					 WHERE B.ORG_CD		= C.SALE_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	LIKE ? || '%'
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,6)
					 UNION ALL
					SELECT A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,6) || '0000'	 AS	TEAM_CD
						 , 0								AS TOT_SALE_AMT
						 , SUM(A.TOT_SALE_AMT)				AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	 C
					 WHERE B.ORG_CD		= C.SALE_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	LIKE ? || '%'
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,6)
						) A
				 , DPS.PC_ORGMST B
			 WHERE A.TEAM_CD   = B.ORG_CD
			 GROUP BY
				   A.STR_CD
				 , A.TEAM_CD
				 , B.ORG_SHORT_NAME
			 ORDER BY
				   A.TEAM_CD
		]]>		   
	</query>
	<query name="SEL_SALE_TREND_RATE2">		   
		<![CDATA[
			SELECT A.STR_CD
				 , ?												  AS PC_CD
				 , A.TEAM_CD
				 , B.ORG_SHORT_NAME									  AS ORG_NAME
				 , SUM(A.TOT_SALE_AMT)								  AS TOT_SALE_AMT
				 , SUM(A.CMPR_TOT_SALE_AMT)							  AS CMPR_TOT_SALE_AMT
				 , (CASE WHEN SUM(A.CMPR_TOT_SALE_AMT) = 0 THEN	0 
					ELSE SUM(A.TOT_SALE_AMT)/SUM(A.CMPR_TOT_SALE_AMT)*100 END)	AS TREND_RATE
				 , ?												  AS SALE_DT_S
				 , ?												  AS CMPR_DT_S
				 , ?                                                  AS UNIT
			  FROM (
					SELECT A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,6) ||	'0000'	AS TEAM_CD
						 , SUM(A.TOT_SALE_AMT)				AS TOT_SALE_AMT
						 , 0								AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	  C
					 WHERE B.ORG_CD		= C.BUY_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	LIKE ? || '%'
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,6)
					 UNION ALL
					SELECT A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,6) ||	'0000'	AS TEAM_CD
						 , 0								AS TOT_SALE_AMT
						 , SUM(A.TOT_SALE_AMT)				AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	 C
					 WHERE B.ORG_CD		= C.BUY_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	LIKE ? || '%'
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,6)
						) A
				 , DPS.PC_ORGMST B
			 WHERE A.TEAM_CD   = B.ORG_CD
			 GROUP BY
				   A.STR_CD
				 , A.TEAM_CD
				 , B.ORG_SHORT_NAME
			 ORDER BY
				   A.TEAM_CD
		]]>		   
	</query>
	<query name="SEL_SALE_TREND_RATE_PC">		 
		<![CDATA[
			SELECT A.STR_CD
				 , A.PC_CD
				 , B.ORG_SHORT_NAME									  AS ORG_NAME
				 , SUM(A.TOT_SALE_AMT)								  AS TOT_SALE_AMT
				 , SUM(A.CMPR_TOT_SALE_AMT)							  AS CMPR_TOT_SALE_AMT
				 , (CASE WHEN SUM(A.CMPR_TOT_SALE_AMT) = 0 THEN	0 
					ELSE SUM(A.TOT_SALE_AMT)/SUM(A.CMPR_TOT_SALE_AMT)*100 END)	AS TREND_RATE
				 , ?                                                  AS UNIT
			  FROM (
					SELECT A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,8) || '00'	 AS	PC_CD
						 , SUM(A.TOT_SALE_AMT)				AS TOT_SALE_AMT
						 , 0								AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	  C
					 WHERE B.ORG_CD		= C.SALE_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	= ?
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,8)
					 UNION ALL
					SELECT A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,8) || '00'	 AS	PC_CD
						 , 0								AS TOT_SALE_AMT
						 , SUM(A.TOT_SALE_AMT)				AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	 C
					 WHERE B.ORG_CD		= C.SALE_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	= ?
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.SALE_ORG_CD, 0,8)
						) A
				 , DPS.PC_ORGMST B
			 WHERE A.PC_CD	 = B.ORG_CD
			 GROUP BY
				   A.STR_CD
				 , A.PC_CD
				 , B.ORG_SHORT_NAME
			 ORDER BY
				   A.PC_CD
		]]>		   
	</query>
	
	<query name="SEL_SALE_TREND_RATE_PC2">		  
		<![CDATA[
			SELECT A.STR_CD
				 , A.PC_CD
				 , B.ORG_SHORT_NAME									  AS ORG_NAME
				 , SUM(A.TOT_SALE_AMT)								  AS TOT_SALE_AMT
				 , SUM(A.CMPR_TOT_SALE_AMT)							  AS CMPR_TOT_SALE_AMT
				 , (CASE WHEN SUM(A.CMPR_TOT_SALE_AMT) = 0 THEN	0 
					ELSE SUM(A.TOT_SALE_AMT)/SUM(A.CMPR_TOT_SALE_AMT)*100 END)	AS TREND_RATE
			     , ?                                                  AS UNIT
			  FROM (
					SELECT A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,8) ||	'00'	AS PC_CD
						 , SUM(A.TOT_SALE_AMT)				AS TOT_SALE_AMT
						 , 0								AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	  C
					 WHERE B.ORG_CD		= C.BUY_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	= ?
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,8)
					 UNION ALL
					SELECT A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,8) ||	'00'	AS PC_CD
						 , 0								AS TOT_SALE_AMT
						 , SUM(A.TOT_SALE_AMT)				AS CMPR_TOT_SALE_AMT
					  FROM DPS.PS_MONTHPBN	 A
							 , DPS.PC_ORGMST	 B
							 , DPS.PC_STRPBN	 C
					 WHERE B.ORG_CD		= C.BUY_ORG_CD
					   AND A.STR_CD	= C.STR_CD
					   AND A.PUMBUN_CD = C.PUMBUN_CD
					   AND B.STR_CD		= ?
					   AND B.DEPT_CD	= ?
					   AND B.TEAM_CD	= ?
					   AND B.PC_CD		LIKE ? || '%'
					   AND A.SALE_YM	= ?
					   AND EXISTS (	SELECT MYORG.USER_ID
									  FROM COM.V_MYORG MYORG
									 WHERE MYORG.STR_CD		 = B.STR_CD
									   AND MYORG.DEPT_CD	 = B.DEPT_CD
									   AND MYORG.TEAM_CD	 = B.TEAM_CD
									   AND MYORG.PC_CD		 = B.PC_CD
									   AND MYORG.USER_ID	 = ?
								  )
					 GROUP BY
						   A.STR_CD
						 , SUBSTR(C.BUY_ORG_CD,	0,8)
						) A
				 , DPS.PC_ORGMST B
			 WHERE A.PC_CD	 = B.ORG_CD
			 GROUP BY
				   A.STR_CD
				 , A.PC_CD
				 , B.ORG_SHORT_NAME
			 ORDER BY
				   A.PC_CD
		]]>		   
	</query>
</service>