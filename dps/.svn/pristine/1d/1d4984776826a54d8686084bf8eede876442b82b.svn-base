<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 박종은
 * 회 사 명 : 한국후지쯔
 * 작 성 일 : 2010.04.14
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  
 -->
<service name="/psal304.ps">

    <gauce name="H_SEL_MASTER2"> 
        <column colName="STR_CD"                  colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STR_NAME"                  colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
       <column colName="CODE"                  colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="NAME"                  colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_DT"               colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GUBUN_TOTAL"           colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_TOTAL"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE9"                 colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE10"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE11"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE12"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE13"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE14"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE15"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE16"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE17"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE18"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE19"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE20"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE21"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE22"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE23"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        
        <!-- 신장율 추가 --> 
        <column colName="GUBUN_SALEIRATE"       colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        <column colName="SALEIRATE_TOTAL"       colType="TB_DECIMAL"     size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE9"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE10"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE11"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE12"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE13"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE14"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE15"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE16"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE17"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE18"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE19"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE20"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE21"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE22"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE23"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />    
                                                
        <column colName="GUBUN_PROF"            colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF_TOTAL"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF9"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF10"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF11"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF12"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF13"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF14"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF15"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF16"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF17"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF18"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF19"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF20"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF21"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF22"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF23"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                                                
        <column colName="GUBUN_CUST_CNT"        colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_CNT_TOTAL"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT9"              colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT10"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT11"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT12"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT13"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT14"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT15"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT16"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT17"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT18"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT19"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT20"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT21"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT22"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT23"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                                                
        <column colName="GUBUN_CUST_DANGA"      colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_DANGA_TOTAL"      colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA9"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA10"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA11"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA12"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA13"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA14"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA15"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA16"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA17"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA18"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA19"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA20"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA21"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA22"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA23"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                
        <!-- 시간대 누계 -->
        <column colName="GUBUN_ACC_SALE"        colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE_TOTAL"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE9"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE10"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE11"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE12"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE13"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE14"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE15"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE16"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE17"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE18"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE19"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE20"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE21"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE22"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE23"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <!-- 누계신장율 -->
        <column colName="GUBUN_ACC_SALE_1"     colType="TB_STRING"       size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE_TOTAL"   colType="TB_DECIMAL"      size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE9"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE10"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE11"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE12"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE13"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE14"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE15"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE16"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE17"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE18"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE19"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE20"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE21"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE22"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE23"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                                                       
        <column colName="CMPR_DT"               colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GUBUN_TOTAL_CMPR"      colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_TOTAL_CMPR"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE9"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE10"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE11"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE12"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE13"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE14"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE15"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE16"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE17"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE18"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE19"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE20"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE21"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE22"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE23"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="GUBUN_PROF_CMPR"       colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF_TOTAL_CMPR"  colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF9"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF10"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF11"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF12"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF13"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF14"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF15"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF16"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF17"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF18"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF19"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF20"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF21"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF22"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF23"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="GUBUN_CUST_CNT_CMPR"   colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_CNT_TOTAL_CMPR"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT9"          colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT10"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT11"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT12"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT13"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT14"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT15"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT16"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT17"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT18"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT19"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT20"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT21"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT22"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT23"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="GUBUN_CUST_DANGA_CMPR" colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_DANGA_TOTAL_CMPR" colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA9"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA10"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA11"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA12"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA13"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA14"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA15"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA16"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA17"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA18"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA19"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA20"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA21"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA22"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA23"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
      
        
        <column colName="GUBUN_ACC_CMPRSALE"     colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE_TOTAL2"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE9"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE10"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE11"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE12"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE13"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE14"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE15"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE16"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE17"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE18"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE19"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE20"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE21"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE22"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE23"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
       
      
        
    </gauce>
    <gauce name="H_SEL_MASTER"> 
        <column colName="STR_CD"                  colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STR_NAME"                  colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CODE"                  colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="NAME"                  colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_DT"               colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GUBUN_TOTAL"           colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_TOTAL"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE9"                 colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE10"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE11"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE12"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE13"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE14"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE15"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE16"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE17"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE18"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE19"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE20"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE21"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE22"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE23"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        
        <!-- 신장율 추가 --> 
        <column colName="GUBUN_SALEIRATE"       colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        <column colName="SALEIRATE_TOTAL"       colType="TB_DECIMAL"     size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE9"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE10"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE11"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE12"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE13"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE14"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE15"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE16"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE17"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE18"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE19"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE20"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE21"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE22"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE23"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />    
                                                
        <column colName="GUBUN_PROF"            colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF_TOTAL"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF9"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF10"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF11"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF12"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF13"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF14"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF15"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF16"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF17"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF18"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF19"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF20"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF21"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF22"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEPROF23"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                                                
        <column colName="GUBUN_CUST_CNT"        colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_CNT_TOTAL"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT9"              colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT10"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT11"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT12"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT13"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT14"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT15"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT16"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT17"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT18"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT19"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT20"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT21"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT22"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTCNT23"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
                                                
        <column colName="GUBUN_CUST_DANGA"      colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_DANGA_TOTAL"      colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA9"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA10"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA11"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA12"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA13"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA14"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA15"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA16"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA17"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA18"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA19"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA20"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA21"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA22"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUSTDANGA23"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        
        <!-- 시간대 누계 -->
        <column colName="GUBUN_ACC_SALE"        colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE_TOTAL"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE9"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE10"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE11"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE12"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE13"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE14"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE15"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE16"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE17"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE18"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE19"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE20"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE21"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE22"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALE23"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <!-- 누계신장율 -->
        <column colName="GUBUN_ACC_SALE_1"     colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE_TOTAL"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE9"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE10"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE11"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE12"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE13"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE14"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE15"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE16"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE17"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE18"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE19"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE20"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE21"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE22"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_SALEIRATE23"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
       
                                                
        <column colName="CMPR_DT"               colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="GUBUN_TOTAL_CMPR"      colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_TOTAL_CMPR"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE9"             colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE10"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE11"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE12"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE13"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE14"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE15"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE16"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE17"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE18"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE19"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE20"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE21"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE22"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALE23"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="GUBUN_PROF_CMPR"       colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF_TOTAL_CMPR"  colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF9"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF10"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF11"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF12"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF13"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF14"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF15"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF16"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF17"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF18"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF19"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF20"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF21"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF22"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRSALEPROF23"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="GUBUN_CUST_CNT_CMPR"   colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_CNT_TOTAL_CMPR"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT9"          colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT10"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT11"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT12"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT13"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT14"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT15"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT16"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT17"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT18"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT19"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT20"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT21"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT22"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTCNT23"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="GUBUN_CUST_DANGA_CMPR" colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_DANGA_TOTAL_CMPR" colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA9"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA10"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA11"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA12"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA13"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA14"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA15"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA16"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA17"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA18"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA19"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA20"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA21"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA22"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CMPRCUSTDANGA23"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
              
        <column colName="GUBUN_ACC_CMPRSALE"     colType="TB_STRING"      size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE_TOTAL2"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE9"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE10"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE11"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE12"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE13"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE14"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE15"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE16"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE17"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE18"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE19"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE20"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE21"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE22"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACC_CMPRSALE23"       colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
             
        
    </gauce>
    <gauce name="H_SEL_CMPRDT"> 
        <column colName="CMPR_DT"                 colType="TB_STRING"      size="8"        dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
    </gauce>
    
    
    <!-- 쿼리는 전부 대문자 -->
    <!-- 당초팀별월매출계획 조회 쿼리  -->
   
    <query name="SEL_TIMESALEPUMBUN_SEL">        
        <![CDATA[
	      SELECT 
	      		SUBSTR(CODE,1,2) AS STR_CD
			   , DPS.FN_GET_STORE_NAME(SUBSTR(CODE,1,2)) AS STR_NAME
			   , CODE
	           , NAME
	           , SALE_DT
	           , GUBUN_TOTAL
	           , SALE_TOTAL / ? AS SALE_TOTAL
	           , SALE9 / ?  AS SALE9
	           , SALE10 / ? AS SALE10
	           , SALE11 / ? AS SALE11
	           , SALE12 / ? AS SALE12
	           , SALE13 / ? AS SALE13
	           , SALE14 / ? AS SALE14
	           , SALE15 / ? AS SALE15
	           , SALE16 / ? AS SALE16
	           , SALE17 / ? AS SALE17
	           , SALE18 / ? AS SALE18
	           , SALE19 / ? AS SALE19
	           , SALE20 / ? AS SALE20
	           , SALE21 / ? AS SALE21
	           , SALE22 / ? AS SALE22
	           , SALE23 / ? AS SALE23
	           , GUBUN_SALEIRATE  AS GUBUN_SALEIRATE
	           , SALEIRATE_TOTAL  AS SALEIRATE_TOTAL
	           , SALEIRATE9       AS SALEIRATE9
	           , SALEIRATE10      AS SALEIRATE10
	           , SALEIRATE11      AS SALEIRATE11
	           , SALEIRATE12      AS SALEIRATE12
	           , SALEIRATE13      AS SALEIRATE13
	           , SALEIRATE14      AS SALEIRATE14
	           , SALEIRATE15      AS SALEIRATE15
	           , SALEIRATE16      AS SALEIRATE16
	           , SALEIRATE17      AS SALEIRATE17
	           , SALEIRATE18      AS SALEIRATE18
	           , SALEIRATE19      AS SALEIRATE19
	           , SALEIRATE20      AS SALEIRATE20
	           , SALEIRATE21      AS SALEIRATE21
	           , SALEIRATE22      AS SALEIRATE22
	           , SALEIRATE23      AS SALEIRATE23
	           , GUBUN_PROF
	           , SALE_PROF_TOTAL / ? AS SALE_PROF_TOTAL
	           , SALEPROF9 / ? AS SALEPROF9
	           , SALEPROF10 / ? AS SALEPROF10
	           , SALEPROF11 / ? AS SALEPROF11
	           , SALEPROF12 / ? AS SALEPROF12
	           , SALEPROF13 / ? AS SALEPROF13
	           , SALEPROF14 / ? AS SALEPROF14
	           , SALEPROF15 / ? AS SALEPROF15
	           , SALEPROF16 / ? AS SALEPROF16
	           , SALEPROF17 / ? AS SALEPROF17
	           , SALEPROF18 / ? AS SALEPROF18
	           , SALEPROF19 / ? AS SALEPROF19
	           , SALEPROF20 / ? AS SALEPROF20
	           , SALEPROF21 / ? AS SALEPROF21
	           , SALEPROF22 / ? AS SALEPROF22
	           , SALEPROF23 / ? AS SALEPROF23
	           , GUBUN_CUST_CNT
	           , CUST_CNT_TOTAL / ? AS CUST_CNT_TOTAL
	           , CUSTCNT9 / ?  AS CUSTCNT9
	           , CUSTCNT10 / ? AS CUSTCNT10
	           , CUSTCNT11 / ? AS CUSTCNT11
	           , CUSTCNT12 / ? AS CUSTCNT12
	           , CUSTCNT13 / ? AS CUSTCNT13
	           , CUSTCNT14 / ? AS CUSTCNT14
	           , CUSTCNT15 / ? AS CUSTCNT15
	           , CUSTCNT16 / ? AS CUSTCNT16
	           , CUSTCNT17 / ? AS CUSTCNT17
	           , CUSTCNT18 / ? AS CUSTCNT18
	           , CUSTCNT19 / ? AS CUSTCNT19
	           , CUSTCNT20 / ? AS CUSTCNT20
	           , CUSTCNT21 / ? AS CUSTCNT21
	           , CUSTCNT22 / ? AS CUSTCNT22
	           , CUSTCNT23 / ? AS CUSTCNT23
	           , GUBUN_CUST_DANGA
	           , ROUND(CUST_DANGA_TOTAL / ?, 1) AS CUST_DANGA_TOTAL
	           , ROUND(CUSTDANGA9 / ?,  1) AS CUSTDANGA9
	           , ROUND(CUSTDANGA10 / ?, 1) AS CUSTDANGA10
	           , ROUND(CUSTDANGA11 / ?, 1) AS CUSTDANGA11
	           , ROUND(CUSTDANGA12 / ?, 1) AS CUSTDANGA12
	           , ROUND(CUSTDANGA13 / ?, 1) AS CUSTDANGA13
	           , ROUND(CUSTDANGA14 / ?, 1) AS CUSTDANGA14
	           , ROUND(CUSTDANGA15 / ?, 1) AS CUSTDANGA15
	           , ROUND(CUSTDANGA16 / ?, 1) AS CUSTDANGA16
	           , ROUND(CUSTDANGA17 / ?, 1) AS CUSTDANGA17
	           , ROUND(CUSTDANGA18 / ?, 1) AS CUSTDANGA18
	           , ROUND(CUSTDANGA19 / ?, 1) AS CUSTDANGA19
	           , ROUND(CUSTDANGA20 / ?, 1) AS CUSTDANGA20
	           , ROUND(CUSTDANGA21 / ?, 1) AS CUSTDANGA21
	           , ROUND(CUSTDANGA22 / ?, 1) AS CUSTDANGA22
	           , ROUND(CUSTDANGA23 / ?, 1) AS CUSTDANGA23
	           , GUBUN_ACC_SALE  AS GUBUN_ACC_SALE
	           , ACC_SALE_TOTAL / ? AS ACC_SALE_TOTAL
	           , ACC_SALE9 / ?      AS ACC_SALE9
	           , ACC_SALE10 / ?     AS ACC_SALE10
	           , ACC_SALE11 / ?     AS ACC_SALE11
	           , ACC_SALE12 / ?     AS ACC_SALE12
	           , ACC_SALE13 / ?     AS ACC_SALE13
	           , ACC_SALE14 / ?     AS ACC_SALE14
	           , ACC_SALE15 / ?    AS ACC_SALE15
	           , ACC_SALE16 / ?     AS ACC_SALE16
	           , ACC_SALE17 / ?     AS ACC_SALE17
	           , ACC_SALE18 / ?     AS ACC_SALE18
	           , ACC_SALE19 / ?     AS ACC_SALE19
	           , ACC_SALE20 / ?     AS ACC_SALE20
	           , ACC_SALE21 / ?     AS ACC_SALE21
	           , ACC_SALE22 / ?     AS ACC_SALE22
	           , ACC_SALE23 / ?     AS ACC_SALE23
			   , '누계신장율'    AS GUBUN_ACC_SALE
	           , CASE WHEN ACC_CMPRSALE_TOTAL = 0 THEN 0 ELSE ROUND( ( ACC_SALE_TOTAL - ACC_CMPRSALE_TOTAL)/ACC_CMPRSALE_TOTAL*100,2) END AS ACC_SALEIRATE_TOTAL
	           , CASE WHEN ACC_CMPRSALE9      = 0 THEN 0 ELSE ROUND( ( ACC_SALE9      - ACC_CMPRSALE9     )/ACC_CMPRSALE9     *100,2) END AS ACC_SALEIRATE9
	           , CASE WHEN ACC_CMPRSALE10     = 0 THEN 0 ELSE ROUND( ( ACC_SALE10     - ACC_CMPRSALE10    )/ACC_CMPRSALE10    *100,2) END AS ACC_SALEIRATE10
	           , CASE WHEN ACC_CMPRSALE11     = 0 THEN 0 ELSE ROUND( ( ACC_SALE11     - ACC_CMPRSALE11    )/ACC_CMPRSALE11    *100,2) END AS ACC_SALEIRATE11
	           , CASE WHEN ACC_CMPRSALE12     = 0 THEN 0 ELSE ROUND( ( ACC_SALE12     - ACC_CMPRSALE12    )/ACC_CMPRSALE12    *100,2) END AS ACC_SALEIRATE12
	           , CASE WHEN ACC_CMPRSALE13     = 0 THEN 0 ELSE ROUND( ( ACC_SALE13     - ACC_CMPRSALE13    )/ACC_CMPRSALE13    *100,2) END AS ACC_SALEIRATE13
	           , CASE WHEN ACC_CMPRSALE14     = 0 THEN 0 ELSE ROUND( ( ACC_SALE14     - ACC_CMPRSALE14    )/ACC_CMPRSALE14    *100,2) END AS ACC_SALEIRATE14
	           , CASE WHEN ACC_CMPRSALE15     = 0 THEN 0 ELSE ROUND( ( ACC_SALE15     - ACC_CMPRSALE15    )/ACC_CMPRSALE15    *100,2) END AS ACC_SALEIRATE15
	           , CASE WHEN ACC_CMPRSALE16     = 0 THEN 0 ELSE ROUND( ( ACC_SALE16     - ACC_CMPRSALE16    )/ACC_CMPRSALE16    *100,2) END AS ACC_SALEIRATE16
	           , CASE WHEN ACC_CMPRSALE17     = 0 THEN 0 ELSE ROUND( ( ACC_SALE17     - ACC_CMPRSALE17    )/ACC_CMPRSALE17    *100,2) END AS ACC_SALEIRATE17
	           , CASE WHEN ACC_CMPRSALE18     = 0 THEN 0 ELSE ROUND( ( ACC_SALE18     - ACC_CMPRSALE18    )/ACC_CMPRSALE18    *100,2) END AS ACC_SALEIRATE18
	           , CASE WHEN ACC_CMPRSALE19     = 0 THEN 0 ELSE ROUND( ( ACC_SALE19     - ACC_CMPRSALE19    )/ACC_CMPRSALE19    *100,2) END AS ACC_SALEIRATE19
	           , CASE WHEN ACC_CMPRSALE20     = 0 THEN 0 ELSE ROUND( ( ACC_SALE20     - ACC_CMPRSALE20    )/ACC_CMPRSALE20    *100,2) END AS ACC_SALEIRATE20
	           , CASE WHEN ACC_CMPRSALE21     = 0 THEN 0 ELSE ROUND( ( ACC_SALE21     - ACC_CMPRSALE21    )/ACC_CMPRSALE21    *100,2) END AS ACC_SALEIRATE21
	           , CASE WHEN ACC_CMPRSALE22     = 0 THEN 0 ELSE ROUND( ( ACC_SALE22     - ACC_CMPRSALE22    )/ACC_CMPRSALE22    *100,2) END AS ACC_SALEIRATE22
	           , CASE WHEN ACC_CMPRSALE23     = 0 THEN 0 ELSE ROUND( ( ACC_SALE23     - ACC_CMPRSALE23    )/ACC_CMPRSALE23    *100,2) END AS ACC_SALEIRATE23
	           , CMPR_DT
	           , GUBUN_TOTAL_CMPR
	           , SALE_TOTAL_CMPR / ? AS SALE_TOTAL_CMPR
	           , CMPRSALE9 / ?       AS CMPRSALE9
	           , CMPRSALE10 / ?      AS CMPRSALE10
	           , CMPRSALE11 / ?      AS CMPRSALE11
	           , CMPRSALE12 / ?      AS CMPRSALE12
	           , CMPRSALE13 / ?      AS CMPRSALE13
	           , CMPRSALE14 / ?      AS CMPRSALE14
	           , CMPRSALE15 / ?      AS CMPRSALE15
	           , CMPRSALE16 / ?      AS CMPRSALE16
	           , CMPRSALE17 / ?      AS CMPRSALE17
	           , CMPRSALE18 / ?      AS CMPRSALE18
	           , CMPRSALE19 / ?      AS CMPRSALE19
	           , CMPRSALE20 / ?      AS CMPRSALE20
	           , CMPRSALE21 / ?      AS CMPRSALE21
	           , CMPRSALE22 / ?      AS CMPRSALE22
	           , CMPRSALE23 / ?      AS CMPRSALE23
	           , GUBUN_PROF_CMPR
	           , SALE_PROF_TOTAL_CMPR / ? AS SALE_PROF_TOTAL_CMPR
	           , CMPRSALEPROF9 / ?        AS CMPRSALEPROF9
	           , CMPRSALEPROF10 / ?       AS CMPRSALEPROF10
	           , CMPRSALEPROF11 / ?       AS CMPRSALEPROF11
	           , CMPRSALEPROF12 / ?       AS CMPRSALEPROF12
	           , CMPRSALEPROF13 / ?       AS CMPRSALEPROF13
	           , CMPRSALEPROF14 / ?       AS CMPRSALEPROF14
	           , CMPRSALEPROF15 / ?       AS CMPRSALEPROF15
	           , CMPRSALEPROF16 / ?       AS CMPRSALEPROF16
	           , CMPRSALEPROF17 / ?       AS CMPRSALEPROF17
	           , CMPRSALEPROF18 / ?       AS CMPRSALEPROF18
	           , CMPRSALEPROF19 / ?       AS CMPRSALEPROF19
	           , CMPRSALEPROF20 / ?       AS CMPRSALEPROF20
	           , CMPRSALEPROF21 / ?       AS CMPRSALEPROF21
	           , CMPRSALEPROF22 / ?       AS CMPRSALEPROF22
	           , CMPRSALEPROF23 / ?       AS CMPRSALEPROF23
	           , GUBUN_CUST_CNT_CMPR
	           , CUST_CNT_TOTAL_CMPR / ? AS CUST_CNT_TOTAL_CMPR
	           , CMPRCUSTCNT9 / ?        AS CMPRCUSTCNT9
	           , CMPRCUSTCNT10 / ?       AS CMPRCUSTCNT10
	           , CMPRCUSTCNT11 / ?       AS CMPRCUSTCNT11
	           , CMPRCUSTCNT12 / ?       AS CMPRCUSTCNT12
	           , CMPRCUSTCNT13 / ?       AS CMPRCUSTCNT13
	           , CMPRCUSTCNT14 / ?       AS CMPRCUSTCNT14
	           , CMPRCUSTCNT15 / ?       AS CMPRCUSTCNT15
	           , CMPRCUSTCNT16 / ?       AS CMPRCUSTCNT16
	           , CMPRCUSTCNT17 / ?       AS CMPRCUSTCNT17
	           , CMPRCUSTCNT18 / ?       AS CMPRCUSTCNT18
	           , CMPRCUSTCNT19 / ?       AS CMPRCUSTCNT19
	           , CMPRCUSTCNT20 / ?       AS CMPRCUSTCNT20
	           , CMPRCUSTCNT21 / ?       AS CMPRCUSTCNT21
	           , CMPRCUSTCNT22 / ?       AS CMPRCUSTCNT22
	           , CMPRCUSTCNT23 / ?       AS CMPRCUSTCNT23
	           , GUBUN_CUST_DANGA_CMPR
	           , ROUND(CUST_DANGA_TOTAL_CMPR / ?, 1) AS CUST_DANGA_TOTAL_CMPR
	           , ROUND(CMPRCUSTDANGA9 / ?,  1) AS CMPRCUSTDANGA9
	           , ROUND(CMPRCUSTDANGA10 / ?, 1) AS CMPRCUSTDANGA10
	           , ROUND(CMPRCUSTDANGA11 / ?, 1) AS CMPRCUSTDANGA11
	           , ROUND(CMPRCUSTDANGA12 / ?, 1) AS CMPRCUSTDANGA12
	           , ROUND(CMPRCUSTDANGA13 / ?, 1) AS CMPRCUSTDANGA13
	           , ROUND(CMPRCUSTDANGA14 / ?, 1) AS CMPRCUSTDANGA14
	           , ROUND(CMPRCUSTDANGA15 / ?, 1) AS CMPRCUSTDANGA15
	           , ROUND(CMPRCUSTDANGA16 / ?, 1) AS CMPRCUSTDANGA16
	           , ROUND(CMPRCUSTDANGA17 / ?, 1) AS CMPRCUSTDANGA17
	           , ROUND(CMPRCUSTDANGA18 / ?, 1) AS CMPRCUSTDANGA18
	           , ROUND(CMPRCUSTDANGA19 / ?, 1) AS CMPRCUSTDANGA19
	           , ROUND(CMPRCUSTDANGA20 / ?, 1) AS CMPRCUSTDANGA20
	           , ROUND(CMPRCUSTDANGA21 / ?, 1) AS CMPRCUSTDANGA21
	           , ROUND(CMPRCUSTDANGA22 / ?, 1) AS CMPRCUSTDANGA22
	           , ROUND(CMPRCUSTDANGA23 / ?, 1) AS CMPRCUSTDANGA23	
	           , GUBUN_ACC_CMPRSALE       AS GUBUN_ACC_CMPRSALE
	           , ACC_CMPRSALE_TOTAL  / ?     AS ACC_CMPRSALE_TOTAL2
	           , ACC_CMPRSALE9   / ?         AS ACC_CMPRSALE9
	           , ACC_CMPRSALE10  / ?         AS ACC_CMPRSALE10
	           , ACC_CMPRSALE11  / ?         AS ACC_CMPRSALE11
	           , ACC_CMPRSALE12  / ?         AS ACC_CMPRSALE12
	           , ACC_CMPRSALE13  / ?         AS ACC_CMPRSALE13
	           , ACC_CMPRSALE14  / ?         AS ACC_CMPRSALE14
	           , ACC_CMPRSALE15  / ?         AS ACC_CMPRSALE15
	           , ACC_CMPRSALE16  / ?         AS ACC_CMPRSALE16
	           , ACC_CMPRSALE17  / ?         AS ACC_CMPRSALE17
	           , ACC_CMPRSALE18  / ?         AS ACC_CMPRSALE18
	           , ACC_CMPRSALE19  / ?         AS ACC_CMPRSALE19
	           , ACC_CMPRSALE20  / ?         AS ACC_CMPRSALE20
	           , ACC_CMPRSALE21  / ?         AS ACC_CMPRSALE21
	           , ACC_CMPRSALE22  / ?         AS ACC_CMPRSALE22
	           , ACC_CMPRSALE23  / ?         AS ACC_CMPRSALE23           
	      FROM (  		
			  
        ]]>        
    </query>
    
        
    <query name="SEL_TIMESALEPUMBUN4">        
        <![CDATA[
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                                AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                  , PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                  , PUMBUN_CD 
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
            
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPUMBUN3">        
        <![CDATA[
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                  , PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                  , PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A  
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPUMBUN2">        
        <![CDATA[
			SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                  , PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '0000'   AS ORG_CD
                                    ,PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
    
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPUMBUN">        
        <![CDATA[
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                  , PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.PUMBUN_CD                                                                                                                      AS ORG_CD
                         , C.PUMBUN_NAME                                                                                                                    AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_STRPBN C
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                                   , PUMBUN_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.STR_CD    = C.STR_CD
                       AND A.PUMBUN_CD = C.PUMBUN_CD
                       AND A.ORG_CD    = D.ORG_CD
                       AND A.PUMBUN_CD = D.PUMBUN_CD
                     GROUP BY
                           A.PUMBUN_CD
                         , C.PUMBUN_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
            
        ]]>        
    </query>
    
    
    <query name="SEL_TIMESALEPC4">        
        <![CDATA[
   			SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
   			
   			
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPC3">        
        <![CDATA[
   			SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPC2">        
        <![CDATA[
   			 SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPC">        
        <![CDATA[
   			SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('4', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 8) || '00'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
   		
   		
        ]]>        
    </query>
    
    <query name="SEL_TIMESALETEAM4">        
        <![CDATA[
              
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A      
            
        ]]>        
    </query>
     
    
    <query name="SEL_TIMESALETEAM3">        
        <![CDATA[
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A        
            
        ]]>        
    </query>
    
   <query name="SEL_TIMESALETEAM2">        
        <![CDATA[
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A     
            
        ]]>        
    </query>
    
    <query name="SEL_TIMESALETEAM">        
        <![CDATA[
        
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('3', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 6) || '0000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A      
            
        ]]>        
    </query>
     
     
      <query name="SEL_TIMESALEDEPT4">        
        <![CDATA[
            SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
        
        
         ]]>        
    </query>
     
     <query name="SEL_TIMESALEDEPT3">        
        <![CDATA[
        	SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?  --대비기간시작일
                               AND A.SALE_DT   <= ?  --대비기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
        
        
         ]]>        
    </query>
    
     <query name="SEL_TIMESALEDEPT2">        
        <![CDATA[
        	SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
        
        
         ]]>        
    </query>
    <query name="SEL_TIMESALEDEPT">        
        <![CDATA[
           
			SELECT ORG_CD                                                                                   AS CODE
                 , ORG_NAME                                                                                 AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                             AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                          AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A
             GROUP BY
                   A.ORG_CD
                 , A.ORG_NAME
             UNION ALL
            SELECT ''                                                                                  AS CODE
                 , '합계'                                                                              AS NAME
                 , MAX(SALE_DT)                                                                             AS SALE_DT
                 , MAX(GUBUN_TOTAL)                                                                         AS GUBUN_TOTAL
                 , SUM(SALE_TOTAL)                                                                          AS SALE_TOTAL
                 , SUM(SALE9)                                                                               AS SALE9
                 , SUM(SALE10)                                                                              AS SALE10
                 , SUM(SALE11)                                                                              AS SALE11
                 , SUM(SALE12)                                                                              AS SALE12
                 , SUM(SALE13)                                                                              AS SALE13
                 , SUM(SALE14)                                                                              AS SALE14
                 , SUM(SALE15)                                                                              AS SALE15
                 , SUM(SALE16)                                                                              AS SALE16
                 , SUM(SALE17)                                                                              AS SALE17
                 , SUM(SALE18)                                                                              AS SALE18
                 , SUM(SALE19)                                                                              AS SALE19
                 , SUM(SALE20)                                                                              AS SALE20
                 , SUM(SALE21)                                                                              AS SALE21
                 , SUM(SALE22)                                                                              AS SALE22
                 , SUM(SALE23)                                                                              AS SALE23
                 , '신장율'                                                                                 AS GUBUN_SALEIRATE
                 , (CASE WHEN SUM(SALE_TOTAL_CMPR) = 0 THEN 0 ELSE ROUND(((SUM(SALE_TOTAL)- SUM(SALE_TOTAL_CMPR))/SUM(SALE_TOTAL_CMPR))*100,2) END) AS SALEIRATE_TOTAL
                 , (CASE WHEN SUM(CMPRSALE9 ) = 0 THEN 0 ELSE ROUND(((SUM(SALE9 )- SUM(NVL(CMPRSALE9 ,0)))/SUM(CMPRSALE9 ))*100,2) END)             AS SALEIRATE9
                 , (CASE WHEN SUM(CMPRSALE10) = 0 THEN 0 ELSE ROUND(((SUM(SALE10)- SUM(NVL(CMPRSALE10,0)))/SUM(CMPRSALE10))*100,2) END)             AS SALEIRATE10
                 , (CASE WHEN SUM(CMPRSALE11) = 0 THEN 0 ELSE ROUND(((SUM(SALE11)- SUM(NVL(CMPRSALE11,0)))/SUM(CMPRSALE11))*100,2) END)             AS SALEIRATE11
                 , (CASE WHEN SUM(CMPRSALE12) = 0 THEN 0 ELSE ROUND(((SUM(SALE12)- SUM(NVL(CMPRSALE12,0)))/SUM(CMPRSALE12))*100,2) END)             AS SALEIRATE12
                 , (CASE WHEN SUM(CMPRSALE13) = 0 THEN 0 ELSE ROUND(((SUM(SALE13)- SUM(NVL(CMPRSALE13,0)))/SUM(CMPRSALE13))*100,2) END)             AS SALEIRATE13
                 , (CASE WHEN SUM(CMPRSALE14) = 0 THEN 0 ELSE ROUND(((SUM(SALE14)- SUM(NVL(CMPRSALE14,0)))/SUM(CMPRSALE14))*100,2) END)             AS SALEIRATE14
                 , (CASE WHEN SUM(CMPRSALE15) = 0 THEN 0 ELSE ROUND(((SUM(SALE15)- SUM(NVL(CMPRSALE15,0)))/SUM(CMPRSALE15))*100,2) END)             AS SALEIRATE15
                 , (CASE WHEN SUM(CMPRSALE16) = 0 THEN 0 ELSE ROUND(((SUM(SALE16)- SUM(NVL(CMPRSALE16,0)))/SUM(CMPRSALE16))*100,2) END)             AS SALEIRATE16
                 , (CASE WHEN SUM(CMPRSALE17) = 0 THEN 0 ELSE ROUND(((SUM(SALE17)- SUM(NVL(CMPRSALE17,0)))/SUM(CMPRSALE17))*100,2) END)             AS SALEIRATE17
                 , (CASE WHEN SUM(CMPRSALE18) = 0 THEN 0 ELSE ROUND(((SUM(SALE18)- SUM(NVL(CMPRSALE18,0)))/SUM(CMPRSALE18))*100,2) END)             AS SALEIRATE18
                 , (CASE WHEN SUM(CMPRSALE19) = 0 THEN 0 ELSE ROUND(((SUM(SALE19)- SUM(NVL(CMPRSALE19,0)))/SUM(CMPRSALE19))*100,2) END)             AS SALEIRATE19
                 , (CASE WHEN SUM(CMPRSALE20) = 0 THEN 0 ELSE ROUND(((SUM(SALE20)- SUM(NVL(CMPRSALE20,0)))/SUM(CMPRSALE20))*100,2) END)             AS SALEIRATE20
                 , (CASE WHEN SUM(CMPRSALE21) = 0 THEN 0 ELSE ROUND(((SUM(SALE21)- SUM(NVL(CMPRSALE21,0)))/SUM(CMPRSALE21))*100,2) END)             AS SALEIRATE21
                 , (CASE WHEN SUM(CMPRSALE22) = 0 THEN 0 ELSE ROUND(((SUM(SALE22)- SUM(NVL(CMPRSALE22,0)))/SUM(CMPRSALE22))*100,2) END)             AS SALEIRATE22
                 , (CASE WHEN SUM(CMPRSALE23) = 0 THEN 0 ELSE ROUND(((SUM(SALE23)- SUM(NVL(CMPRSALE23,0)))/SUM(CMPRSALE23))*100,2) END)             AS SALEIRATE23
                 , MAX(GUBUN_PROF)                                                                     AS GUBUN_PROF
                 , SUM(SALE_PROF_TOTAL)                                                                AS SALE_PROF_TOTAL
                 , SUM(SALEPROF9)                                                                      AS SALEPROF9
                 , SUM(SALEPROF10)                                                                     AS SALEPROF10
                 , SUM(SALEPROF11)                                                                     AS SALEPROF11
                 , SUM(SALEPROF12)                                                                     AS SALEPROF12
                 , SUM(SALEPROF13)                                                                     AS SALEPROF13
                 , SUM(SALEPROF14)                                                                     AS SALEPROF14
                 , SUM(SALEPROF15)                                                                     AS SALEPROF15
                 , SUM(SALEPROF16)                                                                     AS SALEPROF16
                 , SUM(SALEPROF17)                                                                     AS SALEPROF17
                 , SUM(SALEPROF18)                                                                     AS SALEPROF18
                 , SUM(SALEPROF19)                                                                     AS SALEPROF19
                 , SUM(SALEPROF20)                                                                     AS SALEPROF20
                 , SUM(SALEPROF21)                                                                     AS SALEPROF21
                 , SUM(SALEPROF22)                                                                     AS SALEPROF22
                 , SUM(SALEPROF23)                                                                     AS SALEPROF23
                 , MAX(GUBUN_CUST_CNT)                                                                      AS GUBUN_CUST_CNT
                 , SUM(CUST_CNT_TOTAL)                                                                      AS CUST_CNT_TOTAL
                 , SUM(CUSTCNT9)                                                                            AS CUSTCNT9
                 , SUM(CUSTCNT10)                                                                           AS CUSTCNT10
                 , SUM(CUSTCNT11)                                                                           AS CUSTCNT11
                 , SUM(CUSTCNT12)                                                                           AS CUSTCNT12
                 , SUM(CUSTCNT13)                                                                           AS CUSTCNT13
                 , SUM(CUSTCNT14)                                                                           AS CUSTCNT14
                 , SUM(CUSTCNT15)                                                                           AS CUSTCNT15
                 , SUM(CUSTCNT16)                                                                           AS CUSTCNT16
                 , SUM(CUSTCNT17)                                                                           AS CUSTCNT17
                 , SUM(CUSTCNT18)                                                                           AS CUSTCNT18
                 , SUM(CUSTCNT19)                                                                           AS CUSTCNT19
                 , SUM(CUSTCNT20)                                                                           AS CUSTCNT20
                 , SUM(CUSTCNT21)                                                                           AS CUSTCNT21
                 , SUM(CUSTCNT22)                                                                           AS CUSTCNT22
                 , SUM(CUSTCNT23)                                                                           AS CUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL) = 0 THEN 0 ELSE SUM(SALE_TOTAL)/SUM(CUST_CNT_TOTAL) END) AS CUST_DANGA_TOTAL
                 , ( CASE WHEN SUM(CUSTCNT9 ) = 0 THEN 0 ELSE SUM(SALE9)/SUM(CUSTCNT9)   END)          AS CUSTDANGA9
                 , ( CASE WHEN SUM(CUSTCNT10) = 0 THEN 0 ELSE SUM(SALE10)/SUM(CUSTCNT10) END)          AS CUSTDANGA10
                 , ( CASE WHEN SUM(CUSTCNT11) = 0 THEN 0 ELSE SUM(SALE11)/SUM(CUSTCNT11) END)          AS CUSTDANGA11
                 , ( CASE WHEN SUM(CUSTCNT12) = 0 THEN 0 ELSE SUM(SALE12)/SUM(CUSTCNT12) END)          AS CUSTDANGA12
                 , ( CASE WHEN SUM(CUSTCNT13) = 0 THEN 0 ELSE SUM(SALE13)/SUM(CUSTCNT13) END)          AS CUSTDANGA13
                 , ( CASE WHEN SUM(CUSTCNT14) = 0 THEN 0 ELSE SUM(SALE14)/SUM(CUSTCNT14) END)          AS CUSTDANGA14
                 , ( CASE WHEN SUM(CUSTCNT15) = 0 THEN 0 ELSE SUM(SALE15)/SUM(CUSTCNT15) END)          AS CUSTDANGA15
                 , ( CASE WHEN SUM(CUSTCNT16) = 0 THEN 0 ELSE SUM(SALE16)/SUM(CUSTCNT16) END)          AS CUSTDANGA16
                 , ( CASE WHEN SUM(CUSTCNT17) = 0 THEN 0 ELSE SUM(SALE17)/SUM(CUSTCNT17) END)          AS CUSTDANGA17
                 , ( CASE WHEN SUM(CUSTCNT18) = 0 THEN 0 ELSE SUM(SALE18)/SUM(CUSTCNT18) END)          AS CUSTDANGA18
                 , ( CASE WHEN SUM(CUSTCNT19) = 0 THEN 0 ELSE SUM(SALE19)/SUM(CUSTCNT19) END)          AS CUSTDANGA19
                 , ( CASE WHEN SUM(CUSTCNT20) = 0 THEN 0 ELSE SUM(SALE20)/SUM(CUSTCNT20) END)          AS CUSTDANGA20
                 , ( CASE WHEN SUM(CUSTCNT21) = 0 THEN 0 ELSE SUM(SALE21)/SUM(CUSTCNT21) END)          AS CUSTDANGA21
                 , ( CASE WHEN SUM(CUSTCNT22) = 0 THEN 0 ELSE SUM(SALE22)/SUM(CUSTCNT22) END)          AS CUSTDANGA22
                 , ( CASE WHEN SUM(CUSTCNT23) = 0 THEN 0 ELSE SUM(SALE23)/SUM(CUSTCNT23) END)          AS CUSTDANGA23
                 , '시간대누계'                                                                        AS GUBUN_ACC_SALE
                 , SUM(SALE_TOTAL)                                                                     AS ACC_SALE_TOTAL
                 , SUM(SALE9)                                                                               AS ACC_SALE9
                 , SUM(SALE9)+SUM(SALE10)                                                                   AS ACC_SALE10
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)                                                       AS ACC_SALE11
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)                                           AS ACC_SALE12
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)                               AS ACC_SALE13
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)                   AS ACC_SALE14
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)       AS ACC_SALE15
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)                                                                              AS ACC_SALE16
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)                                                                  AS ACC_SALE17
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)                                                      AS ACC_SALE18
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)                                          AS ACC_SALE19
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)                              AS ACC_SALE20
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)                  AS ACC_SALE21
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)      AS ACC_SALE22
                 , SUM(SALE9)+SUM(SALE10)+SUM(SALE11)+SUM(SALE12)+SUM(SALE13)+SUM(SALE14)+SUM(SALE15)+
                   SUM(SALE16)+SUM(SALE17)+SUM(SALE18)+SUM(SALE19)+SUM(SALE20)+SUM(SALE21)+SUM(SALE22)+
                   SUM(SALE23)                                                                              AS ACC_SALE23
                 , MAX(CMPR_DT)                                                                        AS CMPR_DT
                 , MAX(GUBUN_TOTAL_CMPR)                                                               AS GUBUN_TOTAL_CMPR
                 , SUM(SALE_TOTAL_CMPR)                                                                AS SALE_TOTAL_CMPR
                 , SUM(CMPRSALE9)                                                                      AS CMPRSALE9
                 , SUM(CMPRSALE10)                                                                     AS CMPRSALE10
                 , SUM(CMPRSALE11)                                                                     AS CMPRSALE11
                 , SUM(CMPRSALE12)                                                                     AS CMPRSALE12
                 , SUM(CMPRSALE13)                                                                     AS CMPRSALE13
                 , SUM(CMPRSALE14)                                                                     AS CMPRSALE14
                 , SUM(CMPRSALE15)                                                                     AS CMPRSALE15
                 , SUM(CMPRSALE16)                                                                     AS CMPRSALE16
                 , SUM(CMPRSALE17)                                                                     AS CMPRSALE17
                 , SUM(CMPRSALE18)                                                                     AS CMPRSALE18
                 , SUM(CMPRSALE19)                                                                     AS CMPRSALE19
                 , SUM(CMPRSALE20)                                                                     AS CMPRSALE20
                 , SUM(CMPRSALE21)                                                                     AS CMPRSALE21
                 , SUM(CMPRSALE22)                                                                     AS CMPRSALE22
                 , SUM(CMPRSALE23)                                                                     AS CMPRSALE23
                 , MAX(GUBUN_PROF_CMPR)                                                                     AS GUBUN_PROF_CMPR
                 , SUM(SALE_PROF_TOTAL_CMPR)                                                           AS SALE_PROF_TOTAL_CMPR
                 , SUM(CMPRSALEPROF9)                                                                  AS CMPRSALEPROF9
                 , SUM(CMPRSALEPROF10)                                                                 AS CMPRSALEPROF10
                 , SUM(CMPRSALEPROF11)                                                                 AS CMPRSALEPROF11
                 , SUM(CMPRSALEPROF12)                                                                 AS CMPRSALEPROF12
                 , SUM(CMPRSALEPROF13)                                                                 AS CMPRSALEPROF13
                 , SUM(CMPRSALEPROF14)                                                                 AS CMPRSALEPROF14
                 , SUM(CMPRSALEPROF15)                                                                 AS CMPRSALEPROF15
                 , SUM(CMPRSALEPROF16)                                                                 AS CMPRSALEPROF16
                 , SUM(CMPRSALEPROF17)                                                                 AS CMPRSALEPROF17
                 , SUM(CMPRSALEPROF18)                                                                 AS CMPRSALEPROF18
                 , SUM(CMPRSALEPROF19)                                                                 AS CMPRSALEPROF19
                 , SUM(CMPRSALEPROF20)                                                                 AS CMPRSALEPROF20
                 , SUM(CMPRSALEPROF21)                                                                 AS CMPRSALEPROF21
                 , SUM(CMPRSALEPROF22)                                                                 AS CMPRSALEPROF22
                 , SUM(CMPRSALEPROF23)                                                                 AS CMPRSALEPROF23
                 , MAX(GUBUN_CUST_CNT_CMPR)                                                                 AS GUBUN_CUST_CNT_CMPR
                 , SUM(CUST_CNT_TOTAL_CMPR)                                                                 AS CUST_CNT_TOTAL_CMPR
                 , SUM(CMPRCUSTCNT9)                                                                        AS CMPRCUSTCNT9
                 , SUM(CMPRCUSTCNT10)                                                                       AS CMPRCUSTCNT10
                 , SUM(CMPRCUSTCNT11)                                                                       AS CMPRCUSTCNT11
                 , SUM(CMPRCUSTCNT12)                                                                       AS CMPRCUSTCNT12
                 , SUM(CMPRCUSTCNT13)                                                                       AS CMPRCUSTCNT13
                 , SUM(CMPRCUSTCNT14)                                                                       AS CMPRCUSTCNT14
                 , SUM(CMPRCUSTCNT15)                                                                       AS CMPRCUSTCNT15
                 , SUM(CMPRCUSTCNT16)                                                                       AS CMPRCUSTCNT16
                 , SUM(CMPRCUSTCNT17)                                                                       AS CMPRCUSTCNT17
                 , SUM(CMPRCUSTCNT18)                                                                       AS CMPRCUSTCNT18
                 , SUM(CMPRCUSTCNT19)                                                                       AS CMPRCUSTCNT19
                 , SUM(CMPRCUSTCNT20)                                                                       AS CMPRCUSTCNT20
                 , SUM(CMPRCUSTCNT21)                                                                       AS CMPRCUSTCNT21
                 , SUM(CMPRCUSTCNT22)                                                                       AS CMPRCUSTCNT22
                 , SUM(CMPRCUSTCNT23)                                                                       AS CMPRCUSTCNT23
                 , '객단가'                                                                                  AS GUBUN_CUST_DANGA_CMPR
                 , ( CASE WHEN SUM(CUST_CNT_TOTAL_CMPR) = 0 THEN 0 ELSE SUM(SALE_TOTAL_CMPR)/SUM(CUST_CNT_TOTAL_CMPR) END) AS CUST_DANGA_TOTAL_CMPR
                 , ( CASE WHEN SUM(CMPRCUSTCNT9)  = 0 THEN 0 ELSE SUM(CMPRSALE9)/SUM(CMPRCUSTCNT9)   END)   AS CMPRCUSTDANGA9
                 , ( CASE WHEN SUM(CMPRCUSTCNT10) = 0 THEN 0 ELSE SUM(CMPRSALE10)/SUM(CMPRCUSTCNT10) END)   AS CMPRCUSTDANGA10
                 , ( CASE WHEN SUM(CMPRCUSTCNT11) = 0 THEN 0 ELSE SUM(CMPRSALE11)/SUM(CMPRCUSTCNT11) END)   AS CMPRCUSTDANGA11
                 , ( CASE WHEN SUM(CMPRCUSTCNT12) = 0 THEN 0 ELSE SUM(CMPRSALE12)/SUM(CMPRCUSTCNT12) END)   AS CMPRCUSTDANGA12
                 , ( CASE WHEN SUM(CMPRCUSTCNT13) = 0 THEN 0 ELSE SUM(CMPRSALE13)/SUM(CMPRCUSTCNT13) END)   AS CMPRCUSTDANGA13
                 , ( CASE WHEN SUM(CMPRCUSTCNT14) = 0 THEN 0 ELSE SUM(CMPRSALE14)/SUM(CMPRCUSTCNT14) END)   AS CMPRCUSTDANGA14
                 , ( CASE WHEN SUM(CMPRCUSTCNT15) = 0 THEN 0 ELSE SUM(CMPRSALE15)/SUM(CMPRCUSTCNT15) END)   AS CMPRCUSTDANGA15
                 , ( CASE WHEN SUM(CMPRCUSTCNT16) = 0 THEN 0 ELSE SUM(CMPRSALE16)/SUM(CMPRCUSTCNT16) END)   AS CMPRCUSTDANGA16
                 , ( CASE WHEN SUM(CMPRCUSTCNT17) = 0 THEN 0 ELSE SUM(CMPRSALE17)/SUM(CMPRCUSTCNT17) END)   AS CMPRCUSTDANGA17
                 , ( CASE WHEN SUM(CMPRCUSTCNT18) = 0 THEN 0 ELSE SUM(CMPRSALE18)/SUM(CMPRCUSTCNT18) END)   AS CMPRCUSTDANGA18
                 , ( CASE WHEN SUM(CMPRCUSTCNT19) = 0 THEN 0 ELSE SUM(CMPRSALE19)/SUM(CMPRCUSTCNT19) END)   AS CMPRCUSTDANGA19
                 , ( CASE WHEN SUM(CMPRCUSTCNT20) = 0 THEN 0 ELSE SUM(CMPRSALE20)/SUM(CMPRCUSTCNT20) END)   AS CMPRCUSTDANGA20
                 , ( CASE WHEN SUM(CMPRCUSTCNT21) = 0 THEN 0 ELSE SUM(CMPRSALE21)/SUM(CMPRCUSTCNT21) END)   AS CMPRCUSTDANGA21
                 , ( CASE WHEN SUM(CMPRCUSTCNT22) = 0 THEN 0 ELSE SUM(CMPRSALE22)/SUM(CMPRCUSTCNT22) END)   AS CMPRCUSTDANGA22
                 , ( CASE WHEN SUM(CMPRCUSTCNT23) = 0 THEN 0 ELSE SUM(CMPRSALE23)/SUM(CMPRCUSTCNT23) END)   AS CMPRCUSTDANGA23
                 , '시간대누계'                                                                                                      AS GUBUN_ACC_CMPRSALE
                 , SUM(SALE_TOTAL_CMPR)                                                                                              AS ACC_CMPRSALE_TOTAL
                 , SUM(CMPRSALE9)                                                                                                    AS ACC_CMPRSALE9
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)                                                                                    AS ACC_CMPRSALE10
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)                                                                    AS ACC_CMPRSALE11
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)                                                    AS ACC_CMPRSALE12
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)                                    AS ACC_CMPRSALE13
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)                    AS ACC_CMPRSALE14
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)    AS ACC_CMPRSALE15
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)                                                                                                   AS ACC_CMPRSALE16
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)                                                                                   AS ACC_CMPRSALE17
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)                                                                   AS ACC_CMPRSALE18
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)                                                   AS ACC_CMPRSALE19
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)                                   AS ACC_CMPRSALE20
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)                   AS ACC_CMPRSALE21
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)   AS ACC_CMPRSALE22
                 , SUM(CMPRSALE9)+SUM(CMPRSALE10)+SUM(CMPRSALE11)+SUM(CMPRSALE12)+SUM(CMPRSALE13)+SUM(CMPRSALE14)+SUM(CMPRSALE15)+
                   SUM(CMPRSALE16)+SUM(CMPRSALE17)+SUM(CMPRSALE18)+SUM(CMPRSALE19)+SUM(CMPRSALE20)+SUM(CMPRSALE21)+SUM(CMPRSALE22)+
                   SUM(CMPRSALE23)                                                                              AS ACC_CMPRSALE23
              FROM (
                    SELECT A.ORG_CD
                         , B.ORG_SHORT_NAME                                                                                                                 AS ORG_NAME
                         , '매출일'                                                                                                                         AS SALE_DT
                         , '매출'                                                                                                                           AS GUBUN_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END)                                                          AS SALE_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )                               AS SALE9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END )     AS SALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS SALEPROF9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS SALEPROF23
                         , '구매객수'                                                                                                                       AS GUBUN_CUST_CNT
                         , (CASE WHEN A.GUBUN = '매출일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                            AS CUST_CNT_TOTAL
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                               AS CUSTCNT9
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT10
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT11
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT12
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT13
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT14
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT15
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT16
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT17
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT18
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT19
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT20
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT21
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT22
                         , ( CASE WHEN A.GUBUN = '매출일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )     AS CUSTCNT23
                         , '대비일'                                                                                                                  AS CMPR_DT
                         , '매출'                                                                                                                    AS GUBUN_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  THEN SUM(A.SALE_AMT) ELSE 0 END)                                                          AS SALE_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(A.SALE_AMT) ELSE 0 END ) AS CMPRSALE9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_AMT,0)) ELSE 0 END ) AS CMPRSALE23
                         , '이익'                                                                                                                           AS GUBUN_PROF_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END)                                                       AS SALE_PROF_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME < '1000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END )                           AS CMPRSALEPROF9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.SALE_PROF_AMT,0)) ELSE 0 END ) AS CMPRSALEPROF23
                         , '구매객수'                                                                                                                   AS GUBUN_CUST_CNT_CMPR
                         , (CASE WHEN A.GUBUN = '대비일' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END)                                                        AS CUST_CNT_TOTAL_CMPR
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME < '1000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END )                           AS CMPRCUSTCNT9
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1000' AND A.SALE_TIME < '1100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT10
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1100' AND A.SALE_TIME < '1200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT11
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1200' AND A.SALE_TIME < '1300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT12
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1300' AND A.SALE_TIME < '1400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT13
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1400' AND A.SALE_TIME < '1500' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT14
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1500' AND A.SALE_TIME < '1600' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT15
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1600' AND A.SALE_TIME < '1700' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT16
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1700' AND A.SALE_TIME < '1800' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT17
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1800' AND A.SALE_TIME < '1900' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT18
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '1900' AND A.SALE_TIME < '2000' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT19
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2000' AND A.SALE_TIME < '2100' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT20
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2100' AND A.SALE_TIME < '2200' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT21
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2200' AND A.SALE_TIME < '2300' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT22
                         , ( CASE WHEN A.GUBUN = '대비일'  AND  A.SALE_TIME >= '2300' AND A.SALE_TIME < '2400' THEN SUM(NVL(A.CUST_CNT,0)) ELSE 0 END ) AS CMPRCUSTCNT23
                      FROM (
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '매출일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT)                   AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                             WHERE A.STR_CD    LIKE ? || '%'
                               AND A.SALE_DT   >= ?   --매출기간시작일
                               AND A.SALE_DT   <= ?   --매출기간종료일
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                             UNION ALL
                            SELECT B.STR_CD
                                 , DPS.FN_GET_PBNORGCD('2', B.STR_CD, B.PUMBUN_CD, ?) ORG_CD
                                 , B.PUMBUN_CD
                                 , '대비일'                               AS GUBUN
                                 , A.SALE_TIME                            AS SALE_TIME
                                 , SUM(A.NORM_SALE_AMT       )            AS SALE_AMT
                                 , SUM(SUM(A.NORM_SALE_AMT)) OVER ( ORDER BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME) AS ACC_SALE_AMT
                                 , SUM(NVL(A.SALE_PROF_AMT,0))            AS SALE_PROF_AMT
                                 , SUM(A.CUST_CNT)                        AS CUST_CNT
                              FROM DPS.PS_TIMEPBN A
                                 , DPS.PC_STRPBN B
                                 , DPS.PS_SCHEDULE C
                             WHERE C.STR_CD    LIKE ? || '%'
                               AND C.SALE_DT   >= ?  --매출기간시작일
                               AND C.SALE_DT   <= ?  --매출기간종료일
                               AND A.STR_CD    = C.STR_CD
                               AND A.SALE_DT   = C.CMPR_DT
                               AND B.STR_CD    = A.STR_CD
                               AND B.PUMBUN_CD = A.PUMBUN_CD
	                           AND NOT EXISTS (
	                                            SELECT *
	                                              FROM COM.TC_COMMCODE
	                                             WHERE SYS_PART   = 'D'
	                                               AND COMM_PART  = 'D213'
	                                               AND USE_YN     = 'Y'
	                                               AND REFER_CODE = A.STR_CD
	                                               AND COMM_CODE  = A.PUMBUN_CD
	                                          )
                             GROUP BY B.STR_CD, B.PUMBUN_CD, A.SALE_TIME
                           )   A
                         , DPS.PC_ORGMST B
                         , (
                             SELECT DISTINCT
                                    SUBSTR(ORG_CD, 1, 4) || '000000'   AS ORG_CD
                               FROM COM.V_MYORG
                              WHERE STR_CD    LIKE ? || '%'
                                AND DEPT_CD LIKE ? || '%'
                                AND TEAM_CD LIKE ? || '%'
                                AND PC_CD   LIKE ? || '%'
                                AND USER_ID  = ?
                                AND ORG_FLAG = ?
                           ) D
                     WHERE A.ORG_CD = B.ORG_CD
                       AND A.ORG_CD = D.ORG_CD
                     GROUP BY
                           A.ORG_CD
                         , B.ORG_SHORT_NAME
                         , A.SALE_TIME
                         , A.GUBUN
                   ) A   
        ]]>        
    </query>
    
    <query name="SEL_TIMESALEPUMBUN_ORDERBY">        
        <![CDATA[
                   ) A
             ORDER BY
                   A.CODE
        ]]>        
    </query>
    
  <!--   <query name="SEL_CMPRDT">        
        <![CDATA[
            SELECT CMPR_DT
              FROM DPS.PS_SCHEDULE
             WHERE STR_CD  = ?
               AND SALE_DT = ?
        ]]>        
    </query> -->
    <query name="SEL_CMPRDT">        
        <![CDATA[
                 
          SELECT NVL(MAX(CMPR_DT), TO_CHAR(ADD_MONTHS(TO_DATE(?, 'YYYYMMDD'),-12), 'YYYYMMDD'))
              FROM DPS.PS_SCHEDULE
             WHERE STR_CD  = ?
               AND SALE_DT = ?       
        ]]>        
    </query>
    
</service>