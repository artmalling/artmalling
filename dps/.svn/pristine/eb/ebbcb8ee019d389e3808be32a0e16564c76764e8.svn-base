<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 이재득
 * 회 사 명 : FKSS
 * 작 성 일 : 2010.05.19
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  기간별 수불장 현황(단품)을 조회한다.
 -->
<service name="/pstk302.pt">
  
  <gauce name="H_SEL_SKUQTY">  
        <column colName="PUMBUN_CD"             colType="TB_STRING"   size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PUMBUN_NAME"           colType="TB_STRING"   size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_CD"                colType="TB_STRING"   size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_NAME"              colType="TB_STRING"   size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_DT"                colType="TB_STRING"   size="8"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BASE_QTY"              colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="BUY_QTY"               colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="RFD_QTY"               colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BORROW_QTY"            colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="LEND_QTY"              colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRI_QTY"              colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRO_QTY"              colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
           
        <column colName="SALE_PRC_UP_BF_QTY"    colType="TB_DECIMAL"  size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PRC_DOWN_AF_QTY"  colType="TB_DECIMAL"  size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        
        <column colName="SALE_QTY"              colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_ADJ_QTY"           colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SRVY_E_QTY"            colType="TB_INT"      size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="DAY_FLAG"              colType="TB_STRING"   size="1"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
  </gauce> 
  
  <gauce name="H_SEL_SKUAMT">              
        <column colName="PUMBUN_CD"             colType="TB_STRING"   size="6"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PUMBUN_NAME"           colType="TB_STRING"   size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_CD"                 colType="TB_STRING"  size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_NAME"               colType="TB_STRING"  size="40"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_DT"                 colType="TB_STRING"  size="8"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BASE_AMT"               colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BASE_GAP_AMT"           colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />       
        <column colName="BUY_SALE_AMT"           colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BUY_GAP_AMT"            colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="RFD_SALE_AMT"           colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="RFD_GAP_AMT"            colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="BORROW_SALE_AMT"        colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="BORROW_GAP_AMT"         colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="LEND_SALE_AMT"          colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="LEND_GAP_AMT"           colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />        
        <column colName="STRI_SALE_AMT"          colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STRI_GAP_AMT"           colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STRO_SALE_AMT"          colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STRO_GAP_AMT"           colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        
        <column colName="SALE_PRC_UP_BF_AMT"     colType="TB_DECIMAL"  size="13"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PRC_DOWN_AF_AMT"   colType="TB_DECIMAL"  size="13"  dec="0" keyType="TB_NORMAL" roundMode="ROUND" />  
        
        <column colName="SALE_SALE_AMT"          colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="DC_AMT"                 colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STK_ADJ_SALE_AMT"       colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="STK_ADJ_GAP_AMT"        colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SRVY_E_AMT"             colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SRVY_E_GAP_AMT"         colType="TB_INT"     size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="DAY_FLAG"               colType="TB_STRING"  size="1"    dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
                 
        <column colName="SALE_COST_AMT"          colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF"              colType="TB_DECIMAL" size="13"   dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="SALE_PROF_RATE"         colType="TB_DECIMAL" size="7"    dec="2" keyType="TB_NORMAL" roundMode="ROUND" />       
  </gauce> 
  
    <!-- 쿼리는 전부 대문자 -->
    <!-- 수량기준 수불장 일별 조회 쿼리  -->
    <query name="SEL_SKUDAY_QTY">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD)                          AS SKU_NAME 
                 , A.STK_DT                                              AS STK_DT
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0))   AS BASE_QTY
                 , SUM(NVL(A.BUY_QTY,0))                                 AS BUY_QTY
                 , SUM(NVL(A.RFD_QTY,0))                                 AS RFD_QTY
                 , SUM(NVL(A.BORROW_QTY,0))                              AS BORROW_QTY
                 , SUM(NVL(A.LEND_QTY,0))                                AS LEND_QTY
                 , SUM(NVL(A.STRI_QTY,0))                                AS STRI_QTY
                 , SUM(NVL(A.STRO_QTY,0))                                AS STRO_QTY
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_QTY,0))                      AS SALE_PRC_UP_BF_QTY
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_QTY,0))                    AS SALE_PRC_DOWN_AF_QTY
                 
                 , SUM(NVL(A.SALE_QTY,0))                                AS SALE_QTY
                 , SUM(NVL(A.STK_ADJ_QTY,0))                             AS STK_ADJ_QTY
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0)) + SUM(NVL(A.BUY_QTY,0)) - SUM(NVL(A.RFD_QTY,0)) 
                     + SUM(NVL(A.BORROW_QTY,0)) - SUM(NVL(A.LEND_QTY,0)) + SUM(NVL(A.STRI_QTY,0)) - SUM(NVL(A.STRO_QTY,0)) 
                     + SUM(NVL(A.STK_ADJ_QTY,0)) - SUM(NVL(A.SALE_QTY,0)) AS  SRVY_E_QTY 
                 , ''                                                    AS DAY_FLAG               
              FROM DPS.PC_PBNMST PBN
                 , (SELECT SKU.STR_CD
                         , SKU.SKU_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , SKU.PUMBUN_CD
                         , SKU.PUMMOK_CD
                         , SKU.STK_DT
                         , SUM(NVL(SMT.CAO_QTY,0))  AS BASE_QTY
                         , (SELECT SUM(NVL(BUY_TOT_QTY,0) - NVL(SALE_QTY,0) + NVL(STK_ADJ_QTY,0))
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND SKU.STK_DT - 1
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)       AS BASE_DAY_QTY              
                         , SUM(NVL(SKU.BUY_QTY,0))              AS BUY_QTY
                         , SUM(NVL(SKU.RFD_QTY,0))              AS RFD_QTY
                         , SUM(NVL(SKU.BORROW_QTY,0))           AS BORROW_QTY
                         , SUM(NVL(SKU.LEND_QTY,0))             AS LEND_QTY
                         , SUM(NVL(SKU.STRI_QTY,0))             AS STRI_QTY
                         , SUM(NVL(SKU.STRO_QTY,0))             AS STRO_QTY
                         , SUM(NVL(SKU.SALE_PRC_UP_BF_QTY,0))   AS SALE_PRC_UP_BF_QTY
                         , SUM(NVL(SKU.SALE_PRC_DOWN_AF_QTY,0)) AS SALE_PRC_DOWN_AF_QTY
                         , SUM(NVL(SKU.STK_ADJ_QTY,0))          AS STK_ADJ_QTY
                         , SUM(NVL(SKU.SALE_QTY,0))             AS SALE_QTY              
                      FROM DPS.PT_SKUDAY SKU
                         , DPS.PT_SKUMONTH SMT
                     WHERE SKU.STR_CD = SMT.STR_CD(+)
                       AND SUBSTR(SKU.STK_DT, 0 , 6) = SMT.STK_YM(+)
                       AND SKU.SKU_CD = SMT.SKU_CD (+)
                       AND SKU.STR_CD = ?
                       AND SKU.STK_DT BETWEEN ? AND ?
                       AND SMT.STK_YM (+) = ?
                       GROUP BY SKU.STR_CD
                              , SKU.SKU_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , SKU.PUMBUN_CD
                              , SKU.PUMMOK_CD
                              , SKU.STK_DT
                      ) A
             WHERE A.PUMBUN_CD   = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD      = ?
               AND A.DEPT_CD     = ?
               AND A.TEAM_CD     = ?
               AND A.PC_CD       = ? 
               AND A.STK_DT BETWEEN ? AND ?
        ]]>    
    </query>
    
    <!-- 수량기준 수불장 누계 조회 쿼리  -->
    <query name="SEL_SKUDAY_QTY_TOTAL">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD)                          AS SKU_NAME 
                 , ''                                                    AS STK_DT
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0))   AS BASE_QTY
                 , SUM(NVL(A.BUY_QTY,0))                                 AS BUY_QTY
                 , SUM(NVL(A.RFD_QTY,0))                                 AS RFD_QTY
                 , SUM(NVL(A.BORROW_QTY,0))                              AS BORROW_QTY
                 , SUM(NVL(A.LEND_QTY,0))                                AS LEND_QTY
                 , SUM(NVL(A.STRI_QTY,0))                                AS STRI_QTY
                 , SUM(NVL(A.STRO_QTY,0))                                AS STRO_QTY
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_QTY,0))                      AS SALE_PRC_UP_BF_QTY
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_QTY,0))                    AS SALE_PRC_DOWN_AF_QTY
                 
                 , SUM(NVL(A.SALE_QTY,0))                                AS SALE_QTY
                 , SUM(NVL(A.STK_ADJ_QTY,0))                             AS STK_ADJ_QTY
                 , SUM(NVL(A.BASE_QTY,0)) + SUM(NVL(A.BASE_DAY_QTY,0)) + SUM(NVL(A.BUY_QTY,0)) - SUM(NVL(A.RFD_QTY,0)) 
                     + SUM(NVL(A.BORROW_QTY,0)) - SUM(NVL(A.LEND_QTY,0)) + SUM(NVL(A.STRI_QTY,0)) - SUM(NVL(A.STRO_QTY,0)) 
                     + SUM(NVL(A.STK_ADJ_QTY,0)) - SUM(NVL(A.SALE_QTY,0)) AS  SRVY_E_QTY
                 , '1'                                                    AS DAY_FLAG                
              FROM DPS.PC_PBNMST PBN
                 , (SELECT SKU.STR_CD
                         , SKU.SKU_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , SKU.PUMBUN_CD
                         , SKU.PUMMOK_CD
                         , SKU.STK_DT
                         , SUM(NVL(SMT.CAO_QTY,0))  AS BASE_QTY
                         , (SELECT SUM(NVL(BUY_TOT_QTY,0) - NVL(SALE_QTY,0) + NVL(STK_ADJ_QTY,0))
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND SKU.STK_DT     = ?
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)       AS BASE_DAY_QTY              
                         , SUM(NVL(SKU.BUY_QTY,0))              AS BUY_QTY
                         , SUM(NVL(SKU.RFD_QTY,0))              AS RFD_QTY
                         , SUM(NVL(SKU.BORROW_QTY,0))           AS BORROW_QTY
                         , SUM(NVL(SKU.LEND_QTY,0))             AS LEND_QTY
                         , SUM(NVL(SKU.STRI_QTY,0))             AS STRI_QTY
                         , SUM(NVL(SKU.STRO_QTY,0))             AS STRO_QTY
                         , SUM(NVL(SKU.SALE_PRC_UP_BF_QTY,0))   AS SALE_PRC_UP_BF_QTY
                         , SUM(NVL(SKU.SALE_PRC_DOWN_AF_QTY,0)) AS SALE_PRC_DOWN_AF_QTY
                         , SUM(NVL(SKU.STK_ADJ_QTY,0))          AS STK_ADJ_QTY
                         , SUM(NVL(SKU.SALE_QTY,0))             AS SALE_QTY              
                      FROM DPS.PT_SKUDAY SKU
                         , DPS.PT_SKUMONTH SMT
                     WHERE SKU.STR_CD = SMT.STR_CD(+)
                       AND SUBSTR(SKU.STK_DT, 0 , 6) = SMT.STK_YM(+)
                       AND SKU.SKU_CD = SMT.SKU_CD (+)
                       AND SKU.STR_CD = ?
                       AND SKU.STK_DT BETWEEN ? AND ?
                       AND SMT.STK_YM (+) = ?
                       GROUP BY SKU.STR_CD
                              , SKU.SKU_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , SKU.PUMBUN_CD
                              , SKU.PUMMOK_CD
                              , SKU.STK_DT
                      ) A
             WHERE A.PUMBUN_CD   = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD      = ?
               AND A.DEPT_CD     = ?
               AND A.TEAM_CD     = ?
               AND A.PC_CD       = ?
               AND A.STK_DT BETWEEN ? AND ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_WHERE_PUMBUN_CD">
        <![CDATA[ 
               AND A.PUMBUN_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_WHERE_PUMMOK_CD">
        <![CDATA[ 
               AND A.PUMMOK_CD   = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_WHERE_SKU_CD">
        <![CDATA[
               AND A.SKU_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_WHERE_BIZFLAG">
        <![CDATA[
               AND PBN.BIZ_FLAG = ?
        ]]>    
    </query>
    
    <!-- 수량기준 수불장 일별 그룹  -->
    <query name="SEL_SKUDAY_QTY_GROUP">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.SKU_CD
                   , A.STK_DT
        ]]>    
    </query>
    
    <!-- 수량기준 수불장 누계 그룹  -->
    <query name="SEL_SKUDAY_QTY_GROUP_TOTAL">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.SKU_CD
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
                   , A.SKU_CD
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_QTY_DAY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
                   , A.SKU_CD
                   , A.STK_DT
        ]]>    
    </query>
    <!--  금액기준(세포함) 수불장 일별 조회 쿼리  -->
    <query name="SEL_SKUDAY_AMT">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD)       AS SKU_NAME 
                 , A.STK_DT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))         AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))          AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))         AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))          AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))      AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))       AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))        AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))         AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))        AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))         AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))        AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))         AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))        AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))               AS DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0))     AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))      AS STK_ADJ_GAP_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) 
                     + SUM(NVL(A.BORROW_SALE_AMT,0)) - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) 
                     - SUM(NVL(A.STRO_SALE_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                     AS SRVY_E_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) + SUM(NVL(A.BUY_GAP_AMT,0)) 
                     - SUM(NVL(A.RFD_GAP_AMT,0)) + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) 
                     + SUM(NVL(A.STRI_GAP_AMT,0)) - SUM(NVL(A.STRO_GAP_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0)) AS SRVY_E_GAP_AMT 
                 , ''                             AS DAY_FLAG  
                              
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT SKU.STR_CD
                         , SKU.SKU_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , SKU.PUMBUN_CD
                         , SKU.PUMMOK_CD
                         , SKU.STK_DT
                         , SUM(NVL(SMT.CAO_SALE_AMT,0))    AS BASE_AMT 
                         , SUM(NVL(SMT.CAO_COST_AMT,0))    AS BASE_COST_AMT
                         , (SELECT SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0))       
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND SKU.STK_DT - 1
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                      AS BASE_DAY_AMT 
                         , ( SELECT SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))     
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND SKU.STK_DT - 1
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                      AS BASE_COST_DAY_AMT 
                         , SUM(NVL(SKU.BUY_SALE_AMT,0))                                        AS BUY_SALE_AMT
                         , SUM(NVL(SKU.BUY_SALE_AMT,0))    - SUM(NVL(SKU.BUY_COST_AMT,0))      AS BUY_GAP_AMT
                         , SUM(NVL(SKU.RFD_SALE_AMT,0))                                        AS RFD_SALE_AMT
                         , SUM(NVL(SKU.RFD_SALE_AMT,0))    - SUM(NVL(SKU.RFD_COST_AMT,0))      AS RFD_GAP_AMT
                         , SUM(NVL(SKU.BORROW_SALE_AMT,0))                                     AS BORROW_SALE_AMT
                         , SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0))   AS BORROW_GAP_AMT
                         , SUM(NVL(SKU.LEND_SALE_AMT,0))                                       AS LEND_SALE_AMT
                         , SUM(NVL(SKU.LEND_SALE_AMT,0))   - SUM(NVL(SKU.LEND_COST_AMT,0))     AS LEND_GAP_AMT
                         , SUM(NVL(SKU.STRI_SALE_AMT,0))                                       AS STRI_SALE_AMT
                         , SUM(NVL(SKU.STRI_SALE_AMT,0))   - SUM(NVL(SKU.STRI_COST_AMT,0))     AS STRI_GAP_AMT 
                         , SUM(NVL(SKU.STRO_SALE_AMT,0))                                       AS STRO_SALE_AMT
                         , SUM(NVL(SKU.STRO_SALE_AMT,0))   - SUM(NVL(SKU.STRO_COST_AMT,0))     AS STRO_GAP_AMT
                         
                         , SUM(NVL(SKU.SALE_PRC_UP_BF_AMT,0))                                  AS SALE_PRC_UP_BF_AMT
                         , SUM(NVL(SKU.SALE_PRC_DOWN_AF_AMT,0))                                AS SALE_PRC_DOWN_AF_AMT
                         
                         , SUM(NVL(SKU.STK_ADJ_SALE_AMT,0))                                    AS STK_ADJ_SALE_AMT
                         , SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0)) AS STK_ADJ_GAP_AMT
                         , SUM(NVL(SKU.SALE_SALE_AMT,0))   - SUM(NVL(SKU.REDU_AMT,0))          AS SALE_SALE_AMT
                         , SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - SUM(NVL(SKU.SALE_COST_AMT,0))     AS SALE_GAP_AMT
                         , SUM(NVL(SKU.DC_AMT,0))                                              AS DC_AMT
                         
                         , SUM(NVL(SKU.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN SP.TAX_FLAG = 1 THEN 
                            (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN SP.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                           
                      FROM DPS.PT_SKUDAY SKU
                         , DPS.PT_SKUMONTH SMT
                         , DPS.PC_PBNMST   SP
                     WHERE SKU.STR_CD = SMT.STR_CD(+)
                       AND SUBSTR(SKU.STK_DT, 0 , 6) = SMT.STK_YM(+)
                       AND SKU.SKU_CD = SMT.SKU_CD (+)
                       AND SKU.PUMBUN_CD = SP.PUMBUN_CD
                       AND SKU.STR_CD = ?
                       AND SKU.STK_DT BETWEEN ? AND ?
                       AND SMT.STK_YM (+) = ?
                       GROUP BY SKU.STR_CD
                              , SKU.SKU_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , SKU.PUMBUN_CD
                              , SKU.PUMMOK_CD
                              , SKU.STK_DT
                              , SP.TAX_FLAG
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD    = ?
               AND A.DEPT_CD   = ?
               AND A.TEAM_CD   = ?
               AND A.PC_CD     = ?
               AND A.STK_DT BETWEEN ? AND ?
                
        ]]>    
    </query>
    
    <!--  금액기준(세포함) 수불장 누계 조회 쿼리  -->
    <query name="SEL_SKUDAY_AMT_TOTAL">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD)       AS SKU_NAME 
                 , ''                                 AS STK_DT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))         AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))          AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))         AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))          AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))      AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))       AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))        AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))         AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))        AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))         AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))        AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))         AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))        AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))               AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0))     AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))      AS STK_ADJ_GAP_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) 
                     + SUM(NVL(A.BORROW_SALE_AMT,0)) - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) 
                     - SUM(NVL(A.STRO_SALE_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                     AS SRVY_E_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) + SUM(NVL(A.BUY_GAP_AMT,0)) 
                     - SUM(NVL(A.RFD_GAP_AMT,0)) + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) 
                     + SUM(NVL(A.STRI_GAP_AMT,0)) - SUM(NVL(A.STRO_GAP_AMT,0)) - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0)) AS SRVY_E_GAP_AMT 
                 , '1'                            AS DAY_FLAG                 
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT SKU.STR_CD
                         , SKU.SKU_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , SKU.PUMBUN_CD
                         , SKU.PUMMOK_CD
                         , SKU.STK_DT
                         , SUM(NVL(SMT.CAO_SALE_AMT,0))    AS BASE_AMT 
                         , SUM(NVL(SMT.CAO_COST_AMT,0))    AS BASE_COST_AMT
                         , (SELECT SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0))       
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND SKU.STK_DT     = ?
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                      AS BASE_DAY_AMT 
                         , ( SELECT SUM(NVL(BUY_TOT_COST_AMT,0) - NVL(SALE_COST_AMT,0) + NVL(STK_ADJ_COST_AMT,0))     
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND SKU.STK_DT     = ?
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                      AS BASE_COST_DAY_AMT 
                         , SUM(NVL(SKU.BUY_SALE_AMT,0))                                        AS BUY_SALE_AMT
                         , SUM(NVL(SKU.BUY_SALE_AMT,0))    - SUM(NVL(SKU.BUY_COST_AMT,0))      AS BUY_GAP_AMT
                         , SUM(NVL(SKU.RFD_SALE_AMT,0))                                        AS RFD_SALE_AMT
                         , SUM(NVL(SKU.RFD_SALE_AMT,0))    - SUM(NVL(SKU.RFD_COST_AMT,0))      AS RFD_GAP_AMT
                         , SUM(NVL(SKU.BORROW_SALE_AMT,0))                                     AS BORROW_SALE_AMT
                         , SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0))   AS BORROW_GAP_AMT
                         , SUM(NVL(SKU.LEND_SALE_AMT,0))                                       AS LEND_SALE_AMT
                         , SUM(NVL(SKU.LEND_SALE_AMT,0))   - SUM(NVL(SKU.LEND_COST_AMT,0))     AS LEND_GAP_AMT
                         , SUM(NVL(SKU.STRI_SALE_AMT,0))                                       AS STRI_SALE_AMT
                         , SUM(NVL(SKU.STRI_SALE_AMT,0))   - SUM(NVL(SKU.STRI_COST_AMT,0))     AS STRI_GAP_AMT 
                         , SUM(NVL(SKU.STRO_SALE_AMT,0))                                       AS STRO_SALE_AMT
                         , SUM(NVL(SKU.STRO_SALE_AMT,0))   - SUM(NVL(SKU.STRO_COST_AMT,0))     AS STRO_GAP_AMT
                         
                         , SUM(NVL(SKU.SALE_PRC_UP_BF_AMT,0))                                  AS SALE_PRC_UP_BF_AMT
                         , SUM(NVL(SKU.SALE_PRC_DOWN_AF_AMT,0))                                AS SALE_PRC_DOWN_AF_AMT
                         
                         , SUM(NVL(SKU.STK_ADJ_SALE_AMT,0))                                    AS STK_ADJ_SALE_AMT
                         , SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0)) AS STK_ADJ_GAP_AMT
                         , SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0))            AS SALE_SALE_AMT
                         , SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - SUM(NVL(SKU.SALE_COST_AMT,0))     AS SALE_GAP_AMT
                         , SUM(NVL(SKU.DC_AMT,0))                                              AS DC_AMT
                         
                         , SUM(NVL(SKU.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN SP.TAX_FLAG = 1 THEN 
                            (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN SP.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                           
                      FROM DPS.PT_SKUDAY SKU
                         , DPS.PT_SKUMONTH SMT
                         , DPS.PC_PBNMST   SP
                     WHERE SKU.STR_CD = SMT.STR_CD(+)
                       AND SUBSTR(SKU.STK_DT, 0 , 6) = SMT.STK_YM(+)
                       AND SKU.SKU_CD = SMT.SKU_CD (+)
                       AND SKU.PUMBUN_CD = SP.PUMBUN_CD
                       AND SKU.STR_CD = ?
                       AND SKU.STK_DT BETWEEN ? AND ?
                       AND SMT.STK_YM (+) = ?
                       GROUP BY SKU.STR_CD
                              , SKU.SKU_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , SKU.PUMBUN_CD
                              , SKU.PUMMOK_CD
                              , SKU.STK_DT
                              , SP.TAX_FLAG
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD    = ?
               AND A.DEPT_CD   = ?
               AND A.TEAM_CD   = ?
               AND A.PC_CD     = ?
               AND A.STK_DT BETWEEN ? AND ?
                
        ]]>    
    </query>
    
    <!--  금액기준(세제외) 수불장 일별 조회 쿼리  -->
    <query name="SEL_SKUDAY_TAX_AMT">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD) SKU_NAME 
                 , A.STK_DT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))         AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))          AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))         AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))          AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))      AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))       AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))        AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))         AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))        AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))         AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))        AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))         AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))        AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))               AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0))     AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))      AS STK_ADJ_GAP_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) 
                     + SUM(NVL(A.BORROW_SALE_AMT,0)) - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                                                             AS SRVY_E_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) 
                     + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) 
                     + SUM(NVL(A.STRI_GAP_AMT,0)) - SUM(NVL(A.STRO_GAP_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0))     AS SRVY_E_GAP_AMT
                 , ''                             AS DAY_FLAG                  
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT SKU.STR_CD
                         , SKU.SKU_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , SKU.PUMBUN_CD    
                         , SKU.PUMMOK_CD
                         , PBN.TAX_FLAG
                         , SKU.STK_DT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_SALE_AMT,0)) - SUM(NVL(CAO_SALE_AMT,0)) * 0.1 , 0)                                                
                               ELSE   
                                    SUM(NVL(CAO_SALE_AMT,0))                              
                           END  AS BASE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_COST_AMT,0)) - SUM(NVL(CAO_COST_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(CAO_COST_AMT,0))                              
                           END  AS BASE_COST_AMT
                         , (SELECT CASE WHEN TAX_FLAG = 1 THEN
                                         TRUNC(SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0)) - (SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0))) * 0.1 , 0)                                                
                                    ELSE   
                                         SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0))
                                    END AS BASE_AMT
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND SKU.STK_DT - 1
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                 AS BASE_DAY_AMT 
                         , ( SELECT CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)) - (SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                    
                                    ELSE   
                                         SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))     
                                    END AS BASE_COST_AMT
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND SKU.STK_DT - 1
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                 AS BASE_COST_DAY_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_SALE_AMT,0)) * 0.1 , 0)                                                     
                               ELSE   
                                    SUM(NVL(SKU.BUY_SALE_AMT,0))                               
                           END AS BUY_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_COST_AMT,0)) - (SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_COST_AMT,0))                               
                           END AS BUY_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_SALE_AMT,0)) * 0.1 , 0)                                                                                     
                               ELSE   
                                    SUM(NVL(SKU.RFD_SALE_AMT,0))                               
                           END AS RFD_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_COST_AMT,0)) - (SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_COST_AMT,0))) * 0.1 , 0)                                                               
                               ELSE   
                                    SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_COST_AMT,0))                              
                           END AS RFD_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_SALE_AMT,0)) * 0.1 , 0)                                                                                
                               ELSE   
                                    SUM(NVL(SKU.BORROW_SALE_AMT,0))                              
                           END AS BORROW_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0)) - (SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0))                               
                           END AS BORROW_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_SALE_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(SKU.LEND_SALE_AMT,0))                               
                           END AS LEND_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_COST_AMT,0)) - (SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_COST_AMT,0))) * 0.1 , 0)                                                          
                               ELSE   
                                    SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_COST_AMT,0))                               
                           END AS LEND_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_SALE_AMT,0))* 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.STRI_SALE_AMT,0))                              
                           END AS STRI_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_COST_AMT,0)) - (SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_COST_AMT,0))) * 0.1 , 0)                                                                     
                               ELSE   
                                    SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_COST_AMT,0))                              
                           END AS STRI_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRO_SALE_AMT,0)) - SUM(NVL(SKU.STRO_SALE_AMT,0)) * 0.1 , 0)                                                                                                            
                               ELSE   
                                    SUM(NVL(SKU.STRO_SALE_AMT,0))                              
                           END AS STRO_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRO_SALE_AMT, 0)) - SUM(NVL(SKU.STRO_COST_AMT,0)) - (SUM(NVL(SKU.STRO_SALE_AMT,0)) - SUM(NVL(SKU.STRO_COST_AMT,0))) * 0.1 , 0)                                                        
                               ELSE   
                                    SUM(NVL(SKU.STRO_SALE_AMT,0)) - SUM(NVL(SKU.STRO_COST_AMT,0))                              
                           END AS STRO_GAP_AMT
                           
                           
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(SKU.SALE_PRC_UP_BF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(SKU.SALE_PRC_UP_BF_AMT,0)) END                                 AS SALE_PRC_UP_BF_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(SKU.SALE_PRC_DOWN_AF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(SKU.SALE_PRC_DOWN_AF_AMT,0)) END                               AS SALE_PRC_DOWN_AF_AMT
                         
                           
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) * 0.1 , 0)                                                                             
                               ELSE   
                                    SUM(NVL(SKU.STK_ADJ_SALE_AMT,0))                               
                           END AS STK_ADJ_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0)) - (SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                                            
                               ELSE   
                                    SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0))                               
                           END AS STK_ADJ_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0))                              
                           END AS SALE_SALE_AMT   
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC((SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0))) - SUM(NVL(SKU.SALE_COST_AMT,0)) - ((SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0))) - SUM(NVL(SKU.SALE_COST_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - SUM(NVL(SKU.SALE_COST_AMT,0)))                              
                           END AS SALE_GAP_AMT                       
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(SKU.DC_AMT)                               
                           END AS DC_AMT 
                           
                         , SUM(NVL(SKU.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN PBN.TAX_FLAG = 1 THEN 
                            (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN PBN.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                      FROM DPS.PT_SKUDAY SKU
                         , DPS.PT_SKUMONTH SMT
                         , DPS.PC_PBNMST PBN
                     WHERE SKU.PUMBUN_CD = PBN.PUMBUN_CD
                       AND SKU.STR_CD = SMT.STR_CD(+)
                       AND SUBSTR(SKU.STK_DT, 0 , 6) = SMT.STK_YM(+)
                       AND SKU.SKU_CD = SMT.SKU_CD (+) 
                       AND SKU.STR_CD = ?
                       AND STK_DT BETWEEN ? AND ?
                       AND SMT.STK_YM (+) = ?
                       GROUP BY SKU.STR_CD
                              , SKU.SKU_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , SKU.PUMBUN_CD                              
                              , SKU.PUMMOK_CD
                              , PBN.TAX_FLAG
                              , SKU.STK_DT
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD    = ?
               AND A.DEPT_CD   = ?
               AND A.TEAM_CD   = ?
               AND A.PC_CD     = ?
               AND A.STK_DT BETWEEN ? AND ?
        ]]>    
    </query>
    
    <!--  금액기준(세제외) 수불장 누계 조회 쿼리  -->
    <query name="SEL_SKUDAY_TAX_AMT_TOTAL">
        <![CDATA[
            SELECT A.PUMBUN_CD
                 , (SELECT PUMBUN_NAME
                      FROM DPS.PC_PBNMST X
                     WHERE A.PUMBUN_CD = X.PUMBUN_CD) AS PUMBUN_NAME 
                 , A.SKU_CD
                 , (SELECT SKU_NAME
                      FROM DPS.PC_SKUMST X
                     WHERE A.SKU_CD = X.SKU_CD) SKU_NAME 
                 , ''                             AS STK_DT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))                                                       AS BASE_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) AS BASE_GAP_AMT
                 , SUM(NVL(A.BUY_SALE_AMT,0))         AS BUY_SALE_AMT
                 , SUM(NVL(A.BUY_GAP_AMT,0))          AS BUY_GAP_AMT
                 , SUM(NVL(A.RFD_SALE_AMT,0))         AS RFD_SALE_AMT
                 , SUM(NVL(A.RFD_GAP_AMT,0))          AS RFD_GAP_AMT
                 , SUM(NVL(A.BORROW_SALE_AMT,0))      AS BORROW_SALE_AMT
                 , SUM(NVL(A.BORROW_GAP_AMT,0))       AS BORROW_GAP_AMT
                 , SUM(NVL(A.LEND_SALE_AMT,0))        AS LEND_SALE_AMT
                 , SUM(NVL(A.LEND_GAP_AMT,0))         AS LEND_GAP_AMT
                 , SUM(NVL(A.STRI_SALE_AMT,0))        AS STRI_SALE_AMT
                 , SUM(NVL(A.STRI_GAP_AMT,0))         AS STRI_GAP_AMT
                 , SUM(NVL(A.STRO_SALE_AMT,0))        AS STRO_SALE_AMT
                 , SUM(NVL(A.STRO_GAP_AMT,0))         AS STRO_GAP_AMT
                 
                 , SUM(NVL(A.SALE_PRC_UP_BF_AMT,0))   AS SALE_PRC_UP_BF_AMT
                 , SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0)) AS SALE_PRC_DOWN_AF_AMT
                 
                 , SUM(NVL(A.SALE_SALE_AMT,0))        AS SALE_SALE_AMT
                 , SUM(NVL(A.DC_AMT,0))               AS  DC_AMT
                 , SUM(NVL(A.STK_ADJ_SALE_AMT,0))     AS STK_ADJ_SALE_AMT
                 , SUM(NVL(A.STK_ADJ_GAP_AMT,0))      AS STK_ADJ_GAP_AMT
                 , SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0)) + SUM(NVL(A.BUY_SALE_AMT,0)) - SUM(NVL(A.RFD_SALE_AMT,0)) 
                     + SUM(NVL(A.BORROW_SALE_AMT,0)) - SUM(NVL(A.LEND_SALE_AMT,0)) + SUM(NVL(A.STRI_SALE_AMT,0)) - SUM(NVL(A.STRO_SALE_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_SALE_AMT,0)) - SUM(NVL(A.SALE_SALE_AMT,0))                                                             AS SRVY_E_AMT
                 , (SUM(NVL(A.BASE_AMT,0)) + SUM(NVL(A.BASE_DAY_AMT,0))) - (SUM(NVL(A.BASE_COST_AMT, 0)) + SUM(NVL(A.BASE_COST_DAY_AMT, 0))) 
                     + SUM(NVL(A.BUY_GAP_AMT,0)) - SUM(NVL(A.RFD_GAP_AMT,0)) + SUM(NVL(A.BORROW_GAP_AMT,0)) - SUM(NVL(A.LEND_GAP_AMT,0)) 
                     + SUM(NVL(A.STRI_GAP_AMT,0)) - SUM(NVL(A.STRO_GAP_AMT,0)) 
                     - SUM(NVL(A.SALE_PRC_UP_BF_AMT,0)) + SUM(NVL(A.SALE_PRC_DOWN_AF_AMT,0))
                     + SUM(NVL(A.STK_ADJ_GAP_AMT,0)) - SUM(NVL(A.SALE_GAP_AMT,0))     AS SRVY_E_GAP_AMT
                 , '1'                             AS DAY_FLAG                  
              
                 , SUM(NVL(A.SALE_COST_AMT,0))        AS SALE_COST_AMT       
                 , SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0))   AS SALE_PROF
                 , (CASE WHEN  (SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0))) = 0 
                    THEN 0 
                    ELSE ROUND((SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)) - SUM(NVL(A.SALE_COST_AMT,0)))/(SUM(NVL(A.SALE_SALE_AMT_VAT,0)) - SUM(NVL(A.DC_AMT_VAT,0)))*100,2) END) AS SALE_PROF_RATE           
              FROM DPS.PC_PBNMST PBN
                 , (SELECT SKU.STR_CD
                         , SKU.SKU_CD
                         , DEPT_CD
                         , TEAM_CD
                         , PC_CD
                         , SKU.PUMBUN_CD    
                         , SKU.PUMMOK_CD
                         , PBN.TAX_FLAG
                         , SKU.STK_DT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_SALE_AMT,0)) - SUM(NVL(CAO_SALE_AMT,0)) * 0.1 , 0)                                                
                               ELSE   
                                    SUM(NVL(CAO_SALE_AMT,0))                              
                           END  AS BASE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(CAO_COST_AMT,0)) - SUM(NVL(CAO_COST_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(CAO_COST_AMT,0))                              
                           END  AS BASE_COST_AMT
                         , (SELECT CASE WHEN TAX_FLAG = 1 THEN
                                         TRUNC(SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0)) - (SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0))) * 0.1 , 0)                                                
                                    ELSE   
                                         SUM(NVL(BUY_TOT_SALE_AMT,0)) - (SUM(NVL(SALE_SALE_AMT,0)) - SUM(NVL(X.REDU_AMT,0))) + SUM(NVL(STK_ADJ_SALE_AMT,0))
                                    END AS BASE_AMT
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND SKU.STK_DT     = ?
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                 AS BASE_DAY_AMT 
                         , ( SELECT CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0)) - (SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                    
                                    ELSE   
                                         SUM(NVL(BUY_TOT_COST_AMT,0)) - SUM(NVL(SALE_COST_AMT,0)) + SUM(NVL(STK_ADJ_COST_AMT,0))     
                                    END AS BASE_COST_AMT
                              FROM DPS.PT_SKUDAY X
                             WHERE X.STK_DT BETWEEN ? AND TO_CHAR(TO_DATE(?, 'YYYYMMDD')-1, 'YYYYMMDD')
                               AND SKU.STK_DT     = ?
                               AND SKU.STR_CD = X.STR_CD
                               AND SKU.SKU_CD = X.SKU_CD)                                 AS BASE_COST_DAY_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_SALE_AMT,0)) * 0.1 , 0)                                                     
                               ELSE   
                                    SUM(NVL(SKU.BUY_SALE_AMT,0))                               
                           END AS BUY_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_COST_AMT,0)) - (SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(SKU.BUY_SALE_AMT,0)) - SUM(NVL(SKU.BUY_COST_AMT,0))                               
                           END AS BUY_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_SALE_AMT,0)) * 0.1 , 0)                                                                                     
                               ELSE   
                                    SUM(NVL(SKU.RFD_SALE_AMT,0))                               
                           END AS RFD_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_COST_AMT,0)) - (SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_COST_AMT,0))) * 0.1 , 0)                                                               
                               ELSE   
                                    SUM(NVL(SKU.RFD_SALE_AMT,0)) - SUM(NVL(SKU.RFD_COST_AMT,0))                              
                           END AS RFD_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_SALE_AMT,0)) * 0.1 , 0)                                                                                
                               ELSE   
                                    SUM(NVL(SKU.BORROW_SALE_AMT,0))                              
                           END AS BORROW_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0)) - (SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0))) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(SKU.BORROW_SALE_AMT,0)) - SUM(NVL(SKU.BORROW_COST_AMT,0))                               
                           END AS BORROW_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_SALE_AMT,0)) * 0.1 , 0)                                                    
                               ELSE   
                                    SUM(NVL(SKU.LEND_SALE_AMT,0))                               
                           END AS LEND_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_COST_AMT,0)) - (SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_COST_AMT,0))) * 0.1 , 0)                                                          
                               ELSE   
                                    SUM(NVL(SKU.LEND_SALE_AMT,0)) - SUM(NVL(SKU.LEND_COST_AMT,0))                               
                           END AS LEND_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_SALE_AMT,0))* 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.STRI_SALE_AMT,0))                              
                           END AS STRI_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_COST_AMT,0)) - (SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_COST_AMT,0))) * 0.1 , 0)                                                                     
                               ELSE   
                                    SUM(NVL(SKU.STRI_SALE_AMT,0)) - SUM(NVL(SKU.STRI_COST_AMT,0))                              
                           END AS STRI_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRO_SALE_AMT,0)) - SUM(NVL(SKU.STRO_SALE_AMT,0)) * 0.1 , 0)                                                                                                            
                               ELSE   
                                    SUM(NVL(SKU.STRO_SALE_AMT,0))                              
                           END AS STRO_SALE_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STRO_SALE_AMT, 0)) - SUM(NVL(SKU.STRO_COST_AMT,0)) - (SUM(NVL(SKU.STRO_SALE_AMT,0)) - SUM(NVL(SKU.STRO_COST_AMT,0))) * 0.1 , 0)                                                        
                               ELSE   
                                    SUM(NVL(SKU.STRO_SALE_AMT,0)) - SUM(NVL(SKU.STRO_COST_AMT,0))                              
                           END AS STRO_GAP_AMT
                           
                           
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(SKU.SALE_PRC_UP_BF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(SKU.SALE_PRC_UP_BF_AMT,0)) END                                 AS SALE_PRC_UP_BF_AMT
                         , CASE WHEN TAX_FLAG = 1 THEN
                                ROUND(SUM(NVL(SKU.SALE_PRC_DOWN_AF_AMT,0))/1.1,0)
                           ELSE SUM(NVL(SKU.SALE_PRC_DOWN_AF_AMT,0)) END                               AS SALE_PRC_DOWN_AF_AMT
                         
                           
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) * 0.1 , 0)                                                                             
                               ELSE   
                                    SUM(NVL(SKU.STK_ADJ_SALE_AMT,0))                               
                           END AS STK_ADJ_SALE_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0)) - (SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0))) * 0.1 , 0)                                                                            
                               ELSE   
                                    SUM(NVL(SKU.STK_ADJ_SALE_AMT,0)) - SUM(NVL(SKU.STK_ADJ_COST_AMT,0))                               
                           END AS STK_ADJ_GAP_AMT 
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.SALE_SALE_AMT,0)) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(SKU.SALE_SALE_AMT,0))                               
                           END AS SALE_SALE_AMT   
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - SUM(NVL(SKU.SALE_COST_AMT,0)) - (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - SUM(NVL(SKU.SALE_COST_AMT,0))) * 0.1 , 0)                                                                                                          
                               ELSE   
                                    SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) - SUM(NVL(SKU.SALE_COST_AMT,0))                               
                           END AS SALE_GAP_AMT                       
                         , CASE WHEN TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(SKU.DC_AMT)                               
                           END AS DC_AMT 
                           
                         , SUM(NVL(SKU.SALE_COST_AMT,0))                                       AS SALE_COST_AMT
                         , (CASE WHEN PBN.TAX_FLAG = 1 THEN 
                            (SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)))/1.1
                            ELSE SUM(NVL(SKU.SALE_SALE_AMT,0)) - SUM(NVL(SKU.REDU_AMT,0)) END) AS SALE_SALE_AMT_VAT
                         , CASE WHEN PBN.TAX_FLAG = 1 THEN
                                    TRUNC(SUM(NVL(SKU.DC_AMT,0)) - SUM(NVL(SKU.DC_AMT,0)) * 0.1 , 0)                                                                                                                 
                               ELSE   
                                    SUM(NVL(SKU.DC_AMT,0))                               
                           END AS DC_AMT_VAT
                      FROM DPS.PT_SKUDAY SKU
                         , DPS.PT_SKUMONTH SMT
                         , DPS.PC_PBNMST PBN
                     WHERE SKU.PUMBUN_CD = PBN.PUMBUN_CD
                       AND SKU.STR_CD = SMT.STR_CD(+)
                       AND SUBSTR(SKU.STK_DT, 0 , 6) = SMT.STK_YM(+)
                       AND SKU.SKU_CD = SMT.SKU_CD (+) 
                       AND SKU.STR_CD = ?
                       AND STK_DT BETWEEN ? AND ?
                       AND SMT.STK_YM (+) = ?
                       GROUP BY SKU.STR_CD
                              , SKU.SKU_CD
                              , DEPT_CD
                              , TEAM_CD
                              , PC_CD
                              , SKU.PUMBUN_CD                              
                              , SKU.PUMMOK_CD
                              , PBN.TAX_FLAG
                              , SKU.STK_DT
                      ) A
             WHERE A.PUMBUN_CD = PBN.PUMBUN_CD
               AND PBN.PUMBUN_TYPE <> '2'
               AND A.STR_CD    = ?
               AND A.DEPT_CD   = ?
               AND A.TEAM_CD   = ?
               AND A.PC_CD     = ?
               AND A.STK_DT BETWEEN ? AND ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_WHERE_PUMBUN_CD">
        <![CDATA[
               AND A.PUMBUN_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_WHERE_PUMMOK_CD">
        <![CDATA[
               AND A.PUMMOK_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_WHERE_SKU_CD">
        <![CDATA[
               AND A.SKU_CD = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_WHERE_BIZFLAG">
        <![CDATA[
               AND PBN.BIZ_FLAG = ?
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_GROUP">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.SKU_CD
                   , A.STK_DT
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_GROUP_TOTAL">
        <![CDATA[
            GROUP BY A.PUMBUN_CD
                   , A.SKU_CD
        ]]>    
    </query>
    
    <query name="SEL_SKUDAY_AMT_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
                   , A.SKU_CD
        ]]>    
    </query>
    <query name="SEL_SKUDAY_AMT_DAY_ORDER">
        <![CDATA[
            ORDER BY A.PUMBUN_CD
                   , A.SKU_CD
                   , A.STK_DT
        ]]>    
    </query>
</service>