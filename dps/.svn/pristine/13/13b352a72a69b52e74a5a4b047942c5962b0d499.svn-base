<?xml version="1.0" encoding="euc-kr"?>
<!-- XML 버전 1.0을 사용하며 encoding 타입은 ‘euc-kr’로 한다.-->
<!--
 * 작 성 자 : 박종은
 * 회 사 명 : 한국후지쯔
 * 작 성 일 : 2010.04.08
 * 변 경 일 : 
 * 변경내용 : 
 * 개    요 :  
 -->
<service name="/psal301.ps">

    
    
    <gauce name="H_SEL_MASTER">
    	<column colName="STR_CD"                  colType="TB_STRING"      size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="STR_NAME"                colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" /> 
        <column colName="ORG_CD"                  colType="TB_STRING"      size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ORG_NAME2"               colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ORG_NAME"                colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SKU_FLAG"                colType="TB_STRING"      size="1"        dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="HALL_CD"                 colType="TB_STRING"      size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="HALL_NM"                 colType="TB_STRING"      size="40"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="ORIGIN_SALE_TAMT"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ORIGIN_SALE_TAMT_OFF"    colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ORIGIN_SALE_TAMT_ON"     colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ORIGIN_SALE_TAMT_NAVER"  colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_OFF"        colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_ON"         colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_NAVER"      colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="ACHIEVERATE"             colType="TB_DECIMAL"     size="5"        dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="TOT_COMP_RATE"           colType="TB_DECIMAL"     size="13"       dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="REDU_AMT"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="NORM_SALE_AMT"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="DC_AMT"                  colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="NET_SALE_AMT"            colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALE_PROF_AMT"           colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="PROFRATE"                colType="TB_DECIMAL"     size="5"        dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_CNT"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_NCNT"                colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="CUST_DANGA"              colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        
        <column colName="TOT_SALE_AMT_CMPR1"      colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR1_OFF"  colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR1_ON"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR1_NAVER" colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_COMP_RATE_CMPR1"     colType="TB_DECIMAL"     size="5"        dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE1"              colType="TB_DECIMAL"     size="5"        dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR2"      colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR2_OFF"  colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR2_ON"   colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_SALE_AMT_CMPR2_NAVER" colType="TB_DECIMAL"     size="13"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="TOT_COMP_RATE_CMPR2"     colType="TB_DECIMAL"     size="5"        dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="SALEIRATE2"              colType="TB_DECIMAL"     size="5"        dec="2" keyType="TB_NORMAL" roundMode="ROUND" />
        <column colName="UNIT"    	              colType="TB_DECIMAL"     size="10"       dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
    </gauce>
    
    <gauce name="H_SEL_CMPRDT"> 
        <column colName="CMPR_DT"                 colType="TB_STRING"      size="8"        dec="0" keyType="TB_NORMAL" roundMode="ROUND" />
    </gauce>
    
    
    
    <!-- 쿼리는 전부 대문자 -->
     
    <!-- 마스터 조회 쿼리  -->
   
    <query name="SEL_SALE_TEAM1">        
        <![CDATA[
			SELECT 
					STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2             
                  , CASE WHEN SUBSTR(X.ORG_CD, 5, 6) = 'XXXXXX' THEN '팀 소계' ELSE
                           (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) 
                    END AS ORG_NAME
                  , X.SKU_FLAG
                  , 'XX'                   AS HALL_CD
                  , ''                   AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , 0                    AS TOT_SALE_AMT_CMPR2
                  , 0                    AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                    AS TOT_SALE_AMT_CMPR2_ON
                  , 0                    AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                    AS TOT_COMP_RATE_CMPR2
                  , 0                    AS SALEIRATE2
                  , ? 					 AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6) || '0000'                                    AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                 AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                              AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                    AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                     AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                  AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                           AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                            AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                           AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                            AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                            AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT  
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%')THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%')THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%')THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                           AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?  -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                               
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT
                                  , 0                                 AS CUST_NCNT                                                                                                    
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND F.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT 
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER        
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT
                                  , 0                                   AS CUST_NCNT            
                                  , 0                                   AS SAL_COST_PRC    
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  --, 0                                   AS ORIGIN_SALE_TAMT  
                                  --, 0                                   AS ORIGIN_SALE_TAMT_OFF  
                                  --, 0                                   AS ORIGIN_SALE_TAMT_ON
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%')  THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND C.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                      UNION ALL 
                      SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 4) || 'XXXXXX'                               AS ORG_CD
                          , '관별소계'                                                        AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                 AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                              AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                    AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                     AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                  AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                           AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                            AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                           AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                            AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                         AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT  
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,4) || 'XXXXXX'    AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2                                                                                            
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT   
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF   
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER 
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT  
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,4)||'XXXXXX' AS ORG_CD                                                                                                        
                                  , '관별소계'                          AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_OFF                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                               
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                      
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END)        AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END)        AS TOT_SALE_AMT_CMPR1_ON        
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END)        AS TOT_SALE_AMT_CMPR1_NAVER                                                                                     
                                  , 0                                 AS TOT_SALE_AMT_CMPR2                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER 
                                  , 0                                 AS ORIGIN_SALE_TAMT   
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF   
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND F.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 4)||'XXXXXX' AS ORG_CD
                                  , '관별소계'                           AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT        
                                  , 0                                   AS TOT_SALE_AMT_OFF        
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER  
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT  
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1 
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF 
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND C.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ? 
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 4)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
--------------------------------------------------------------------------------1-1              
        ]]>        
    </query>
    
    
    
    <query name="SEL_SALE_TEAM1-1">        
        <![CDATA[
			SELECT 
					STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2             
                  , CASE WHEN SUBSTR(X.ORG_CD, 5, 6) = 'XXXXXX' THEN '관별소계' ELSE
                           (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) 
                    END AS ORG_NAME
                  , X.SKU_FLAG
                  , 'XX'                   AS HALL_CD
                  , ''                   AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , 0                    AS TOT_SALE_AMT_CMPR2
                  , 0                    AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                    AS TOT_SALE_AMT_CMPR2_ON
                  , 0                    AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                    AS TOT_COMP_RATE_CMPR2
                  , 0                    AS SALEIRATE2
                  , ? 					 AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6) || '0000'                                    AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                 AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                              AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                    AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                     AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                  AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                           AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                            AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                           AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                            AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                         AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT  
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF 
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER 
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER 
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?  -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT  
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                              
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT  
                                  , 0                                 AS CUST_NCNT                                                                                                    
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND F.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT 
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON    
                                  , 0                                   AS TOT_SALE_AMT_NAVER    
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC    
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  --, 0                                   AS ORIGIN_SALE_TAMT  
                                  --, 0                                   AS ORIGIN_SALE_TAMT_OFF  
                                  --, 0                                   AS ORIGIN_SALE_TAMT_ON
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND C.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                      UNION ALL
                      SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 4) || 'XXXXXX'                               AS ORG_CD
                          , '관별소계'                                                        AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                 AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                              AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                    AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                     AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                  AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                           AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                            AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                         AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                           AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                            AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                         AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT  
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,4) || 'XXXXXX'    AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2                                                                                            
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT   
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF   
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND A.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT  
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,4)||'XXXXXX' AS ORG_CD                                                                                                        
                                  , '관별소계'                          AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_OFF                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                 
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT   
                                  , 0                                 AS CUST_NCNT                                                                                                    
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END)        AS TOT_SALE_AMT_CMPR1_ON                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END)        AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END)        AS TOT_SALE_AMT_CMPR1_NAVER                                                                                        
                                  , 0                                 AS TOT_SALE_AMT_CMPR2                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON 
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT   
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF   
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND F.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 4)||'XXXXXX' AS ORG_CD
                                  , '관별소계'                           AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT        
                                  , 0                                   AS TOT_SALE_AMT_OFF        
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER   
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT
                                  , 0                                   AS CUST_NCNT           
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1 
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF 
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON 
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND C.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ? 
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 4)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
--------------------------------------------------------------------------------1-2              
        ]]>        
    </query>
    
    <query name="SEL_SALE_TEAM2">       
        <![CDATA[
		SELECT 
		        STR_CD ,   STR_NAME, ''   ORG_CD  ,    ORG_NAME2  ,  ORG_NAME ,   SKU_FLAG ,   HALL_CD ,  HALL_NM  ,  
		        SUM(ORIGIN_SALE_TAMT) ORIGIN_SALE_TAMT  ,  SUM(ORIGIN_SALE_TAMT_OFF) ORIGIN_SALE_TAMT_OFF   , SUM(ORIGIN_SALE_TAMT_ON) ORIGIN_SALE_TAMT_ON  ,  
		        SUM(ORIGIN_SALE_TAMT_NAVER) ORIGIN_SALE_TAMT_NAVER  ,
		        SUM(TOT_SALE_AMT) TOT_SALE_AMT ,   SUM(TOT_SALE_AMT_OFF) TOT_SALE_AMT_OFF  ,  
		        SUM(TOT_SALE_AMT_ON) TOT_SALE_AMT_ON ,
		        SUM(TOT_SALE_AMT_NAVER) TOT_SALE_AMT_NAVER , 
		        (CASE WHEN SUM(NVL(ORIGIN_SALE_TAMT,0))  = 0 THEN 0
		                             ELSE    ( SUM(NVL(TOT_SALE_AMT,0))/SUM(NVL(ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE,
		        (CASE WHEN (SUM(SUM(NVL(TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
		                                  ELSE (SUM(NVL(TOT_SALE_AMT,0)) / (SUM(SUM(NVL(TOT_SALE_AMT,0))) OVER ())*100)
		                             END)                                                             AS TOT_COMP_RATE,
		        SUM(REDU_AMT)REDU_AMT ,  SUM(NORM_SALE_AMT) NORM_SALE_AMT,   SUM(DC_AMT) DC_AMT ,   SUM(NET_SALE_AMT) NET_SALE_AMT ,   
		        SUM(SALE_PROF_AMT) SALE_PROF_AMT ,   
		        (CASE WHEN SUM(NVL(TOT_SALE_AMT,0)) = 0 THEN 0
		                                  ELSE (SUM(NVL(SALE_PROF_AMT,0))/SUM(NVL(TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE,
		        SUM(CUST_CNT) CUST_CNT , SUM(CUST_NCNT) CUST_NCNT ,  
		        (CASE WHEN SUM(CUST_CNT) = 0 THEN 0 ELSE (SUM(TOT_SALE_AMT)/SUM(CUST_CNT)) END)                   AS CUST_DANGA,  
		        SUM(TOT_SALE_AMT_CMPR1) TOT_SALE_AMT_CMPR1  ,  SUM(TOT_SALE_AMT_CMPR1_OFF) TOT_SALE_AMT_CMPR1_OFF  ,  
		        SUM(TOT_SALE_AMT_CMPR1_ON) TOT_SALE_AMT_CMPR1_ON ,
		        SUM(TOT_SALE_AMT_CMPR1_NAVER) TOT_SALE_AMT_CMPR1_NAVER ,
		        SUM(TOT_COMP_RATE_CMPR1) TOT_COMP_RATE_CMPR1 ,   
			(CASE WHEN  SUM(TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(TOT_SALE_AMT,0))- SUM(TOT_SALE_AMT_CMPR1))/SUM(TOT_SALE_AMT_CMPR1))*100 END)  AS SALEIRATE1  ,  
			SUM(TOT_SALE_AMT_CMPR2) TOT_SALE_AMT_CMPR2   , SUM(TOT_SALE_AMT_CMPR2_OFF) TOT_SALE_AMT_CMPR2_OFF,    
		        SUM(TOT_SALE_AMT_CMPR2_ON) TOT_SALE_AMT_CMPR2_ON ,
		        SUM(TOT_SALE_AMT_CMPR2_NAVER) TOT_SALE_AMT_CMPR2_NAVER,
		           SUM(TOT_COMP_RATE_CMPR2) TOT_COMP_RATE_CMPR2 ,
			(CASE WHEN  SUM(TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(TOT_SALE_AMT,0))- SUM(TOT_SALE_AMT_CMPR2))/SUM(TOT_SALE_AMT_CMPR2))*100 END) AS SALEIRATE2
              , ? AS UNIT
		FROM
	        (SELECT 
        	  		STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
                  , ''                                                                  AS ORG_NAME2                                                                
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD||'0000') AS ORG_NAME
                  , X.SKU_FLAG
                  , ''                   AS HALL_CD
                  , ''                   AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , 0                    AS TOT_SALE_AMT_CMPR2
                  , 0                    AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                    AS TOT_SALE_AMT_CMPR2_ON
                  , 0                    AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                    AS TOT_COMP_RATE_CMPR2
                  , 0                    AS SALEIRATE2
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , 0   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , 0   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                               AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?   -- 점 
                              AND A.SALE_DT     >= ?       -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                             		STR_CD,ORG_CD,ORG_NAME,HALL_CD,HALL_NM,SALE_QTY,TOT_SALE_AMT,TOT_SALE_AMT_OFF,TOT_SALE_AMT_ON,
                             		TOT_SALE_AMT_NAVER,
                             		VAT_AMT,REDU_AMT,NORM_SALE_AMT,DC_AMT,
                                    NET_SALE_AMT,SALE_PROF_AMT,CUST_CNT,CUST_NCNT,SAL_COST_PRC,TOT_SALE_AMT_CMPR1,TOT_SALE_AMT_CMPR1_OFF,TOT_SALE_AMT_CMPR1_ON,
                                    TOT_SALE_AMT_CMPR1_NAVER,
                                    TOT_SALE_AMT_CMPR2,
                                    TOT_SALE_AMT_CMPR2_OFF,TOT_SALE_AMT_CMPR2_ON,
                                    TOT_SALE_AMT_CMPR2_NAVER,
                                    ORIGIN_SALE_TAMT,ORIGIN_SALE_TAMT_OFF,ORIGIN_SALE_TAMT_ON,
                                    ORIGIN_SALE_TAMT_NAVER
                                FROM
                                   (SELECT /*+ index(F IX_PS_DAYPBN_04) */ 
                                    F.STR_CD                          AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME
                                  , ''                                AS HALL_CD
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER
                                  , 0                                 AS VAT_AMT
                                  , 0                                 AS REDU_AMT
                                  , 0                                 AS NORM_SALE_AMT
                                  , 0                                 AS DC_AMT
                                  , 0                                 AS NET_SALE_AMT
                                  , 0                                 AS SALE_PROF_AMT
                                  , 0                                 AS CUST_CNT
                                  , 0                                 AS CUST_NCNT
                                  , 0                                 AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                                  , DPS.PS_DAYPBN F
                              WHERE D.STR_CD    = ?   -- 점
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND F.PUMBUN_CD   = Y.PUMBUN_CD(+)
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND F.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                               FROM COM.V_MYORG MYORG
                                              WHERE MYORG.USER_ID     = ?    -- USER_ID
                                           )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     ) Z
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF       
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER             
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT   
                                  , 0                                   AS CUST_NCNT        
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
                           -- ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
				       )
				GROUP BY  STR_CD ,   STR_NAME,  ORG_NAME2  ,  ORG_NAME ,   SKU_FLAG ,   HALL_CD ,  HALL_NM  
				ORDER BY ORG_NAME
              
--------------------------------------------------------------------------------2              
         ]]>    
    </query>
    
  
    
    <query name="SEL_SALE_TEAM3">        
        <![CDATA[
        	 SELECT 
        	 		 STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2        	 
                  , CASE WHEN SUBSTR(X.ORG_CD, 5, 6) = 'XXXXXX' THEN '관별소계' ELSE
                           (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) 
                    END AS ORG_NAME
                  , X.SKU_FLAG
                  , 'XX'                   AS HALL_CD
                  , ''                   AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2  AS TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF  AS TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON  AS TOT_SALE_AMT_CMPR2_ON
                  , X.TOT_SALE_AMT_CMPR2_NAVER  AS TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2 AS TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2          AS SALEIRATE2
                  , ? 					  AS UNIT
              FROM ( SELECT A.STR_CD, SUBSTR(A.ORG_CD, 1, 6) || '0000'                                    AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF    
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                   
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                    
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF      
                                  , 0                                 AS TOT_SALE_AMT_ON  
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                      
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT    
                                  , 0                                 AS CUST_NCNT                                                                                                  
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER            
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON 
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER   
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME (SUBSTR(D.SALE_ORG_CD, 1, 2),SUBSTR(D.SALE_ORG_CD, 3, 2),SUBSTR(D.SALE_ORG_CD, 5, 2), '00','00')) AS ORG_NAME
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                   , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                      UNION ALL
                      SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 4) || 'XXXXXX'                               AS ORG_CD
                          , '관별소계'                                                          AS ORG_NAME
                          , 'XX'                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,4)                AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                 , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,4)         AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                                                                                                                 
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1    
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                        
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,4)         AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT   
                                  , 0                                 AS CUST_NCNT                                                                                                   
                                  , 0                                 AS SAL_COST_PRC
                                  , 0                                 AS TOT_SALE_AMT_CMPR1
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON 
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER                                                                                                 
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2    
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER                                                                                        
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,4)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 4)         AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME (SUBSTR(D.SALE_ORG_CD, 1, 2),SUBSTR(D.SALE_ORG_CD, 3, 2),SUBSTR(D.SALE_ORG_CD, 5, 2), '00','00')) AS ORG_NAME
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF   
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER        
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER 
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 4)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 4)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
--------------------------------------------------------------------------------3              
      ]]>    
    </query>
    
    <query name="SEL_SALE_TEAM4">       
        <![CDATA[
        	 SELECT 
		        STR_CD ,   STR_NAME, ''   ORG_CD  ,    ORG_NAME2  ,  ORG_NAME ,   SKU_FLAG ,   HALL_CD ,  HALL_NM  ,  
		        SUM(ORIGIN_SALE_TAMT) ORIGIN_SALE_TAMT  ,  SUM(ORIGIN_SALE_TAMT_OFF) ORIGIN_SALE_TAMT_OFF   , SUM(ORIGIN_SALE_TAMT_ON) ORIGIN_SALE_TAMT_ON  ,  SUM(ORIGIN_SALE_TAMT_NAVER) ORIGIN_SALE_TAMT_NAVER,SUM(TOT_SALE_AMT) TOT_SALE_AMT ,   SUM(TOT_SALE_AMT_OFF) TOT_SALE_AMT_OFF  ,  
		        SUM(TOT_SALE_AMT_ON) TOT_SALE_AMT_ON ,   SUM(TOT_SALE_AMT_NAVER) TOT_SALE_AMT_NAVER ,
		        (CASE WHEN SUM(NVL(ORIGIN_SALE_TAMT,0))  = 0 THEN 0
		                             ELSE    ( SUM(NVL(TOT_SALE_AMT,0))/SUM(NVL(ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE,
		        (CASE WHEN (SUM(SUM(NVL(TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
		                                  ELSE (SUM(NVL(TOT_SALE_AMT,0)) / (SUM(SUM(NVL(TOT_SALE_AMT,0))) OVER ())*100)
		                             END)                                                             AS TOT_COMP_RATE,
		        SUM(REDU_AMT)REDU_AMT ,  SUM(NORM_SALE_AMT) NORM_SALE_AMT,   SUM(DC_AMT) DC_AMT ,   SUM(NET_SALE_AMT) NET_SALE_AMT ,   
		        SUM(SALE_PROF_AMT) SALE_PROF_AMT ,   
		        (CASE WHEN SUM(NVL(TOT_SALE_AMT,0)) = 0 THEN 0
		                                  ELSE (SUM(NVL(SALE_PROF_AMT,0))/SUM(NVL(TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE,
		        SUM(CUST_CNT) CUST_CNT ,  SUM(CUST_NCNT) CUST_NCNT, 
		        (CASE WHEN SUM(CUST_CNT) = 0 THEN 0 ELSE (SUM(TOT_SALE_AMT)/SUM(CUST_CNT)) END)                   AS CUST_DANGA,  
		        SUM(TOT_SALE_AMT_CMPR1) TOT_SALE_AMT_CMPR1  ,  SUM(TOT_SALE_AMT_CMPR1_OFF) TOT_SALE_AMT_CMPR1_OFF  ,  
		        SUM(TOT_SALE_AMT_CMPR1_ON) TOT_SALE_AMT_CMPR1_ON ,   SUM(TOT_SALE_AMT_CMPR1_NAVER) TOT_SALE_AMT_CMPR1_NAVER, SUM(TOT_COMP_RATE_CMPR1) TOT_COMP_RATE_CMPR1 ,   
			(CASE WHEN  SUM(TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(TOT_SALE_AMT,0))- SUM(TOT_SALE_AMT_CMPR1))/SUM(TOT_SALE_AMT_CMPR1))*100 END)  AS SALEIRATE1  ,  
			SUM(TOT_SALE_AMT_CMPR2) TOT_SALE_AMT_CMPR2   , SUM(TOT_SALE_AMT_CMPR2_OFF) TOT_SALE_AMT_CMPR2_OFF,    
		        SUM(TOT_SALE_AMT_CMPR2_ON) TOT_SALE_AMT_CMPR2_ON ,SUM(TOT_SALE_AMT_CMPR2_NAVER) TOT_SALE_AMT_CMPR2_NAVER  ,   SUM(TOT_COMP_RATE_CMPR2) TOT_COMP_RATE_CMPR2 ,   
			(CASE WHEN  SUM(TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(TOT_SALE_AMT,0))- SUM(TOT_SALE_AMT_CMPR2))/SUM(TOT_SALE_AMT_CMPR2))*100 END) AS SALEIRATE2
              , ? AS UNIT
		FROM
	        (SELECT 
        	 		STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
        	      , ''                                                                  AS ORG_NAME2 
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD||'0000') AS ORG_NAME    -- ORG_CD =  X.ORG_CD2||X.ORG_CD||'0000'
                  , X.SKU_FLAG
                  , ''                   AS HALL_CD
                  , ''                   AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2  AS TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF  AS TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON  AS TOT_SALE_AMT_CMPR2_ON
                  , X.TOT_SALE_AMT_CMPR2_NAVER  AS TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2 AS TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2          AS SALEIRATE2
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)                                            AS ORG_CD     -- SUBSTR(A.ORG_CD, 5, 2) 
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , ''                                                                AS HALL_CD
                          , ''                                                                AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , 0   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , 0   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'       AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF   
                                  , 0                                 AS TOT_SALE_AMT_ON 
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                  
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT     
                                  , 0                                 AS CUST_NCNT                                                                                                 
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON   
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                     
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON    
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                              
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR1
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON 
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER                                                                                           
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER   
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON  
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME (SUBSTR(D.BUY_ORG_CD, 1, 2),SUBSTR(D.BUY_ORG_CD, 3, 2),SUBSTR(D.BUY_ORG_CD, 5, 2), '00','00')) AS ORG_NAME
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON     
                                  , 0                                   AS TOT_SALE_AMT_NAVER  
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)    --- 5,2
                   ) X )
				GROUP BY  STR_CD ,   STR_NAME,  ORG_NAME2  ,  ORG_NAME ,   SKU_FLAG ,   HALL_CD ,  HALL_NM  
				ORDER BY ORG_NAME
              --ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
		
--------------------------------------------------------------------------------4              
      ]]>    
    </query>
    <query name="SEL_SALE_HALL1">  
        <![CDATA[
             SELECT 
             		 X.ORG_CD             -- 조직코드 
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD             AS HALL_CD
                  , X.HALL_NM             AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT       -- 총매출
                  , X.TOT_SALE_AMT_OFF       -- 총매출
                  , X.TOT_SALE_AMT_ON       -- 총매출
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE        -- 달성율
                  , X.TOT_COMP_RATE      -- 구성비
                  , X.REDU_AMT           -- 할인액
                  , X.NORM_SALE_AMT      -- 매출
                  , X.DC_AMT             -- 에누리
                  , X.NET_SALE_AMT       -- 순매출
                  , X.SALE_PROF_AMT      -- 이익액
                  , X.PROFRATE           -- 이익율
                  , X.CUST_CNT           -- 객수
                  , X.CUST_NCNT           -- 객수
                  , X.CUST_DANGA         -- 객단가
                  , X.TOT_SALE_AMT_CMPR1      -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF      -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON      -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1     -- 대비구성비1
                  , X.SALEIRATE1              -- 신장율1
                  , 0                     AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0                     AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , 0                     AS TOT_SALE_AMT_CMPR2_ON     -- 대비실적2
                  , 0                     AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                     AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0                     AS SALEIRATE2              -- 신장율2
                  , ? 					  AS UNIT
              FROM ( SELECT SUBSTR(A.ORG_CD, 1, 6) || '0000'                                     AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                  AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , NVL(H.HALL_CD, ' ')                   AS HALL_CD
                                , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(H.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6) 
                                       , NVL(H.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD  
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                      
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON   
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                            UNION ALL
                            SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.SALE_ORG_CD, 1, 2),SUBSTR(D.SALE_ORG_CD, 3, 2),SUBSTR(D.SALE_ORG_CD, 5, 2), '00','00')) AS ORG_NAME   
                                  , NVL(D.HALL_CD, ' ')                 AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(D.HALL_CD, ' ')
                                  )                                     AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON    
                                  , 0                                   AS TOT_SALE_AMT_NAVER   
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT   
                                  , 0                                   AS CUST_NCNT        
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                                     , NVL(D.HALL_CD, ' ')
                          )                    A
                      GROUP BY SUBSTR(A.ORG_CD, 1, 6)
                             , A.HALL_CD
                     UNION ALL
                     SELECT SUBSTR(A.ORG_CD, 1, 6) || '0000'                                  AS ORG_CD  
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , ''                                    AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%')THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6) 			
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , ''                                    AS HALL_CD  
                                  , ''                                    AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER 
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1    
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                      
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON 
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER 
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                            UNION ALL
                            SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.SALE_ORG_CD, 1, 2),SUBSTR(D.SALE_ORG_CD, 3, 2),SUBSTR(D.SALE_ORG_CD, 5, 2), '00','00')) AS ORG_NAME         
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON 
                                  , 0                                   AS TOT_SALE_AMT_NAVER      
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY X.ORG_CD
                     , X.HALL_CD
--------------------------------------------------------------------------------5                     
        ]]>    
    </query>  
    <query name="SEL_SALE_HALL2">
        <![CDATA[
        	 SELECT 
			        STR_CD  ,  STR_NAME  ,  ORG_CD  ,  ORG_NAME2  ,  ORG_NAME ,   SKU_FLAG  ,  HALL_CD ,   HALL_NM  ,  
			        SUM(ORIGIN_SALE_TAMT) ORIGIN_SALE_TAMT ,   SUM(ORIGIN_SALE_TAMT_OFF) ORIGIN_SALE_TAMT_OFF ,   SUM(ORIGIN_SALE_TAMT_ON) ORIGIN_SALE_TAMT_ON  ,  
			         SUM(ORIGIN_SALE_TAMT_NAVER) ORIGIN_SALE_TAMT_NAVER  ,  
			        SUM(TOT_SALE_AMT) TOT_SALE_AMT  ,    
			        SUM(TOT_SALE_AMT_OFF) TOT_SALE_AMT_OFF ,
			        SUM(TOT_SALE_AMT_ON) TOT_SALE_AMT_ON ,
			         SUM(TOT_SALE_AMT_ON) TOT_SALE_AMT_NAVER ,  
					(CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE,
			        (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
			                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
			                             END)                                                             AS TOT_COMP_RATE ,
			        SUM(REDU_AMT) REDU_AMT  ,  SUM(NORM_SALE_AMT) NORM_SALE_AMT  ,  SUM(DC_AMT) DC_AMT ,   
			        SUM(NET_SALE_AMT) NET_SALE_AMT   , SUM(SALE_PROF_AMT) SALE_PROF_AMT,   
					(CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE  ,
                                    SUM(CUST_CNT) CUST_CNT , SUM(CUST_NCNT) CUST_NCNT , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA,
			        SUM(A.TOT_SALE_AMT_CMPR1)                                  AS SUM_TOT_SALE_AMT_CMPR1  ,
			        (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
			                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
			                             END)                                                             AS TOT_COMP_RATE_CMPR1,
			        (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
			                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1   , 
			        SUM(A.TOT_SALE_AMT_CMPR2)                                  AS SUM_TOT_SALE_AMT_CMPR2,
			        (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
			                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
			                             END)                                                             AS TOT_COMP_RATE_CMPR2,
			        (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
			                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
			      , ? AS UNIT
			FROM 
			    (SELECT
                   STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD             -- 조직코드
                      , ''                                                                  AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD2||X.ORG_CD||'0000') AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD             AS HALL_CD
                  , X.HALL_NM             AS HALL_NM
                  , X.ORIGIN_SALE_TAMT   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT       -- 총매출
                  , X.TOT_SALE_AMT_ON       -- 총매출
                  , X.TOT_SALE_AMT_OFF       -- 총매출
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE        -- 달성율
                  , X.TOT_COMP_RATE      -- 구성비
                  , X.REDU_AMT           -- 할인액
                  , X.NORM_SALE_AMT      -- 매출
                  , X.DC_AMT             -- 에누리
                  , X.NET_SALE_AMT       -- 순매출
                  , X.SALE_PROF_AMT      -- 이익액
                  , X.PROFRATE           -- 이익율
                  , X.CUST_CNT           -- 객수
                  , X.CUST_NCNT           -- 객수
                  , X.CUST_DANGA         -- 객단가
                  , X.TOT_SALE_AMT_CMPR1      -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1     -- 대비구성비1
                  , X.SALEIRATE1              -- 신장율1
                  , 0                     AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0                     AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0                     AS SALEIRATE2              -- 신자율2
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                           AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                  AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , NVL(H.HALL_CD, ' ')                   AS HALL_CD
                                , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(H.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER  
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?   -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                                       , NVL(H.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL  AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL  OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL  AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                            UNION ALL
                            SELECT
                                    C.STR_CD AS STR_CD
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.BUY_ORG_CD, 1, 2),SUBSTR(D.BUY_ORG_CD, 3, 2),SUBSTR(D.BUY_ORG_CD, 5, 2), '00','00')) AS ORG_NAME
                                  , NVL(D.HALL_CD, ' ')                 AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(D.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                  , 0                                   AS SALE_QTY
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER
                                  , 0                                   AS VAT_AMT
                                  , 0                                   AS REDU_AMT
                                  , 0                                   AS NORM_SALE_AMT
                                  , 0                                   AS DC_AMT
                                  , 0                                   AS NET_SALE_AMT
                                  , 0                                   AS SALE_PROF_AMT
                                  , 0                                   AS CUST_CNT
                                  , 0                                   AS CUST_NCNT
                                  , 0                                   AS SAL_COST_PRC
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ?   -- 점
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                                     , NVL(D.HALL_CD, ' ')
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                             , A.HALL_CD
                  
                   ) X
               ) A
			GROUP BY STR_CD  ,  STR_NAME  ,  ORG_CD  ,  ORG_NAME2  ,  ORG_NAME ,   SKU_FLAG  ,  HALL_CD ,  HALL_NM
			UNION ALL
			SELECT 
			        STR_CD  ,  STR_NAME  ,'ZZ'  ORG_CD  ,''  ORG_NAME2  ,  ORG_NAME , ''  SKU_FLAG  ,''  HALL_CD , '팀별소계'  HALL_NM  ,  
			        SUM(ORIGIN_SALE_TAMT) ORIGIN_SALE_TAMT ,   SUM(ORIGIN_SALE_TAMT_OFF) ORIGIN_SALE_TAMT_OFF ,   SUM(ORIGIN_SALE_TAMT_ON) ORIGIN_SALE_TAMT_ON,  
			         SUM(ORIGIN_SALE_TAMT_NAVER) ORIGIN_SALE_TAMT_NAVER,
			        SUM(TOT_SALE_AMT) TOT_SALE_AMT  ,  SUM(TOT_SALE_AMT_ON) TOT_SALE_AMT_ON , SUM(TOT_SALE_AMT_NAVER) TOT_SALE_AMT_NAVER,
			        SUM(TOT_SALE_AMT_OFF) TOT_SALE_AMT_OFF ,   
					(CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE,
			        (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
			                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
			                             END)                                                             AS TOT_COMP_RATE ,
			        SUM(REDU_AMT) REDU_AMT  ,  SUM(NORM_SALE_AMT) NORM_SALE_AMT  ,  SUM(DC_AMT) DC_AMT ,   
			        SUM(NET_SALE_AMT) NET_SALE_AMT   , SUM(SALE_PROF_AMT) SALE_PROF_AMT,    
					(CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE  ,
                                    SUM(CUST_CNT) CUST_CNT , SUM(CUST_NCNT) CUST_NCNT,  (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA,
			        SUM(A.TOT_SALE_AMT_CMPR1)                                  AS SUM_TOT_SALE_AMT_CMPR1  ,
			        (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
			                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
			                             END)                                                             AS TOT_COMP_RATE_CMPR1,
			        (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
			                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1   , 
			        SUM(A.TOT_SALE_AMT_CMPR2)                                  AS SUM_TOT_SALE_AMT_CMPR2,
			        (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
			                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
			                             END)                                                             AS TOT_COMP_RATE_CMPR2,
			        (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
			                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
			FROM
			    (SELECT
			                   STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD             -- 조직코드
			                      , ''                                                                  AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD2||X.ORG_CD||'0000') AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD             AS HALL_CD
                  , X.HALL_NM             AS HALL_NM
                  , X.ORIGIN_SALE_TAMT   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT       -- 총매출
                  , X.TOT_SALE_AMT_ON       -- 총매출
                  , X.TOT_SALE_AMT_NAVER
                  , X.TOT_SALE_AMT_OFF       -- 총매출
                  , X.ACHIEVERATE        -- 달성율
                  , X.TOT_COMP_RATE      -- 구성비
                  , X.REDU_AMT           -- 할인액
                  , X.NORM_SALE_AMT      -- 매출
                  , X.DC_AMT             -- 에누리
                  , X.NET_SALE_AMT       -- 순매출
                  , X.SALE_PROF_AMT      -- 이익액
                  , X.PROFRATE           -- 이익율
                  , X.CUST_CNT           -- 객수
                  , X.CUST_NCNT           -- 객수   
                  , X.CUST_DANGA         -- 객단가
                  , X.TOT_SALE_AMT_CMPR1      -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1     -- 대비구성비1
                  , X.SALEIRATE1              -- 신장율1
                  , 0                     AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0                     AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0                     AS SALEIRATE2              -- 신자율2
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                           AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                  AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , NVL(H.HALL_CD, ' ')                   AS HALL_CD
                                , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(H.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                                       , NVL(H.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                            UNION ALL
                            SELECT
                                    C.STR_CD AS STR_CD
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.BUY_ORG_CD, 1, 2),SUBSTR(D.BUY_ORG_CD, 3, 2),SUBSTR(D.BUY_ORG_CD, 5, 2), '00','00')) AS ORG_NAME
                                  , NVL(D.HALL_CD, ' ')                 AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(D.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                  , 0                                   AS SALE_QTY
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER
                                  , 0                                   AS VAT_AMT
                                  , 0                                   AS REDU_AMT
                                  , 0                                   AS NORM_SALE_AMT
                                  , 0                                   AS DC_AMT
                                  , 0                                   AS NET_SALE_AMT
                                  , 0                                   AS SALE_PROF_AMT
                                  , 0                                   AS CUST_CNT
                                  , 0                                   AS CUST_NCNT
                                  , 0                                   AS SAL_COST_PRC
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                                     , NVL(D.HALL_CD, ' ')
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                             , A.HALL_CD
                  
                   ) X
               ) A
               
			GROUP BY STR_CD  ,  STR_NAME ,  ORG_NAME
			ORDER BY STR_CD,ORG_NAME,HALL_CD,ORG_CD
--------------------------------------------------------------------------------6                     
        ]]>    
    </query>
    <query name="SEL_SALE_HALL3">
        <![CDATA[
        	 SELECT 
        	 		X.ORG_CD             -- 조직코드 
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD             AS HALL_CD
                  , X.HALL_NM             AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT   -- 실행목표
                  , X.TOT_SALE_AMT       -- 총매출
                  , X.ACHIEVERATE        -- 달성율
                  , X.TOT_COMP_RATE      -- 구성비
                  , X.REDU_AMT           -- 할인액
                  , X.NORM_SALE_AMT      -- 매출
                  , X.DC_AMT             -- 에누리
                  , X.NET_SALE_AMT       -- 순매출
                  , X.SALE_PROF_AMT      -- 이익액
                  , X.PROFRATE           -- 이익율
                  , X.CUST_CNT           -- 객수
                  , X.CUST_NCNT           -- 객수
                  , X.CUST_DANGA         -- 객단가
                  , X.TOT_SALE_AMT_CMPR1      -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1     -- 대비구성비1
                  , X.SALEIRATE1              -- 신장율1
                  , X.TOT_SALE_AMT_CMPR2  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , X.TOT_COMP_RATE_CMPR2 AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , X.SALEIRATE2          AS SALEIRATE2              -- 신자율2
                  , ? 					  AS UNIT
              FROM ( SELECT SUBSTR(A.ORG_CD, 1, 6) || '0000'                                     AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                  AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , NVL(H.HALL_CD, ' ')                   AS HALL_CD
                                , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(H.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS ORIGIN_SALE_TAMT  
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6) 
                                       , NVL(H.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD  
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR1
                                  , 0                                     AS TOT_SALE_AMT_CMPR2
                                  , 0                                     AS ORIGIN_SALE_TAMT   
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD  
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , 0                                     AS TOT_SALE_AMT_CMPR1
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR2
                                  , 0                                     AS ORIGIN_SALE_TAMT  
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                            UNION ALL
                            SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.SALE_ORG_CD, 1, 2),SUBSTR(D.SALE_ORG_CD, 3, 2),SUBSTR(D.SALE_ORG_CD, 5, 2), '00','00')) AS ORG_NAME   
                                  , NVL(D.HALL_CD, ' ')                 AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(D.HALL_CD, ' ')
                                  )                                     AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT       
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT  
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2 
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                                     , NVL(D.HALL_CD, ' ')
                          )                    A
                      GROUP BY SUBSTR(A.ORG_CD, 1, 6)
                             , A.HALL_CD
                     UNION ALL
                     SELECT SUBSTR(A.ORG_CD, 1, 6) || '0000'                                  AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , ''                                    AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS ORIGIN_SALE_TAMT  
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6) 
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , ''                                    AS HALL_CD  
                                  , ''                                    AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR1
                                  , 0                                     AS TOT_SALE_AMT_CMPR2
                                  , 0                                     AS ORIGIN_SALE_TAMT 
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.SALE_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , ''                                    AS HALL_CD  
                                  , ''                                    AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , 0                                     AS TOT_SALE_AMT_CMPR1
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR2
                                  , 0                                     AS ORIGIN_SALE_TAMT 
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                            UNION ALL
                            SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.SALE_ORG_CD, 1, 2),SUBSTR(D.SALE_ORG_CD, 3, 2),SUBSTR(D.SALE_ORG_CD, 5, 2), '00','00')) AS ORG_NAME         
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT       
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT    
                                  , 0                                   AS CUST_NCNT        
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2 
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY X.ORG_CD
                     , X.HALL_CD
--------------------------------------------------------------------------------7                     
        ]]>    
    </query>
    <query name="SEL_SALE_HALL4">
        <![CDATA[
        	 SELECT 
        	 		 STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD             -- 조직코드 
        	      , ''                                                                  AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD2||X.ORG_CD||'0000') AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD             AS HALL_CD
                  , X.HALL_NM             AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_OFF   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_ON   -- 실행목표
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT       -- 총매출
                  , X.TOT_SALE_AMT_OFF       -- 총매출
                  , X.TOT_SALE_AMT_ON       -- 총매출
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE        -- 달성율
                  , X.TOT_COMP_RATE      -- 구성비
                  , X.REDU_AMT           -- 할인액
                  , X.NORM_SALE_AMT      -- 매출
                  , X.DC_AMT             -- 에누리F
                  , X.NET_SALE_AMT       -- 순매출
                  , X.SALE_PROF_AMT      -- 이익액
                  , X.PROFRATE           -- 이익율
                  , X.CUST_CNT           -- 객수
                  , X.CUST_NCNT           -- 객수
                  , X.CUST_DANGA         -- 객단가
                  , X.TOT_SALE_AMT_CMPR1      -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_OFF      -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_ON      -- 대비실적1
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1     -- 대비구성비1
                  , X.SALEIRATE1              -- 신장율1
                  , X.TOT_SALE_AMT_CMPR2  	  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , X.TOT_SALE_AMT_CMPR2_OFF  AS TOT_SALE_AMT_CMPR2_OFF      -- 대비실적2
                  , X.TOT_SALE_AMT_CMPR2_ON   AS TOT_SALE_AMT_CMPR2_ON      -- 대비실적2
                  , X.TOT_SALE_AMT_CMPR2_NAVER   AS TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2  	  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , X.SALEIRATE2          	  AS SALEIRATE2              -- 신자율2
                  , ? 					  	  AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                  AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , NVL(H.HALL_CD, ' ')                   AS HALL_CD
                                , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(H.HALL_CD, ' ')
                                  )                                     AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6) 
                                       , NVL(H.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD  
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , NVL(I.HALL_CD, ' ')                   AS HALL_CD  
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(I.HALL_CD, ' ')
                                  )                                       AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , 0                                     AS TOT_SALE_AMT_CMPR1
                                  , 0                                     AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                     AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                     AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR2
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                     AS ORIGIN_SALE_TAMT
                                  , 0                                     AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                     AS ORIGIN_SALE_TAMT_ON
                                  , 0                                     AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , NVL(I.HALL_CD, ' ')
                            UNION ALL
                            SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.BUY_ORG_CD, 1, 2),SUBSTR(D.BUY_ORG_CD, 3, 2),SUBSTR(D.BUY_ORG_CD, 5, 2), '00','00')) AS ORG_NAME   
                                  , NVL(D.HALL_CD, ' ')                 AS HALL_CD
                                  , (SELECT MAX(P.COMM_NAME1)
                                     FROM COM.TC_COMMCODE P
                                    WHERE P.SYS_PART = 'D'
                                      AND P.COMM_PART = 'P197'
                                      AND P.COMM_CODE = NVL(D.HALL_CD, ' ')
                                  )                                     AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON  
                                  , 0                                   AS TOT_SALE_AMT_NAVER     
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT           
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                                     , NVL(D.HALL_CD, ' ')
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                             , A.HALL_CD
                     UNION ALL
                     SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT 
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'T'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                              AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                 AS ORG_NAME
                                , ''                                    AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND A.STR_CD    = ?    -- 점 
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6) 
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , ''                                    AS HALL_CD  
                                  , ''                                    AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT F.STR_CD                              AS STR_CD
                                  , SUBSTR(I.BUY_ORG_CD,1,6) || '0000'   AS ORG_CD
                                  , MAX(G.ORG_SHORT_NAME)                 AS ORG_NAME
                                  , ''                                    AS HALL_CD  
                                  , ''                                    AS HALL_NM  
                                  , 0                                     AS SALE_QTY
                                  , 0                                     AS TOT_SALE_AMT
                                  , 0                                     AS TOT_SALE_AMT_OFF
                                  , 0                                     AS TOT_SALE_AMT_ON
                                  , 0                                     AS TOT_SALE_AMT_NAVER
                                  , 0                                     AS VAT_AMT
                                  , 0                                     AS REDU_AMT
                                  , 0                                     AS NORM_SALE_AMT
                                  , 0                                     AS DC_AMT
                                  , 0                                     AS NET_SALE_AMT
                                  , 0                                     AS SALE_PROF_AMT
                                  , 0                                     AS CUST_CNT
                                  , 0                                     AS CUST_NCNT
                                  , 0                                     AS SAL_COST_PRC
                                  , 0                                     AS TOT_SALE_AMT_CMPR1
                                  , 0                                     AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                     AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                     AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))            AS TOT_SALE_AMT_CMPR2
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                     AS ORIGIN_SALE_TAMT
                                  , 0                                     AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                     AS ORIGIN_SALE_TAMT_ON
                                  , 0                                     AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE F.STR_CD    = ?   -- 점 
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                            UNION ALL
                            SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.BUY_ORG_CD, 1, 2),SUBSTR(D.BUY_ORG_CD, 3, 2),SUBSTR(D.BUY_ORG_CD, 5, 2), '00','00')) AS ORG_NAME         
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON       
                                  , 0                                   AS TOT_SALE_AMT_NAVER
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT      
                                  , 0                                   AS CUST_NCNT     
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
                     , X.HALL_CD
--------------------------------------------------------------------------------8                     
        ]]>    
    </query>
     
    <query name="SEL_SALE_PC1">
        <![CDATA[
        	 SELECT 
        	 		STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2        	 
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD            AS HALL_CD
                  , X.HALL_NM            AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , 0                    AS TOT_SALE_AMT_CMPR2
                  , 0                    AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                    AS TOT_SALE_AMT_CMPR2_ON
                  , 0                    AS TOT_SALE_AMT_CMPR2_NAVER 
                  , 0                    AS TOT_COMP_RATE_CMPR2
                  , 0                    AS SALEIRATE2
                  , ? 					 AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6) || '0000'                                    AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                    AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , SUBSTR(H.SALE_ORG_CD,1,8) || '00'        AS HALL_CD
                                , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(H.SALE_ORG_CD,1,2), SUBSTR(H.SALE_ORG_CD,3,2), SUBSTR(H.SALE_ORG_CD,5,2), SUBSTR(H.SALE_ORG_CD,7,2),'00')) AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER 
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                                       , SUBSTR(H.SALE_ORG_CD,1,8)
                             UNION ALL
                             SELECT F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , SUBSTR(I.SALE_ORG_CD,1,8)||'00'   AS HALL_CD                                                                                                       
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(I.SALE_ORG_CD,1,2), SUBSTR(I.SALE_ORG_CD,3,2), SUBSTR(I.SALE_ORG_CD,5,2), SUBSTR(I.SALE_ORG_CD,7,2),'00')) AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON        
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                          
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT    
                                  , 0                                 AS CUST_NCNT                                                                                                   
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON     
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                       
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON  
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON  
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                                     , SUBSTR(I.SALE_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , SUBSTR(D.SALE_ORG_CD, 1, 8)||'00'   AS HALL_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.SALE_ORG_CD,1,2), SUBSTR(D.SALE_ORG_CD,3,2), SUBSTR(D.SALE_ORG_CD,5,2), SUBSTR(D.SALE_ORG_CD,7,2),'00')) AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON    
                                  , 0                                   AS TOT_SALE_AMT_NAVER  
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                                     , SUBSTR(D.SALE_ORG_CD, 1, 8)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                             , A.HALL_CD
                     UNION ALL
                     SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6) || '0000'                                  AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))   = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)) )*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON    
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                             
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT
                                  , 0                                 AS CUST_NCNT                                                                                                      
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON  
                                  , 0                                   AS TOT_SALE_AMT_NAVER     
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON 
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
                     , X.HALL_CD
--------------------------------------------------------------------------------9                     
        ]]>    
    </query>
    <query name="SEL_SALE_PC2">
        <![CDATA[
        	 SELECT 
        	 		STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
        	      , ''                                                                  AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD2||X.ORG_CD||'0000') AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD            AS HALL_CD
                  , X.HALL_NM            AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , 0                    AS TOT_SALE_AMT_CMPR2
                  , 0                    AS TOT_SALE_AMT_CMPR2_OFF
                  , 0                    AS TOT_SALE_AMT_CMPR2_ON
                  , 0                    AS TOT_SALE_AMT_CMPR2_NAVER
                  , 0                    AS TOT_COMP_RATE_CMPR2
                  , 0                    AS SALEIRATE2
                  , ? 					 AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                    AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , SUBSTR(H.BUY_ORG_CD,1,8) || '00'        AS HALL_CD
                                , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(H.BUY_ORG_CD,1,2), SUBSTR(H.BUY_ORG_CD,3,2), SUBSTR(H.BUY_ORG_CD,5,2), SUBSTR(H.BUY_ORG_CD,7,2),'00')) AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON 
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                                       , SUBSTR(H.BUY_ORG_CD,1,8)
                             UNION ALL
                             SELECT F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , SUBSTR(I.BUY_ORG_CD,1,8)||'00'   AS HALL_CD                                                                                                       
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(I.BUY_ORG_CD,1,2), SUBSTR(I.BUY_ORG_CD,3,2), SUBSTR(I.BUY_ORG_CD,5,2), SUBSTR(I.BUY_ORG_CD,7,2),'00')) AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON     
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                             
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT  
                                  , 0                                 AS CUST_NCNT                                                                                                    
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON      
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER 
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , SUBSTR(I.BUY_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , SUBSTR(D.BUY_ORG_CD, 1, 8)||'00'   AS HALL_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.BUY_ORG_CD,1,2), SUBSTR(D.BUY_ORG_CD,3,2), SUBSTR(D.BUY_ORG_CD,5,2), SUBSTR(D.BUY_ORG_CD,7,2),'00')) AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON   
                                  , 0                                   AS TOT_SALE_AMT_NAVER    
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT
                                  , 0                                   AS CUST_NCNT           
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                                     , SUBSTR(D.BUY_ORG_CD, 1, 8)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                             , A.HALL_CD
                     UNION ALL
                     SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))   = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)) )*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON 
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON        
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                          
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON    
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                    
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE D.STR_CD    = ?   -- 점 
                                AND D.SALE_DT     >= ?  -- 매출기간(시작)
                                AND D.SALE_DT     <= ?  -- 매출기간(종료)
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON
                                  , 0                                   AS TOT_SALE_AMT_NAVER     
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT
                                  , 0                                   AS CUST_NCNT           
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
                     , X.HALL_CD
--------------------------------------------------------------------------------10                     
        ]]>    
    </query>
    <query name="SEL_SALE_PC3">
        <![CDATA[
        	 SELECT 
        	 		 STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  SUBSTR(X.ORG_CD, 1,4)||'000000') AS ORG_NAME2        	 
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD           AS HALL_CD
                  , X.HALL_NM           AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_SALE_AMT_CMPR2_OFF
                  , X.TOT_SALE_AMT_CMPR2_ON
                  , X.TOT_SALE_AMT_CMPR2_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , ? 					  AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6) || '0000'                                    AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                    AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , SUBSTR(H.SALE_ORG_CD,1,8) || '00'        AS HALL_CD
                                , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(H.SALE_ORG_CD,1,2), SUBSTR(H.SALE_ORG_CD,3,2), SUBSTR(H.SALE_ORG_CD,5,2), SUBSTR(H.SALE_ORG_CD,7,2),'00')) AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                                       , SUBSTR(H.SALE_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , SUBSTR(I.SALE_ORG_CD,1,8)||'00'   AS HALL_CD                                                                                                       
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(I.SALE_ORG_CD,1,2), SUBSTR(I.SALE_ORG_CD,3,2), SUBSTR(I.SALE_ORG_CD,5,2), SUBSTR(I.SALE_ORG_CD,7,2),'00')) AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT   
                                  , 0                                 AS CUST_NCNT                                                                                                    
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%')  THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON   
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                     
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?        -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                                     , SUBSTR(I.SALE_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , SUBSTR(I.SALE_ORG_CD,1,8)||'00'   AS HALL_CD                                                                                                       
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(I.SALE_ORG_CD,1,2), SUBSTR(I.SALE_ORG_CD,3,2), SUBSTR(I.SALE_ORG_CD,5,2), SUBSTR(I.SALE_ORG_CD,7,2),'00')) AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON  
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                               
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER            
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON   
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER 
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                                     , SUBSTR(I.SALE_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , SUBSTR(D.SALE_ORG_CD, 1, 8)||'00'   AS HALL_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.SALE_ORG_CD,1,2), SUBSTR(D.SALE_ORG_CD,3,2), SUBSTR(D.SALE_ORG_CD,5,2), SUBSTR(D.SALE_ORG_CD,7,2),'00')) AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON    
                                  , 0                                   AS TOT_SALE_AMT_NAVER   
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                                     , SUBSTR(D.SALE_ORG_CD, 1, 8)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                             , A.HALL_CD
                     UNION ALL
                     SELECT A.STR_CD,SUBSTR(A.ORG_CD, 1, 6) || '0000'                                  AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER 
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))   = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)) )*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.SALE_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON 
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON   
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                              
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT    
                                  , 0                                 AS CUST_NCNT                                                                                                  
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%')THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                       
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.SALE_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON    
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                             
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT
                                  , 0                                 AS CUST_NCNT                                                                                                      
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_NAVER            
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.SALE_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.SALE_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON   
                                  , 0                                   AS TOT_SALE_AMT_NAVER   
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT  
                                  , 0                                   AS CUST_NCNT         
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD 
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.SALE_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 1, 6)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
                     , X.HALL_CD
--------------------------------------------------------------------------------11                     
        ]]>    
    </query>
    <query name="SEL_SALE_PC4">
        <![CDATA[
        	 SELECT 
        	 		 STR_CD, DPS.FN_GET_STORE_NAME(STR_CD) STR_NAME,X.ORG_CD
        	      , ''                                                                  AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD2||X.ORG_CD||'0000') AS ORG_NAME
                  , X.SKU_FLAG
                  , X.HALL_CD           AS HALL_CD
                  , X.HALL_NM           AS HALL_NM 
                  , X.ORIGIN_SALE_TAMT
                  , X.ORIGIN_SALE_TAMT_OFF
                  , X.ORIGIN_SALE_TAMT_ON
                  , X.ORIGIN_SALE_TAMT_NAVER
                  , X.TOT_SALE_AMT
                  , X.TOT_SALE_AMT_OFF
                  , X.TOT_SALE_AMT_ON
                  , X.TOT_SALE_AMT_NAVER
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_SALE_AMT_CMPR1_OFF
                  , X.TOT_SALE_AMT_CMPR1_ON
                  , X.TOT_SALE_AMT_CMPR1_NAVER
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
                  , ? 					  AS UNIT
              FROM ( SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , A.HALL_CD                                                         AS HALL_CD
                          , MAX(A.HALL_NM)                                                    AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , SUBSTR(H.BUY_ORG_CD,1,8) || '00'        AS HALL_CD
                                , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(H.BUY_ORG_CD,1,2), SUBSTR(H.BUY_ORG_CD,3,2), SUBSTR(H.BUY_ORG_CD,5,2), SUBSTR(H.BUY_ORG_CD,7,2),'00')) AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON 
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                                       , SUBSTR(H.BUY_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                      
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , SUBSTR(I.BUY_ORG_CD,1,8)||'00'   AS HALL_CD                                                                                                       
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(I.BUY_ORG_CD,1,2), SUBSTR(I.BUY_ORG_CD,3,2), SUBSTR(I.BUY_ORG_CD,5,2), SUBSTR(I.BUY_ORG_CD,7,2),'00')) AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON 
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                 
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT   
                                  , 0                                 AS CUST_NCNT                                                                                                   
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                       
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , SUBSTR(I.BUY_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , SUBSTR(I.BUY_ORG_CD,1,8)||'00'   AS HALL_CD                                                                                                       
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(I.BUY_ORG_CD,1,2), SUBSTR(I.BUY_ORG_CD,3,2), SUBSTR(I.BUY_ORG_CD,5,2), SUBSTR(I.BUY_ORG_CD,7,2),'00')) AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON 
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                 
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT 
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER            
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON 
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER   
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                                     , SUBSTR(I.BUY_ORG_CD,1,8)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , SUBSTR(D.BUY_ORG_CD, 1, 8)||'00'   AS HALL_CD
                                  , MAX(DPS.FN_GET_ORG_SHORT_NAME(SUBSTR(D.BUY_ORG_CD,1,2), SUBSTR(D.BUY_ORG_CD,3,2), SUBSTR(D.BUY_ORG_CD,5,2), SUBSTR(D.BUY_ORG_CD,7,2),'00'))  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON  
                                  , 0                                   AS TOT_SALE_AMT_NAVER    
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT 
                                  , 0                                   AS CUST_NCNT          
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                                     , SUBSTR(D.BUY_ORG_CD, 1, 8)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                             , A.HALL_CD
                     UNION ALL
                     SELECT A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)                                            AS ORG_CD
                          , MIN(SUBSTR(A.ORG_CD, 1, 4))                                       AS ORG_CD2
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , 'XX'                                                              AS HALL_CD
                          , '팀별소계'                                                        AS HALL_NM
                          , SUM(NVL(A.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_OFF,0))                                    AS ORIGIN_SALE_TAMT_OFF
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_ON,0))                                    AS ORIGIN_SALE_TAMT_ON
                          , SUM(NVL(A.ORIGIN_SALE_TAMT_NAVER,0))                                    AS ORIGIN_SALE_TAMT_NAVER
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(NVL(A.TOT_SALE_AMT_OFF,0))                                        AS TOT_SALE_AMT_OFF
                          , SUM(NVL(A.TOT_SALE_AMT_ON,0))                                        AS TOT_SALE_AMT_ON
                          , SUM(NVL(A.TOT_SALE_AMT_NAVER,0))                                        AS TOT_SALE_AMT_NAVER
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(A.TOT_SALE_AMT_CMPR1)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(A.TOT_SALE_AMT_CMPR1_OFF)                                               AS TOT_SALE_AMT_CMPR1_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR1_ON)                                               AS TOT_SALE_AMT_CMPR1_ON
                          , SUM(A.TOT_SALE_AMT_CMPR1_NAVER)                                               AS TOT_SALE_AMT_CMPR1_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR1) / (SUM(SUM(A.TOT_SALE_AMT_CMPR1)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR1) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR1))/SUM(A.TOT_SALE_AMT_CMPR1))*100 END)   AS SALEIRATE1
                          , SUM(A.TOT_SALE_AMT_CMPR2)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(A.TOT_SALE_AMT_CMPR2_OFF)                                               AS TOT_SALE_AMT_CMPR2_OFF
                          , SUM(A.TOT_SALE_AMT_CMPR2_ON)                                               AS TOT_SALE_AMT_CMPR2_ON
                          , SUM(A.TOT_SALE_AMT_CMPR2_NAVER)                                               AS TOT_SALE_AMT_CMPR2_NAVER
                          , SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ()) = 0 THEN 0
                                  ELSE (SUM(A.TOT_SALE_AMT_CMPR2) / (SUM(SUM(A.TOT_SALE_AMT_CMPR2)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(A.TOT_SALE_AMT_CMPR2) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(A.TOT_SALE_AMT_CMPR2))/SUM(A.TOT_SALE_AMT_CMPR2))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(A.ORIGIN_SALE_TAMT,0))   = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(A.ORIGIN_SALE_TAMT,0)) )*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'P'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                                 AS STR_CD
                                , SUBSTR(H.BUY_ORG_CD,1,6) || '0000'      AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                    AS ORG_NAME
                                , ''                                       AS HALL_CD
                                , ''                                       AS HALL_NM
                                , SUM(A.SALE_QTY)                          AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                      AS TOT_SALE_AMT
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME NOT LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_OFF
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR H.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE A.TOT_SALE_AMT END) AS TOT_SALE_AMT_ON
                                , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND H.PUMBUN_NAME LIKE ('%(N%') THEN A.TOT_SALE_AMT ELSE 0 END) AS TOT_SALE_AMT_NAVER
                                , SUM(A.VAT_AMT)                           AS VAT_AMT
                                , SUM(A.REDU_AMT)                          AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                     AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                            AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                      AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                     AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                          AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                      AS SAL_COST_PRC
                                , 0                                        AS TOT_SALE_AMT_CMPR1
                                , 0                                        AS TOT_SALE_AMT_CMPR1_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR1_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR1_NAVER
                                , 0                                        AS TOT_SALE_AMT_CMPR2
                                , 0                                        AS TOT_SALE_AMT_CMPR2_OFF
                                , 0                                        AS TOT_SALE_AMT_CMPR2_ON
                                , 0                                        AS TOT_SALE_AMT_CMPR2_NAVER
                                , 0                                        AS ORIGIN_SALE_TAMT  
                                , 0                                        AS ORIGIN_SALE_TAMT_OFF  
                                , 0                                        AS ORIGIN_SALE_TAMT_ON 
                                , 0                                        AS ORIGIN_SALE_TAMT_NAVER
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                                , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND Y.PUMBUN_CD(+)= H.PUMBUN_CD
                              AND B.STR_CD    = ?               -- 점 
                              AND A.SALE_DT     >= ?        -- 매출기간(시작)
                              AND A.SALE_DT     <= ?        -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , SUBSTR(H.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                                  
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT  
                                  , 0                                 AS CUST_NCNT                                                                                                    
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR1_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR1_NAVER                                                                                       
                                  , 0                                 AS TOT_SALE_AMT_CMPR2
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR2_NAVER
                                  , 0                                 AS ORIGIN_SALE_TAMT  
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON 
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간1(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간1(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    F.STR_CD                          AS STR_CD                                                                                                        
                                  , SUBSTR(I.BUY_ORG_CD,1,6)||'0000' AS ORG_CD                                                                                                        
                                  , MAX(G.ORG_SHORT_NAME)             AS ORG_NAME                                                                                                      
                                  , ''                                AS HALL_CD                                                                                                       
                                  , ''                                AS HALL_NM
                                  , 0                                 AS SALE_QTY                                                                                                      
                                  , 0                                 AS TOT_SALE_AMT
                                  , 0                                 AS TOT_SALE_AMT_OFF
                                  , 0                                 AS TOT_SALE_AMT_ON    
                                  , 0                                 AS TOT_SALE_AMT_NAVER                                                                                             
                                  , 0                                 AS VAT_AMT                                                                                                       
                                  , 0                                 AS REDU_AMT                                                                                                      
                                  , 0                                 AS NORM_SALE_AMT                                                                                                 
                                  , 0                                 AS DC_AMT                                                                                                        
                                  , 0                                 AS NET_SALE_AMT                                                                                                  
                                  , 0                                 AS SALE_PROF_AMT                                                                                                 
                                  , 0                                 AS CUST_CNT  
                                  , 0                                 AS CUST_NCNT                                                                                                     
                                  , 0                                 AS SAL_COST_PRC                                                                                                  
                                  , 0                                 AS TOT_SALE_AMT_CMPR1                                                                                            
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                 AS TOT_SALE_AMT_CMPR1_NAVER
                                  , SUM(NVL(F.TOT_SALE_AMT,0))        AS TOT_SALE_AMT_CMPR2  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_OFF                                                                                            
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR I.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(F.TOT_SALE_AMT,0) END) AS TOT_SALE_AMT_CMPR2_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND I.PUMBUN_NAME LIKE ('%(N%') THEN NVL(F.TOT_SALE_AMT,0) ELSE 0 END) AS TOT_SALE_AMT_CMPR2_NAVER            
                                  , 0                                 AS ORIGIN_SALE_TAMT
                                  , 0                                 AS ORIGIN_SALE_TAMT_OFF  
                                  , 0                                 AS ORIGIN_SALE_TAMT_ON   
                                  , 0                                 AS ORIGIN_SALE_TAMT_NAVER  
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND Y.PUMBUN_CD(+)= F.PUMBUN_CD
                                AND F.STR_CD    = ?         -- 점
                                AND F.SALE_DT     >= ?  -- 대비기간2(시작)
                                AND F.SALE_DT     <= ?  -- 대비기간2(종료)
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.STR_CD
                                     , SUBSTR(I.BUY_ORG_CD,1,6)
                             UNION ALL
                             SELECT 
                                    C.STR_CD AS STR_CD             
                                  , SUBSTR(D.BUY_ORG_CD, 1, 6)||'0000' AS ORG_CD
                                  , ''                                  AS ORG_NAME           
                                  , ''                                  AS HALL_CD
                                  , ''                                  AS HALL_NM            
                                  , 0                                   AS SALE_QTY           
                                  , 0                                   AS TOT_SALE_AMT
                                  , 0                                   AS TOT_SALE_AMT_OFF
                                  , 0                                   AS TOT_SALE_AMT_ON  
                                  , 0                                   AS TOT_SALE_AMT_NAVER     
                                  , 0                                   AS VAT_AMT            
                                  , 0                                   AS REDU_AMT           
                                  , 0                                   AS NORM_SALE_AMT      
                                  , 0                                   AS DC_AMT             
                                  , 0                                   AS NET_SALE_AMT       
                                  , 0                                   AS SALE_PROF_AMT      
                                  , 0                                   AS CUST_CNT  
                                  , 0                                   AS CUST_NCNT         
                                  , 0                                   AS SAL_COST_PRC       
                                  , 0                                   AS TOT_SALE_AMT_CMPR1
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR1_NAVER
                                  , 0                                   AS TOT_SALE_AMT_CMPR2
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_OFF
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_ON
                                  , 0                                   AS TOT_SALE_AMT_CMPR2_NAVER
                                  , SUM(NVL(C.ORIGIN_SALE_TAMT,0))      AS ORIGIN_SALE_TAMT  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME NOT LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_OFF  
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL OR D.PUMBUN_NAME LIKE ('%(N%') THEN 0 ELSE NVL(C.ORIGIN_SALE_TAMT,0) END)      AS ORIGIN_SALE_TAMT_ON 
                                  , SUM(CASE WHEN Y.PUMBUN_CD IS NULL AND D.PUMBUN_NAME LIKE ('%(N%') THEN NVL(C.ORIGIN_SALE_TAMT,0) ELSE 0 END)      AS ORIGIN_SALE_TAMT_NAVER
                               FROM DPS.PS_ACTPUMBUN C
                                  , DPS.PC_STRPBN D
                                  , (SELECT DISTINCT Y.REFER_CODE  AS PUMBUN_CD
                                     FROM COM.TC_COMMCODE Y
                                    WHERE Y.SYS_PART = 'D'
                                      AND Y.COMM_PART = 'P614'
                                  ) Y
                              WHERE C.STR_CD    = ? -- 점 
                                AND C.EXE_DT     >= ?  -- 매출기간(시작)
                                AND C.EXE_DT     <= ?  -- 매출기간(종료)
                                AND D.STR_CD    = C.STR_CD
                                AND D.PUMBUN_CD = C.PUMBUN_CD
                                AND Y.PUMBUN_CD(+) = D.PUMBUN_CD
                                AND D.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY C.STR_CD
                                     , SUBSTR(D.BUY_ORG_CD, 1, 6)
                          )                    A
                      GROUP BY A.STR_CD,SUBSTR(A.ORG_CD, 5, 2)
                   ) X
              ORDER BY STR_CD,DECODE(SUBSTR(X.ORG_CD,1,4),'0104',NULL,SUBSTR(X.ORG_CD,1,4)) NULLS LAST,(SELECT SORT_ORDER FROM DPS.PC_ORGMST M WHERE M.ORG_CD = X.ORG_CD)
                     , X.HALL_CD
--------------------------------------------------------------------------------12                     
        ]]>    
    </query>
    <query name="SEL_SALE_CORNER4">        
        <![CDATA[
    		
            SELECT 
            		X.ORG_CD
                  , ''                                                                  AS ORG_NAME2
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , 'CHECK' AS HALL_CD
                  , 'CHECK' AS HALL_NM
                  , X.ORIGIN_SALE_TAMT
                  , X.TOT_SALE_AMT
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
              FROM ( SELECT A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , SUM(NVL(C.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , MAX(E.TOT_SALE_AMT)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(MAX(E.TOT_SALE_AMT)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(MAX(E.TOT_SALE_AMT)) OVER ()) = 0 THEN 0
                                  ELSE (MAX(E.TOT_SALE_AMT) / (SUM(MAX(E.TOT_SALE_AMT)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  MAX(E.TOT_SALE_AMT) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- MAX(E.TOT_SALE_AMT))/MAX(E.TOT_SALE_AMT))*100 END)   AS SALEIRATE1
                          , MAX(M.TOT_SALE_AMT)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(MAX(M.TOT_SALE_AMT)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(MAX(M.TOT_SALE_AMT)) OVER ()) = 0 THEN 0
                                  ELSE (MAX(M.TOT_SALE_AMT) / (SUM(MAX(M.TOT_SALE_AMT)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  MAX(M.TOT_SALE_AMT) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- MAX(M.TOT_SALE_AMT))/MAX(M.TOT_SALE_AMT))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(C.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(C.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD
                                , A.SALE_DT
                                , H.BUY_ORG_CD        AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME) AS ORG_NAME
                                , SUM(A.SALE_QTY) AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT) AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT) AS VAT_AMT
                                , SUM(A.REDU_AMT) AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT) AS NORM_SALE_AMT
                                , SUM(A.DC_AMT) AS DC_AMT
                                , SUM(A.NET_SALE_AMT) AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT) AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT) AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)) AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC) AS SAL_COST_PRC
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?
                              AND A.SALE_DT     <= ?
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , H.BUY_ORG_CD
                          )                    A
                          , (SELECT B.STR_CD AS STR_CD
                                  , A.EXE_DT AS EXE_DT
                                  , B.BUY_ORG_CD AS ORG_CD
                                  , SUM(A.ORIGIN_SALE_TAMT) AS ORIGIN_SALE_TAMT
                               FROM DPS.PS_ACTPUMBUN A
                                  , DPS.PC_STRPBN B
                              WHERE A.STR_CD    = B.STR_CD
                                AND A.PUMBUN_CD = B.PUMBUN_CD
                              GROUP BY B.BUY_ORG_CD
                                     , B.STR_CD
                                     , A.EXE_DT)      C
                          , (SELECT I.BUY_ORG_CD                           AS ORG_CD
                                  , SUM(NVL(F.TOT_SALE_AMT,0))             AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE G.STR_CD    = ?
                                AND G.DEPT_CD  LIKE ? || '%'
                                AND G.TEAM_CD  LIKE ? || '%'
                                AND G.PC_CD    LIKE ? || '%'
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND F.SALE_DT     >= ?
                                AND F.SALE_DT     <= ?
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY I.BUY_ORG_CD
                            ) E
                          , (SELECT K.BUY_ORG_CD                           AS ORG_CD
                                  , SUM(NVL(J.TOT_SALE_AMT,0))             AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN J
                                  , DPS.PC_STRPBN K
                                  , DPS.PC_ORGMST L
                              WHERE L.STR_CD    = ?
                                AND L.DEPT_CD  LIKE ? || '%'
                                AND L.TEAM_CD  LIKE ? || '%'
                                AND L.PC_CD    LIKE ? || '%'
                                AND K.STR_CD      = L.STR_CD
                                AND K.BUY_ORG_CD  = L.ORG_CD
                                AND J.STR_CD      = K.STR_CD
                                AND J.PUMBUN_CD   = K.PUMBUN_CD
                                AND J.SALE_DT     >= ?
                                AND J.SALE_DT     <= ?
                                AND K.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY K.BUY_ORG_CD
                            ) M
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                        AND A.SALE_DT    = C.EXE_DT(+)
                        AND A.ORG_CD     = E.ORG_CD(+)
                        AND A.ORG_CD     = M.ORG_CD(+)
                      GROUP BY A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------13            
        ]]>        
    </query>
     <query name="SEL_SALE_CORNER3">        
        <![CDATA[
    		
            SELECT X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , 'CHECK' AS HALL_CD
                  , 'CHECK' AS HALL_NM
                  , X.ORIGIN_SALE_TAMT
                  , X.TOT_SALE_AMT
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
              FROM ( SELECT A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(MAX(C.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()                      AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(C.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(C.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT 
                                  A.STR_CD                             AS STR_CD
                                , H.SALE_ORG_CD                        AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)                AS ORG_NAME
                                , SUM(A.SALE_QTY)                      AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                  AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT)                       AS VAT_AMT
                                , SUM(A.REDU_AMT)                      AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                 AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                        AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                  AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                 AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                      AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                  AS SAL_COST_PRC
                                , 0                                    AS TOT_SALE_AMT_CMPR1
                                , 0                                    AS TOT_SALE_AMT_CMPR2
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?      -- 매출기간시작
                              AND A.SALE_DT     <= ?      -- 매출기간종료
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT
                                , 0                                  AS CUST_NCNT          
                                , 0                                  AS SAL_COST_PRC      
                                , SUM(NVL(F.TOT_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR1
                                , 0                                  AS TOT_SALE_AMT_CMPR2
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.SALE_DT     >= ?        -- 대비기간시작1
                              AND F.SALE_DT     <= ?        -- 대비기간종료1
                              AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                            GROUP BY F.STR_CD
                                   , I.SALE_ORG_CD
                           UNION ALL
                           SELECT 
                                  F.STR_CD                           AS STR_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME          
                                , 0                                  AS SALE_QTY          
                                , 0                                  AS TOT_SALE_AMT      
                                , 0                                  AS VAT_AMT           
                                , 0                                  AS REDU_AMT          
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT            
                                , 0                                  AS NET_SALE_AMT      
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT    
                                , 0                                  AS CUST_NCNT       
                                , 0                                  AS SAL_COST_PRC      
                                , 0                                  AS TOT_SALE_AMT_CMPR1
                                , SUM(NVL(F.TOT_SALE_AMT,0))         AS TOT_SALE_AMT_CMPR2
                             FROM DPS.PS_DAYPBN F
                                , DPS.PC_STRPBN I
                                , DPS.PC_ORGMST G
                            WHERE G.STR_CD    = ?
                              AND G.DEPT_CD  LIKE ? || '%'
                              AND G.TEAM_CD  LIKE ? || '%'
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.SALE_DT     >= ?        -- 대비기간시작2
                              AND F.SALE_DT     <= ?        -- 대비기간종료2
                              AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                            GROUP BY F.STR_CD
                                   , I.SALE_ORG_CD
                          )  A
                          , (SELECT K.ORG_CD                        AS ORG_CD
                                  , SUM(NVL(K.ORIGIN_SALE_TAMT,0))  AS ORIGIN_SALE_TAMT
                               FROM DPS.PS_ACTPC  K
                              WHERE K.STR_CD = ?
                                AND K.EXE_DT >= ? 
                                AND K.EXE_DT <= ?
                              GROUP BY K.ORG_CD
                            )  C
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                      GROUP BY A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------14            
        ]]>        
    </query>
    
    <query name="SEL_SALE_CORNER2">        
        <![CDATA[
    		SELECT 
    				X.ORG_CD
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG
                  , 'CHECK' AS HALL_CD
                  , 'CHECK' AS HALL_NM
                  , X.ORIGIN_SALE_TAMT
                  , X.TOT_SALE_AMT
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , 0                     AS TOT_SALE_AMT_CMPR2
                  , 0                     AS TOT_COMP_RATE_CMPR2
                  , 0                     AS SALEIRATE2
              FROM ( SELECT A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , SUM(NVL(C.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(E.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(NVL(E.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(E.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(E.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(E.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  SUM(NVL(E.TOT_SALE_AMT,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(E.TOT_SALE_AMT,0)))/SUM(NVL(E.TOT_SALE_AMT,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN SUM(NVL(C.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(C.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD
                                , A.SALE_DT
                                , H.BUY_ORG_CD        AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME) AS ORG_NAME
                                , SUM(A.SALE_QTY) AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT) AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT) AS VAT_AMT
                                , SUM(A.REDU_AMT) AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT) AS NORM_SALE_AMT
                                , SUM(A.DC_AMT) AS DC_AMT
                                , SUM(A.NET_SALE_AMT) AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT) AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT) AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC) AS SAL_COST_PRC
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?
                              AND A.SALE_DT     <= ?
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , A.SALE_DT
                                       , H.BUY_ORG_CD
                          )                    A
                          , (SELECT B.STR_CD AS STR_CD
                                  , A.EXE_DT AS EXE_DT
                                  , B.BUY_ORG_CD AS ORG_CD
                                  , SUM(A.ORIGIN_SALE_TAMT) AS ORIGIN_SALE_TAMT
                               FROM DPS.PS_ACTPUMBUN A
                                  , DPS.PC_STRPBN B
                              WHERE A.STR_CD    = B.STR_CD
                                AND A.PUMBUN_CD = B.PUMBUN_CD
                              GROUP BY B.BUY_ORG_CD
                                     , B.STR_CD
                                     , A.EXE_DT)      C
                          , (SELECT I.BUY_ORG_CD                       AS ORG_CD
                                  , D.SALE_DT                          AS SALE_DT
                                  , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                                  , DPS.PS_SCHEDULE    D
                              WHERE D.STR_CD    = ?
                                AND D.SALE_DT     >= ?
                                AND D.SALE_DT     <= ?
                                AND G.STR_CD    = ?
                                AND G.DEPT_CD  LIKE ? || '%'
                                AND G.TEAM_CD  LIKE ? || '%'
                                AND G.PC_CD    LIKE ? || '%'
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD  = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND F.STR_CD      = D.STR_CD
                                AND F.SALE_DT     = D.CMPR_DT
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY I.BUY_ORG_CD
                                     , D.SALE_DT
                            ) E
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                        AND A.SALE_DT    = C.EXE_DT(+)
                        AND A.ORG_CD     = E.ORG_CD(+)
                        AND A.SALE_DT    = E.SALE_DT(+)
                      GROUP BY A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------15            
        ]]>        
    </query>
    
    <query name="SEL_SALE_CORNER">        
        <![CDATA[
             SELECT 
             		 X.ORG_CD                     -- 조직코드
                  , (SELECT ORG_SHORT_NAME FROM DPS.PC_ORGMST WHERE ORG_CD =  X.ORG_CD) AS ORG_NAME
                  , X.SKU_FLAG                    -- 단품구분                
                  , 'CHECK' AS HELL_CD
                  , 'CHECK' AS HELL_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_NCNT
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
              FROM ( SELECT A.ORG_CD                                                          AS ORG_CD
                          , MAX(A.ORG_NAME)                                                   AS ORG_NAME
                          , NVL(MAX(C.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(MAX(C.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(MAX(C.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , 'C'   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , MAX(B.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                 AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND B.STR_CD    = ?    -- 점 
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.SALE_ORG_CD                      AS ORG_CD                                                                                   
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT  
                                , 0                                  AS CUST_NCNT              
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT_CMPR1                                         
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D                                                                             
                            WHERE D.STR_CD    = ?   -- 점                                                                     
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점                                                               
                              AND G.DEPT_CD  LIKE ? || '%'                                                                       
                              AND G.TEAM_CD  LIKE ? || '%'                                                                       
                              AND G.PC_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                            GROUP BY F.STR_CD
                                   , I.SALE_ORG_CD
                          )  A
                          , (SELECT B.SALE_ORG_CD AS ORG_CD
                                  , SUM(A.ORIGIN_SALE_TAMT) AS ORIGIN_SALE_TAMT
                               FROM DPS.PS_ACTPUMBUN A
                                  , DPS.PC_STRPBN B
                              WHERE A.STR_CD    = ?
                                AND A.EXE_DT    >= ?
                                AND A.EXE_DT    <= ?
                                AND A.STR_CD    = B.STR_CD
                                AND A.PUMBUN_CD = B.PUMBUN_CD
                              GROUP BY B.SALE_ORG_CD
                          ) C
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                      GROUP BY A.ORG_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------16            
        ]]>        
    </query>
    <query name="SEL_SALE_BRAND3">        
        <![CDATA[
    		
             SELECT 
             		X.ORG_CD
                  , X.ORG_NAME
                  , X.SKU_FLAG
                  , 'CHECKBRANDT' AS HALL_CD
                  , 'CHECKBRANDT' AS HALL_NM
                  , X.ORIGIN_SALE_TAMT
                  , X.TOT_SALE_AMT
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
              FROM ( SELECT A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , SUM(NVL(C.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , MAX(E.TOT_SALE_AMT)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(MAX(E.TOT_SALE_AMT)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(MAX(E.TOT_SALE_AMT)) OVER ()) = 0 THEN 0
                                  ELSE (MAX(E.TOT_SALE_AMT) / (SUM(MAX(E.TOT_SALE_AMT)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  MAX(E.TOT_SALE_AMT) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- MAX(E.TOT_SALE_AMT))/MAX(E.TOT_SALE_AMT))*100 END)   AS SALEIRATE1
                          , MAX(M.TOT_SALE_AMT)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(MAX(M.TOT_SALE_AMT)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(MAX(M.TOT_SALE_AMT)) OVER ()) = 0 THEN 0
                                  ELSE (MAX(M.TOT_SALE_AMT) / (SUM(MAX(M.TOT_SALE_AMT)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  MAX(M.TOT_SALE_AMT) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- MAX(M.TOT_SALE_AMT))/MAX(M.TOT_SALE_AMT))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(C.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(C.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD
                                , A.SALE_DT
                                , A.PUMBUN_CD                 AS PUMBUN_CD
                                , H.SALE_ORG_CD               AS ORG_CD
                                , H.PUMBUN_NAME               AS PUMBUN_NAME
                                , A.SALE_QTY                  AS SALE_QTY
                                , A.TOT_SALE_AMT              AS TOT_SALE_AMT
                                , A.VAT_AMT                   AS VAT_AMT
                                , A.REDU_AMT                  AS REDU_AMT
                                , A.NORM_SALE_AMT             AS NORM_SALE_AMT
                                , A.DC_AMT                    AS DC_AMT
                                , A.NET_SALE_AMT              AS NET_SALE_AMT
                                , A.SALE_PROF_AMT             AS SALE_PROF_AMT
                                , A.CUST_CNT                  AS CUST_CNT
                                , CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END                         AS CUST_NCNT
                                , A.SAL_COST_PRC              AS SAL_COST_PRC
                                , H.SKU_FLAG                  AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD       = B.STR_CD
                              AND H.SALE_ORG_CD  = B.ORG_CD
                              AND A.STR_CD       = H.STR_CD
                              AND A.PUMBUN_CD    = H.PUMBUN_CD
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD   LIKE ? || '%'
                              AND B.TEAM_CD   LIKE ? || '%'
                              AND B.PC_CD     LIKE ? || '%'
                              AND B.CORNER_CD LIKE ? || '%'
                              AND A.SALE_DT     >= ?
                              AND A.SALE_DT     <= ?
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                          )                    A
                          , DPS.PS_ACTPUMBUN C
                          , (SELECT F.PUMBUN_CD                        AS PUMBUN_CD
                                  , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE G.STR_CD    = ?
                                AND G.DEPT_CD   LIKE ? || '%'
                                AND G.TEAM_CD   LIKE ? || '%'
                                AND G.PC_CD     LIKE ? || '%'
                                AND G.CORNER_CD LIKE ? || '%'
                                AND I.STR_CD      = G.STR_CD
                                AND I.SALE_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND F.SALE_DT     >= ?
                                AND F.SALE_DT     <= ?
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.PUMBUN_CD
                            ) E
                          , (SELECT J.PUMBUN_CD                        AS PUMBUN_CD
                                  , SUM(J.TOT_SALE_AMT)                AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN J
                                  , DPS.PC_STRPBN K
                                  , DPS.PC_ORGMST L
                              WHERE L.STR_CD    = ?
                                AND L.DEPT_CD   LIKE ? || '%'
                                AND L.TEAM_CD   LIKE ? || '%'
                                AND L.PC_CD     LIKE ? || '%'
                                AND L.CORNER_CD LIKE ? || '%'
                                AND K.STR_CD      = L.STR_CD
                                AND K.SALE_ORG_CD = L.ORG_CD
                                AND J.STR_CD      = K.STR_CD
                                AND J.PUMBUN_CD   = K.PUMBUN_CD
                                AND J.SALE_DT     >= ?
                                AND J.SALE_DT     <= ?
                                AND K.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY J.PUMBUN_CD
                            ) M
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                        AND A.SALE_DT    = C.EXE_DT(+)
                        AND A.PUMBUN_CD  = C.PUMBUN_CD(+)
                        AND A.PUMBUN_CD  = E.PUMBUN_CD(+)
                        AND A.PUMBUN_CD  = M.PUMBUN_CD(+)
                      GROUP BY A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD   
--------------------------------------------------------------------------------17                    
        ]]>        
    </query>
    
    <query name="SEL_SALE_BRAND4">  
    	 <![CDATA[
             SELECT 
             		X.ORG_CD
                  , X.ORG_NAME
                  , X.SKU_FLAG
                  , 'CHECKBRANDT' AS HALL_CD
                  , 'CHECKBRANDT' AS HALL_NM
                  , X.ORIGIN_SALE_TAMT
                  , X.TOT_SALE_AMT
                  , X.ACHIEVERATE
                  , X.TOT_COMP_RATE
                  , X.REDU_AMT
                  , X.NORM_SALE_AMT
                  , X.DC_AMT
                  , X.NET_SALE_AMT
                  , X.SALE_PROF_AMT
                  , X.PROFRATE
                  , X.CUST_CNT
                  , X.CUST_NCNT
                  , X.CUST_DANGA
                  , X.TOT_SALE_AMT_CMPR1
                  , X.TOT_COMP_RATE_CMPR1
                  , X.SALEIRATE1
                  , X.TOT_SALE_AMT_CMPR2
                  , X.TOT_COMP_RATE_CMPR2
                  , X.SALEIRATE2
              FROM ( SELECT A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , SUM(NVL(C.ORIGIN_SALE_TAMT,0))                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , MAX(E.TOT_SALE_AMT)                                               AS TOT_SALE_AMT_CMPR1
                          , SUM(MAX(E.TOT_SALE_AMT)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(MAX(E.TOT_SALE_AMT)) OVER ()) = 0 THEN 0
                                  ELSE (MAX(E.TOT_SALE_AMT) / (SUM(MAX(E.TOT_SALE_AMT)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN  MAX(E.TOT_SALE_AMT) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- MAX(E.TOT_SALE_AMT))/MAX(E.TOT_SALE_AMT))*100 END)   AS SALEIRATE1
                          , MAX(M.TOT_SALE_AMT)                                               AS TOT_SALE_AMT_CMPR2
                          , SUM(MAX(M.TOT_SALE_AMT)) OVER ()                                  AS SUM_TOT_SALE_AMT_CMPR2
                          , (CASE WHEN (SUM(MAX(M.TOT_SALE_AMT)) OVER ()) = 0 THEN 0
                                  ELSE (MAX(M.TOT_SALE_AMT) / (SUM(MAX(M.TOT_SALE_AMT)) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR2
                          , (CASE WHEN  MAX(M.TOT_SALE_AMT) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- MAX(M.TOT_SALE_AMT))/MAX(M.TOT_SALE_AMT))*100 END)   AS SALEIRATE2
                          , (CASE WHEN SUM(NVL(C.ORIGIN_SALE_TAMT,0))  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/SUM(NVL(C.ORIGIN_SALE_TAMT,0)))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD
                                , A.SALE_DT
                                , A.PUMBUN_CD                 AS PUMBUN_CD
                                , H.BUY_ORG_CD               AS ORG_CD
                                , H.PUMBUN_NAME               AS PUMBUN_NAME
                                , A.SALE_QTY                  AS SALE_QTY
                                , A.TOT_SALE_AMT              AS TOT_SALE_AMT
                                , A.VAT_AMT                   AS VAT_AMT
                                , A.REDU_AMT                  AS REDU_AMT
                                , A.NORM_SALE_AMT             AS NORM_SALE_AMT
                                , A.DC_AMT                    AS DC_AMT
                                , A.NET_SALE_AMT              AS NET_SALE_AMT
                                , A.SALE_PROF_AMT             AS SALE_PROF_AMT
                                , A.CUST_CNT                  AS CUST_CNT
                                , CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END                          AS CUST_NCNT
                                , A.SAL_COST_PRC              AS SAL_COST_PRC
                                , H.SKU_FLAG                  AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD       = B.STR_CD
                              AND H.BUY_ORG_CD  = B.ORG_CD
                              AND A.STR_CD       = H.STR_CD
                              AND A.PUMBUN_CD    = H.PUMBUN_CD
                              AND B.STR_CD    = ?
                              AND B.DEPT_CD   LIKE ? || '%'
                              AND B.TEAM_CD   LIKE ? || '%'
                              AND B.PC_CD     LIKE ? || '%'
                              AND B.CORNER_CD LIKE ? || '%'
                              AND A.SALE_DT     >= ?
                              AND A.SALE_DT     <= ?
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                          )                    A
                          , DPS.PS_ACTPUMBUN C
                          , (SELECT F.PUMBUN_CD                        AS PUMBUN_CD
                                  , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN F
                                  , DPS.PC_STRPBN I
                                  , DPS.PC_ORGMST G
                              WHERE G.STR_CD    = ?
                                AND G.DEPT_CD   LIKE ? || '%'
                                AND G.TEAM_CD   LIKE ? || '%'
                                AND G.PC_CD     LIKE ? || '%'
                                AND G.CORNER_CD LIKE ? || '%'
                                AND I.STR_CD      = G.STR_CD
                                AND I.BUY_ORG_CD = G.ORG_CD
                                AND F.STR_CD      = I.STR_CD
                                AND F.PUMBUN_CD   = I.PUMBUN_CD
                                AND F.SALE_DT     >= ?
                                AND F.SALE_DT     <= ?
                                AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY F.PUMBUN_CD
                            ) E
                          , (SELECT J.PUMBUN_CD                        AS PUMBUN_CD
                                  , SUM(J.TOT_SALE_AMT)                AS TOT_SALE_AMT
                               FROM DPS.PS_DAYPBN J
                                  , DPS.PC_STRPBN K
                                  , DPS.PC_ORGMST L
                              WHERE L.STR_CD    = ?
                                AND L.DEPT_CD   LIKE ? || '%'
                                AND L.TEAM_CD   LIKE ? || '%'
                                AND L.PC_CD     LIKE ? || '%'
                                AND L.CORNER_CD LIKE ? || '%'
                                AND K.STR_CD      = L.STR_CD
                                AND K.BUY_ORG_CD = L.ORG_CD
                                AND J.STR_CD      = K.STR_CD
                                AND J.PUMBUN_CD   = K.PUMBUN_CD
                                AND J.SALE_DT     >= ?
                                AND J.SALE_DT     <= ?
                                AND K.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                              GROUP BY J.PUMBUN_CD
                            ) M
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                        AND A.SALE_DT    = C.EXE_DT(+)
                        AND A.PUMBUN_CD  = C.PUMBUN_CD(+)
                        AND A.PUMBUN_CD  = E.PUMBUN_CD(+)
                        AND A.PUMBUN_CD  = M.PUMBUN_CD(+)
                      GROUP BY A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------18                    
     	]]>        
    </query>
    
       <query name="SEL_SALE_BRAND2">        
        <![CDATA[
            SELECT 
            		 X.ORG_CD                     -- 조직코드
                  , X.ORG_NAME   AS ORG_NAME
                  , X.SKU_FLAG                    -- 단품구분                
                  , 'CHECKBRANDT' AS HELL_CD
                  , 'CHECKBRANDT' AS HELL_NAME
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_NCNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
              FROM ( SELECT A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , NVL(MAX(C.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(MAX(C.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(MAX(C.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.PUMBUN_CD                         AS PUMBUN_CD
                                , H.BUY_ORG_CD                       AS ORG_CD
                                , MAX(H.PUMBUN_NAME)                  AS PUMBUN_NAME
                                , MAX(B.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                 AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                          AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.BUY_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND B.STR_CD    = ?    -- 점 
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'                                                                     
                              AND B.CORNER_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , H.PUMBUN_CD
                                       , H.BUY_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.BUY_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT       
                                , 0                                  AS CUST_NCNT          
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D                                                                             
                            WHERE D.STR_CD    = ?   -- 점                                                                     
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점                                                               
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%'                                                                      
                              AND G.CORNER_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.BUY_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.BUY_ORG_CD
                          )  A
                          , (SELECT B.BUY_ORG_CD AS ORG_CD
                                  , B.PUMBUN_CD
                                  , SUM(A.ORIGIN_SALE_TAMT) AS ORIGIN_SALE_TAMT
                               FROM DPS.PS_ACTPUMBUN A
                                  , DPS.PC_STRPBN B
                              WHERE A.STR_CD    = ?
                                AND A.EXE_DT    >= ?
                                AND A.EXE_DT    <= ?
                                AND A.STR_CD    = B.STR_CD
                                AND A.PUMBUN_CD = B.PUMBUN_CD
                              GROUP BY B.BUY_ORG_CD
                                     , B.PUMBUN_CD
                          ) C
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                        AND A.PUMBUN_CD  = C.PUMBUN_CD(+)
                      GROUP BY A.ORG_CD
                             , A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------19                    
    ]]>        
    </query>
    <query name="SEL_SALE_SKU2">        
        <![CDATA[
        	
            
            SELECT 
            		 A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 'E' AS SKU_FLAG
                  , 'CHECKSKU2' AS HELL_CD
                  , 'CHECKSKU2' AS HELL_NM
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                              , SUM(A.CUST_NCNT)                                                                    AS CUST_NCNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2
                  , 0                                                                 AS TOT_COMP_RATE_CMPR2
                  , 0                                                                 AS SALEIRATE2
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.TOT_SALE_AMT     ) AS TOT_SALE_AMT     
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.SALE_QTY ELSE 0 END) AS CUST_NCNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1   
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.BUY_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT  
                          , 0                   AS CUST_NCNT            
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.TOT_SALE_AMT) AS TOT_SALE_AMT_CMPR1   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.BUY_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND D.SALE_DT     >= ?
                        AND D.SALE_DT     <= ?
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
--------------------------------------------------------------------------------20                    
    	 ]]>        
    </query>
     <query name="SEL_SALE_SKU4">        
        <![CDATA[
    		
             SELECT  
             		A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 'E' AS SKU_FLAG
                  , 'CHECKSKU4' AS HALL_CD
                  , 'CHECKSKU4' AS HALL_NM
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                              , SUM(A.CUST_NCNT)                                                                    AS CUST_NCNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR2
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.TOT_SALE_AMT     ) AS TOT_SALE_AMT     
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.SALE_QTY ELSE 0 END) AS CUST_NCNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1 
                          , 0                        AS TOT_SALE_AMT_CMPR2   
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.BUY_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT
                          , 0                   AS CUST_NCNT              
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.TOT_SALE_AMT) AS TOT_SALE_AMT_CMPR1   
                          , 0                   AS TOT_SALE_AMT_CMPR2   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.BUY_ORG_CD   = G.ORG_CD  
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 1
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 1
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT
                          , 0                   AS CUST_NCNT             
                          , 0                   AS SAL_COST_PRC         
                          , 0                   AS TOT_SALE_AMT_CMPR1           
                          , SUM(F.TOT_SALE_AMT) AS TOT_SALE_AMT_CMPR2   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.BUY_ORG_CD    = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 2
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 2
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD         
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
--------------------------------------------------------------------------------21    
    ]]>        
    </query>
     <query name="SEL_SALE_SKU3">        
        <![CDATA[
            
            SELECT  
            		 A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 'E' AS SKU_FLAG
                  , 'CHECKSKU3' AS HALL_CD
                  , 'CHECKSKU3' AS HALL_NM
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                              , SUM(A.CUST_NCNT)                                                                    AS CUST_NCNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))                                  AS TOT_SALE_AMT_CMPR2
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR2,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR2
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR2,0)))*100 END)   AS SALEIRATE2
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.TOT_SALE_AMT     ) AS TOT_SALE_AMT     
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.SALE_QTY ELSE 0 END) AS CUST_NCNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1 
                          , 0                        AS TOT_SALE_AMT_CMPR2   
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.SALE_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT
                          , 0                   AS CUST_NCNT             
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.TOT_SALE_AMT) AS TOT_SALE_AMT_CMPR1   
                          , 0                   AS TOT_SALE_AMT_CMPR2   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.SALE_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 1
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 1
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT  
                          , 0                   AS CUST_NCNT            
                          , 0                   AS SAL_COST_PRC         
                          , 0                   AS TOT_SALE_AMT_CMPR1           
                          , SUM(F.TOT_SALE_AMT) AS TOT_SALE_AMT_CMPR2   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.SALE_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND D.SALE_DT     >= ?  -- 대비기간시작일 2
                        AND D.SALE_DT     <= ?  -- 대비기간종료일 2
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD         
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
--------------------------------------------------------------------------------22                    
     ]]>  
	</query>
      <query name="SEL_SALE_SKU">        
        <![CDATA[
             SELECT  
             		 A.SKU_CD                                                          AS ORG_CD
                  , F.SKU_NAME                                                        AS ORG_NAME
                  , 'E' AS SKU_FLAG
                  , 'CHECKSKU' AS HELL_CD
                  , 'CHECKSKU' AS HELL_NM
                  , 0                                                                 AS ORIGIN_SALE_TAMT
                  , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                  , 0                                                                 AS ACHIEVERATE
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE
                  , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                  , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                  , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                  , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                  , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                      , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0 
                             ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                AS PROFRATE
                              , SUM(A.CUST_CNT)                                                                    AS CUST_CNT
                              , SUM(A.CUST_NCNT)                                                                    AS CUST_NCNT
                  , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)          AS CUST_DANGA
                  , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                        AS TOT_SALE_AMT_CMPR1
                  , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                          ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                     END)                                                             AS TOT_COMP_RATE_CMPR1
                  , (CASE WHEN  SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                     ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                  , 0                                                                 AS TOT_SALE_AMT_CMPR2
                  , 0                                                                 AS TOT_COMP_RATE_CMPR2
                  , 0                                                                 AS SALEIRATE2
               FROM (SELECT A.STR_CD                 AS STR_CD
                          , A.SKU_CD                 AS SKU_CD
                          , SUM(A.SALE_QTY         ) AS SALE_QTY           
                          , SUM(A.TOT_SALE_AMT     ) AS TOT_SALE_AMT     
                          , SUM(A.VAT_AMT          ) AS VAT_AMT          
                          , SUM(A.REDU_AMT         ) AS REDU_AMT         
                          , SUM(A.NORM_SALE_AMT    ) AS NORM_SALE_AMT    
                          , SUM(A.DC_AMT           ) AS DC_AMT           
                          , SUM(A.NET_SALE_AMT     ) AS NET_SALE_AMT     
                          , SUM(A.SALE_PROF_AMT    ) AS SALE_PROF_AMT    
                          , SUM(A.SALE_QTY         ) AS CUST_CNT
                          , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END) AS CUST_NCNT
                          , SUM(A.SAL_COST_PRC     ) AS SAL_COST_PRC  
                          , 0                        AS TOT_SALE_AMT_CMPR1   
                       FROM DPS.PS_DAYSKU    A
                          , DPS.PC_STRPBN    H
                          , DPS.PC_ORGMST    B
                      WHERE H.STR_CD        = B.STR_CD
                        AND H.SALE_ORG_CD   = B.ORG_CD
                        AND A.STR_CD        = H.STR_CD
                        AND A.PUMBUN_CD     = H.PUMBUN_CD
                        AND A.PUMBUN_CD = ?
                        AND A.SALE_DT   >= ?
                        AND A.SALE_DT   <= ?
                     GROUP BY A.STR_CD, A.SKU_CD
                     UNION ALL
                     SELECT F.STR_CD            AS STR_CD               
                          , F.SKU_CD            AS SKU_CD               
                          , 0                   AS SALE_QTY             
                          , 0                   AS TOT_SALE_AMT         
                          , 0                   AS VAT_AMT              
                          , 0                   AS REDU_AMT             
                          , 0                   AS NORM_SALE_AMT        
                          , 0                   AS DC_AMT               
                          , 0                   AS NET_SALE_AMT         
                          , 0                   AS SALE_PROF_AMT        
                          , 0                   AS CUST_CNT  
                          , 0                   AS CUST_NCNT           
                          , 0                   AS SAL_COST_PRC         
                          , SUM(F.TOT_SALE_AMT) AS TOT_SALE_AMT_CMPR1   
                       FROM DPS.PS_DAYSKU F
                          , DPS.PC_STRPBN I
                          , DPS.PC_ORGMST G
                          , DPS.PS_SCHEDULE    D
                      WHERE I.STR_CD        = G.STR_CD
                        AND I.SALE_ORG_CD   = G.ORG_CD
                        AND F.STR_CD        = I.STR_CD
                        AND F.PUMBUN_CD     = I.PUMBUN_CD
                        AND D.SALE_DT     >= ?
                        AND D.SALE_DT     <= ?
                        AND F.STR_CD    = D.STR_CD
                        AND F.SALE_DT   = D.CMPR_DT
                        AND F.PUMBUN_CD = ?
                      GROUP BY F.STR_CD
                             , F.SKU_CD
                    )      A
                  , DPS.PC_STRSKUMST    F
              WHERE A.STR_CD     = F.STR_CD
                AND A.SKU_CD     = F.SKU_CD
              GROUP BY
                    A.SKU_CD
                  , F.SKU_NAME
              ORDER BY
                    A.SKU_CD
--------------------------------------------------------------------------------23                    
     ]]>        
    </query>
    <query name="SEL_SALE_BRAND">        
        <![CDATA[
            SELECT  
            		 X.ORG_CD                     -- 조직코드
                  , X.ORG_NAME   AS ORG_NAME
                  , X.SKU_FLAG                    -- 단품구분                
                  , 'CHECKBRANDT' AS HELL_CD
                  , 'CHECKBRANDT' AS HELL_NM
                  , X.ORIGIN_SALE_TAMT            -- 실행목표
                  , X.TOT_SALE_AMT                -- 총매출
                  , X.ACHIEVERATE                 -- 달성율
                  , X.TOT_COMP_RATE               -- 구성비 
                  , X.REDU_AMT                    -- 할인액
                  , X.NORM_SALE_AMT               -- 매출
                  , X.DC_AMT                      -- 에누리
                  , X.NET_SALE_AMT                -- 순매출
                  , X.SALE_PROF_AMT               -- 이익액
                  , X.PROFRATE                    -- 이익율
                  , X.CUST_CNT                    -- 객수
                  , X.CUST_NCNT                    -- 객수
                  , X.CUST_DANGA                  -- 객단가
                  , X.TOT_SALE_AMT_CMPR1          -- 대비실적1
                  , X.TOT_COMP_RATE_CMPR1         -- 대비구성비1
                  , X.SALEIRATE1                  -- 신장율1                  
                  , 0  AS TOT_SALE_AMT_CMPR2      -- 대비실적2
                  , 0  AS TOT_COMP_RATE_CMPR2     -- 대비구성비2
                  , 0  AS SALEIRATE2              -- 신자율2            
              FROM ( SELECT A.PUMBUN_CD                                                       AS ORG_CD
                          , MAX(A.PUMBUN_NAME)                                                AS ORG_NAME
                          , NVL(MAX(C.ORIGIN_SALE_TAMT),0)                                    AS ORIGIN_SALE_TAMT
                          , SUM(NVL(A.TOT_SALE_AMT,0))                                        AS TOT_SALE_AMT
                          , SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()                           AS SUM_TOT_SALE_AMT
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE
                          , SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))                                  AS TOT_SALE_AMT_CMPR1
                          , SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()                     AS SUM_TOT_SALE_AMT_CMPR1
                          , (CASE WHEN (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ()) = 0 THEN 0
                                  ELSE (SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) / (SUM(SUM(NVL(A.TOT_SALE_AMT_CMPR1,0))) OVER ())*100)
                             END)                                                             AS TOT_COMP_RATE_CMPR1
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)) = 0 THEN 0
                             ELSE  ((SUM(NVL(A.TOT_SALE_AMT,0))- SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))/SUM(NVL(A.TOT_SALE_AMT_CMPR1,0)))*100 END)   AS SALEIRATE1
                          , (CASE WHEN NVL(MAX(C.ORIGIN_SALE_TAMT),0)  = 0 THEN 0
                             ELSE    ( SUM(NVL(A.TOT_SALE_AMT,0))/NVL(MAX(C.ORIGIN_SALE_TAMT),0))*100 END)                          AS ACHIEVERATE
                          , SUM(NVL(A.REDU_AMT,0))                                            AS REDU_AMT
                          , SUM(NVL(A.NORM_SALE_AMT,0))                                       AS NORM_SALE_AMT
                          , SUM(NVL(A.DC_AMT,0))                                              AS DC_AMT
                          , SUM(NVL(A.NET_SALE_AMT,0))                                        AS NET_SALE_AMT
                          , SUM(NVL(A.SALE_PROF_AMT,0))                                       AS SALE_PROF_AMT
                          , (CASE WHEN SUM(NVL(A.TOT_SALE_AMT,0)) = 0 THEN 0
                                  ELSE (SUM(NVL(A.SALE_PROF_AMT,0))/SUM(NVL(A.TOT_SALE_AMT,0)))*100 END)                            AS PROFRATE
                          , SUM(A.CUST_CNT)                                                   AS CUST_CNT
                          , SUM(A.CUST_NCNT)                                                   AS CUST_NCNT
                          , (CASE WHEN SUM(A.CUST_CNT) = 0 THEN 0 ELSE (SUM(A.TOT_SALE_AMT)/SUM(A.CUST_CNT)) END)                   AS CUST_DANGA
                          , MAX(A.SKU_FLAG)   AS SKU_FLAG
                     FROM (SELECT A.STR_CD                            AS STR_CD                                             
                                , H.PUMBUN_CD                         AS PUMBUN_CD
                                , H.SALE_ORG_CD                       AS ORG_CD
                                , MAX(H.PUMBUN_NAME)                  AS PUMBUN_NAME
                                , MAX(B.ORG_SHORT_NAME)               AS ORG_NAME
                                , SUM(A.SALE_QTY)                     AS SALE_QTY
                                , SUM(A.TOT_SALE_AMT)                 AS TOT_SALE_AMT
                                , SUM(A.VAT_AMT)                      AS VAT_AMT
                                , SUM(A.REDU_AMT)                     AS REDU_AMT
                                , SUM(A.NORM_SALE_AMT)                AS NORM_SALE_AMT
                                , SUM(A.DC_AMT)                       AS DC_AMT
                                , SUM(A.NET_SALE_AMT)                 AS NET_SALE_AMT
                                , SUM(A.SALE_PROF_AMT)                AS SALE_PROF_AMT
                                , SUM(A.CUST_CNT)                     AS CUST_CNT
                                , SUM(CASE WHEN H.PUMBUN_NAME LIKE ('%(N%') THEN A.CUST_CNT ELSE 0 END)                     AS CUST_NCNT
                                , SUM(A.SAL_COST_PRC)                 AS SAL_COST_PRC
                                , 0                                   AS TOT_SALE_AMT_CMPR1
                                , MAX(H.SKU_FLAG)                     AS SKU_FLAG
                             FROM DPS.PS_DAYPBN    A
                                , DPS.PC_STRPBN    H
                                , DPS.PC_ORGMST    B
                            WHERE H.STR_CD      = B.STR_CD
                              AND H.SALE_ORG_CD = B.ORG_CD
                              AND A.STR_CD      = H.STR_CD
                              AND A.PUMBUN_CD   = H.PUMBUN_CD
                              AND B.STR_CD    = ?    -- 점 
                              AND B.DEPT_CD  LIKE ? || '%'
                              AND B.TEAM_CD  LIKE ? || '%'
                              AND B.PC_CD    LIKE ? || '%'                                                                     
                              AND B.CORNER_CD    LIKE ? || '%'
                              AND A.SALE_DT     >= ?  -- 매출기간(시작)
                              AND A.SALE_DT     <= ?  -- 매출기간(종료)
                              AND H.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                                GROUP BY A.STR_CD
                                       , H.PUMBUN_CD
                                       , H.SALE_ORG_CD
                           UNION ALL
                           SELECT F.STR_CD                           AS STR_CD                                              
                                , I.PUMBUN_CD                        AS PUMBUN_CD
                                , I.SALE_ORG_CD                      AS ORG_CD
                                , MAX(I.PUMBUN_NAME)                 AS PUMBUN_NAME
                                , MAX(G.ORG_SHORT_NAME)              AS ORG_NAME
                                , 0                                  AS SALE_QTY               
                                , 0                                  AS TOT_SALE_AMT       
                                , 0                                  AS VAT_AMT                 
                                , 0                                  AS REDU_AMT               
                                , 0                                  AS NORM_SALE_AMT     
                                , 0                                  AS DC_AMT                   
                                , 0                                  AS NET_SALE_AMT       
                                , 0                                  AS SALE_PROF_AMT     
                                , 0                                  AS CUST_CNT    
                                , 0                                  AS CUST_NCNT           
                                , 0                                  AS SAL_COST_PRC   
                                , SUM(F.TOT_SALE_AMT)                AS TOT_SALE_AMT_CMPR1 
                                , MAX(I.SKU_FLAG)                    AS SKU_FLAG                                        
                             FROM DPS.PS_DAYPBN F                                                                                  
                                , DPS.PC_STRPBN I                                                                                  
                                , DPS.PC_ORGMST G                                                                                  
                                , DPS.PS_SCHEDULE    D                                                                             
                            WHERE D.STR_CD    = ?   -- 점                                                                     
                              AND D.SALE_DT     >= ?  -- 매출기간(시작)                                                   
                              AND D.SALE_DT     <= ?  -- 매출기간(종료)                                                   
                              AND G.STR_CD    = ?         -- 점                                                               
                              AND G.DEPT_CD      LIKE ? || '%'                                                                       
                              AND G.TEAM_CD      LIKE ? || '%'                                                                       
                              AND G.PC_CD        LIKE ? || '%'                                                                      
                              AND G.CORNER_CD    LIKE ? || '%'
                              AND I.STR_CD      = G.STR_CD
                              AND I.SALE_ORG_CD = G.ORG_CD
                              AND F.STR_CD      = I.STR_CD
                              AND F.PUMBUN_CD   = I.PUMBUN_CD
                              AND F.STR_CD      = D.STR_CD
                              AND F.SALE_DT     = D.CMPR_DT
                              AND I.PUMBUN_CD IN ( SELECT PUMBUN_CD
                                             FROM COM.V_MYORG MYORG
                                            WHERE MYORG.USER_ID     = ?
                                         )
                            GROUP BY F.STR_CD
                                   , I.PUMBUN_CD
                                   , I.SALE_ORG_CD
                          )  A
                          , (SELECT B.SALE_ORG_CD AS ORG_CD
                                  , B.PUMBUN_CD
                                  , SUM(A.ORIGIN_SALE_TAMT) AS ORIGIN_SALE_TAMT
                               FROM DPS.PS_ACTPUMBUN A
                                  , DPS.PC_STRPBN B
                              WHERE A.STR_CD    = ?
                                AND A.EXE_DT    >= ?
                                AND A.EXE_DT    <= ?
                                AND A.STR_CD    = B.STR_CD
                                AND A.PUMBUN_CD = B.PUMBUN_CD
                              GROUP BY B.SALE_ORG_CD
                                     , B.PUMBUN_CD
                          ) C
                      WHERE A.ORG_CD     = C.ORG_CD(+)
                        AND A.PUMBUN_CD  = C.PUMBUN_CD(+)
                      GROUP BY A.ORG_CD
                             , A.PUMBUN_CD
                   ) X
              ORDER BY
                    X.ORG_CD
--------------------------------------------------------------------------------24        	
         ]]>        
    </query>
    <query name="SEARCH_CMPR_DATE">
        <![CDATA[
          SELECT NVL(MAX(CMPR_DT), TO_CHAR(ADD_MONTHS(TO_DATE(?, 'YYYYMMDD'),-12), 'YYYYMMDD'))
              FROM DPS.PS_SCHEDULE
             WHERE STR_CD  = ?
               AND SALE_DT = ?
        ]]>    
    </query>
    
</service>